specVersion: 0.0.2
description: Startrail Ethereum Subgraph
repository: https://github.com/startbahn/startrail-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: LicensedUserEvent
    network: rinkeby
    source:
      address: '0x15e2F7981cC5487887170C9980657276ccd28Ba9'
      abi: LicensedUserEvent
      startBlock: 6951000 # contract creation block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - LicensedUserWallet
      abis:
        - name: LicensedUserEvent
          file: ./abis/LicensedUserEvent.json
      eventHandlers:
        - event: CreateLicensedUserWallet(indexed address,address[],uint256,string,string,uint8)
          handler: handleCreateLicensedUserWallet
      file: ./src/luw-mapping.ts

  - kind: ethereum/contract
    name: StartrailRegistry
    network: rinkeby
    source:
      address: '0x1Bbd97F597d07bB3e87E29d509B7ba4c31e720ab'
      abi: StartrailRegistry
      startBlock: 6951000  # contract creation block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - SRR
      abis:
        - name: StartrailRegistry
          file: ./abis/StartrailRegistry.json
      file: ./src/srr-mapping.ts
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer

  - kind: ethereum/contract
    name: RootLogic
    network: rinkeby
    source:
      address: '0x182ddD24D511034da290BEbD230Ee0D00e883a47'
      abi: RootLogic
      startBlock: 6951000 # contract creation block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - SRR
      abis:
        - name: RootLogic
          file: ./abis/RootLogic.json
      file: ./src/srr-mapping.ts
      eventHandlers:
        - event: CreateSRR(indexed uint256,(bool,address,address),bytes32)
          handler: handleCreateSRR
        - event: UpdateSRR(indexed uint256,(bool,address,address))
          handler: handleUpdateSRR
        - event: Provenance(indexed uint256,indexed address,indexed address,uint256,string,string)
          handler: handleSRRProvenance
        - event: SRRCommitment(address,bytes32,uint256)
          handler: handleSRRCommitment
        - event: SRRCommitmentCancelled(uint256)
          handler: handleSRRCommitmentCancelled
        - event: UpdateSRRMetadataDigest(indexed uint256,bytes32)
          handler: handleUpdateSRRMetadataDigest

  - kind: ethereum/contract
    name: BulkIssue
    network: rinkeby
    source:
      address: '0x495436DF611F5d25177D532eF35FedA801bfeDa1'
      abi: BulkIssue
      startBlock: 6951000 # contract creation block
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - SRR
      abis:
        - name: BulkIssue
          file: ./abis/BulkIssue.json
      file: ./src/bulk-mapping.ts
      eventHandlers:
        - event: BatchPrepared(indexed bytes32)
          handler: handleBatchPrepared
        - event: CreateSRRWithProof(indexed bytes32,bytes32)
          handler: handleCreateSRRWithProof
