{
  "contractName": "BulkIssue",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "BatchPrepared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "srrHash",
          "type": "bytes32"
        }
      ],
      "name": "CreateSRRWithProof",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "batches",
      "outputs": [
        {
          "internalType": "bool",
          "name": "prepared",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "processedCount",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_type",
          "type": "string"
        }
      ],
      "name": "getUserType",
      "outputs": [
        {
          "internalType": "enum IdentityUserType.UserType",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "prepareBatch",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "prepareBatchFromLicensedUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "srrHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isPrimaryIssuer",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "artistAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "metadataDigest",
          "type": "bytes32"
        }
      ],
      "name": "createSRRWithProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "srrHash",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "isPrimaryIssuer",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "artistAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "metadataDigest",
          "type": "bytes32"
        }
      ],
      "name": "verifySRRHash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "hashMatches",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"BatchPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"srrHash\",\"type\":\"bytes32\"}],\"name\":\"CreateSRRWithProof\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"batches\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"prepared\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"processedCount\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"srrHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryIssuer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"metadataDigest\",\"type\":\"bytes32\"}],\"name\":\"createSRRWithProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"}],\"name\":\"getUserType\",\"outputs\":[{\"internalType\":\"enum IdentityUserType.UserType\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"prepareBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"prepareBatchFromLicensedUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"srrHash\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isPrimaryIssuer\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"artistAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"metadataDigest\",\"type\":\"bytes32\"}],\"name\":\"verifySRRHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hashMatches\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createSRRWithProof(bytes32[],bytes32,bytes32,bool,address,bytes32)\":{\"details\":\"Creates SRR with merkle proof\",\"params\":{\"artistAddress\":\"address of the artist contract\",\"isPrimaryIssuer\":\"boolean whether the user is a primary issuer\",\"merkleProof\":\"bytes32 of merkle proof value\",\"merkleRoot\":\"bytes32 of merkle root value\",\"metadataDigest\":\"bytes32 of metadata hash\",\"srrHash\":\"bytes32 of merkle tree leaf\"},\"return\":\"uint256 tokenId\"},\"getNameRegistryAddress()\":{\"details\":\"Gets the endpoint address of NameRegistry\",\"return\":\"NameRegistry proxy address\"},\"getUserType(string)\":{\"details\":\"Gets user type\",\"params\":{\"_type\":\"string of the user type\"},\"return\":\"UserType\"},\"initialize(address)\":{\"details\":\"Initializes the BulkIssue contract\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"prepareBatch(bytes32)\":{\"details\":\"Reserves a batch request before excuting\",\"params\":{\"merkleRoot\":\"bytes32 of merkle root\"}},\"prepareBatchFromLicensedUser(bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Reserves a batch request before excuting\",\"params\":{\"merkleRoot\":\"bytes32 of merkle root\",\"r\":\"bytes32 of sig.r\",\"s\":\"bytes32 of sig.s\",\"v\":\"uint8 of sig.v\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verifySRRHash(bytes32,bool,address,bytes32)\":{\"details\":\"Verify the hash of the params when creating SRR\",\"params\":{\"artistAddress\":\"address of the artist contract\",\"isPrimaryIssuer\":\"boolean whether the user is a primary issuer\",\"metadataDigest\":\"bytes32 of metadata hash\",\"srrHash\":\"bytes32 of hash value of all other params\"},\"return\":\"whether the hash matches or not\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/root/project/app/batch/contracts/BulkIssue.sol\":\"BulkIssue\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/project/app/batch/contracts/BulkIssue.sol\":{\"keccak256\":\"0xd39e3abee3108f76b8333ad5f9bab71c57c4e3fe5de900d6bf2a44e234c018ab\",\"urls\":[\"bzz-raw://a3859e1ed28265ee842d4848ebb4a8c65f9368403381c9dbb781f7c16a327958\",\"dweb:/ipfs/QmQxmk8jK1UgYdy4e8Dx1YY4nxYJMQFS4NuZP9iu1XzbjW\"]},\"/root/project/app/common/Converter.sol\":{\"keccak256\":\"0x12dddd549fdecfbd1b8a939a6e5f9aaef68739d5a7806778197938cd452d6a99\",\"urls\":[\"bzz-raw://b0396db93c8b4d6e8e2fb6e6ba782a3faeeca201298a8751e1e9b3931f6fa58a\",\"dweb:/ipfs/QmaRpwymqWq8GCiue18pKirgp424FMSrmHCB7o8xR5AHxs\"]},\"/root/project/app/common/IRootLogic.sol\":{\"keccak256\":\"0x330721feb5a1aad3d5fdd3e57abe0e28cdfeab3c9ee2ca5563c56696cda62d25\",\"urls\":[\"bzz-raw://4a15f25fbfed8cfd2801a6628937a03c9be5184b1eb5ba73c4816dce246330ff\",\"dweb:/ipfs/QmRxJfvuZdx5Huz92zrRqwzXMfFSJXimyP7hN7vmfTQEft\"]},\"/root/project/app/common/IStartrailRegistry.sol\":{\"keccak256\":\"0x8780124ee565286c44b23f9f305f84b357b080a60c6f8a0497f9fe59913bd117\",\"urls\":[\"bzz-raw://cc6325bb8ea1be56dc90d9d65547fbfcb28eee90a5557fcad9f7c1f170e51e23\",\"dweb:/ipfs/QmbmhXtRzKNGyXwxcLoNjkWekDbPXT5N7oh1PqRsW9TPNs\"]},\"/root/project/app/common/IStartrailValidator.sol\":{\"keccak256\":\"0xf9272959e7a07812d327673dc816e7abce0cee1a7e4782c77f960ef1211ff285\",\"urls\":[\"bzz-raw://caf7b107b5f711a9df1d2b7c034e1811ca320a36af07e92453b22d64653a6ee0\",\"dweb:/ipfs/QmQbVJ3SLzeJuEG8pMynAQkmCZsGpsgyFXFtfVymhhfXqs\"]},\"/root/project/app/lib/contracts/Signature.sol\":{\"keccak256\":\"0xce931ee1d7679305e0f6992f6fe3b7494c1947d6693a3344546287e4c1594736\",\"urls\":[\"bzz-raw://d1d7eece7962bd52df2dc1c2b23d5e697558fd1114c3fd63cd0b7348965f8e99\",\"dweb:/ipfs/QmZvVxqbE6L8we11gmX4J1fxXDBcze5JNNYuvpHgtqqEAo\"]},\"/root/project/app/licensedUser/contracts/IdentityLogic.sol\":{\"keccak256\":\"0xe067702c577db3f8f352d2a62e40101aa03f9e1d36a366d4a4bdc63919f5b00a\",\"urls\":[\"bzz-raw://177eb8576620242512a58891cf857dd41f7383b5d309011b7c6e937c55db233e\",\"dweb:/ipfs/Qmb3ddkDQHhDAUg1YXeXWZsYHjL7mFQkCgou1NBWKepZic\"]},\"/root/project/app/licensedUser/contracts/IdentityStorage.sol\":{\"keccak256\":\"0x99a41f2745ae129fb0fbbadf163e0b0411dfb8ef9465d55b4be0823d48972506\",\"urls\":[\"bzz-raw://48e3295ff02b901d97992567a75def63fe5f533363512c9621f65ebacf185be9\",\"dweb:/ipfs/QmaxeYMw21R7528AieieVZwRYkMx44vtqQaCWbZZdYJSYa\"]},\"/root/project/app/licensedUser/contracts/IdentityUserType.sol\":{\"keccak256\":\"0xb3d2953fffc62b257ba8d030e20dbc0d0599c89a82eda647717feb04dd7f4975\",\"urls\":[\"bzz-raw://55b5682b06742626a23e7d2f01d0626ba3a81b7ec58d2abfc8f5a39e8001cb9b\",\"dweb:/ipfs/QmQpZNGkhTrjFWNUNTjyx8k8QhPVEafqy79XJJF1se854V\"]},\"/root/project/app/licensedUser/contracts/LicensedUserEvent.sol\":{\"keccak256\":\"0x0b4ef930181bb019252969400a56a8cbc3da8582914c491792a57d1e0efac231\",\"urls\":[\"bzz-raw://04db22ce24bfc43d18a6f4d9b4d39e47d8bacc848186e028a1b086a1d98da727\",\"dweb:/ipfs/QmYcSKcDiuRGFmN3epWmPnPbhCo46v6GTdXoVuY5yNVVA1\"]},\"/root/project/app/licensedUser/contracts/LicensedUserLogic.sol\":{\"keccak256\":\"0xbb1d0a71b932d018293e740af7394f6d7351c4c64a112b392e6cda2ce8497d2d\",\"urls\":[\"bzz-raw://c1d96d5cd930b8ff45a1b98ee1741c98e084fb06f7b42cc0376ea81b64837cd5\",\"dweb:/ipfs/QmXzMqXwnXohDtEuofKvtvPBQGixTdMnGMLNSpyGS8eya8\"]},\"/root/project/app/licensedUser/contracts/LicensedUserWalletFactory.sol\":{\"keccak256\":\"0x27ba2f4ecaf58cbd7eadc4b38e734c497c00ccd892740ff6d0f600cb926ad271\",\"urls\":[\"bzz-raw://f0e7daed6dde00f2e0896793494e0263f85064f7f5349a5b38092f2424c8954b\",\"dweb:/ipfs/QmQCfySLUyArUeJbCezrBoEWE1yePeLamacUDkLwHJq38M\"]},\"/root/project/app/licensedUser/contracts/LicensedUserWalletProxy.sol\":{\"keccak256\":\"0x37bbc110ff1dd88deec1a6a74659d033282331a356df5505a5f1f1ca70519cfd\",\"urls\":[\"bzz-raw://1f56526682b0ebc446f651c898da55e5fb528fb7b5090714b4a32a6ed65fdf0e\",\"dweb:/ipfs/Qmc4xoEVvJGZfiMpyxuGPuU87ebvuyVRUVEZW1RQW3QACM\"]},\"/root/project/app/licensedUser/contracts/MultiSigLogic.sol\":{\"keccak256\":\"0xc5285bb56a57124979f001edebaa1cfecd24fc625a721c43fe0ecf4dd40d1889\",\"urls\":[\"bzz-raw://31a85871abd78b9f3830d75008b2a7768d337b803d0b3e5a8af849fd7f9e7ed9\",\"dweb:/ipfs/QmTxWm5U9356LUHgVe31NbkKDy3Jj1iTCsNowCMdUVpTss\"]},\"/root/project/app/licensedUser/contracts/MultiSigValidator.sol\":{\"keccak256\":\"0x71e755d2dcaae5e243fcefc5586043358031910293dc0e5dd7477a59095c0082\",\"urls\":[\"bzz-raw://e9a5b255e24244adcdfab5b68c939bc69d51a9fdffbe04d32de9ef540f7a6efe\",\"dweb:/ipfs/QmV2SntttGiutNzknV9sLmufJjpRVgs1Zf29oWaT3Df11H\"]},\"/root/project/app/name/contracts/Contracts.sol\":{\"keccak256\":\"0xd4be1647011bae8f73d33aa7f87bced4ed6976c5b2076a4bdb902434785be74a\",\"urls\":[\"bzz-raw://09baf268f86ddd202e547708401a73e97bbcdb2acceca312d05a8527f9ae9fef\",\"dweb:/ipfs/QmcvUa5P5B8ikbKT4Msoztid5F3DgfYZj2e6HWPthV3mca\"]},\"/root/project/app/name/contracts/NameRegistry.sol\":{\"keccak256\":\"0x47ce8dfc16cf3e72498b1d5c460c65e108e5aab5479f167b479976fd688faaf9\",\"urls\":[\"bzz-raw://0182dcab300954227c92df346a4b410b7292825aed9b56151968b5b0bde3a8e1\",\"dweb:/ipfs/QmYSXFTGWpF2uXxxLyqsexjvjydEAxSBMzKmqJhXuR7zLr\"]},\"/root/project/app/rootLogic/contracts/ERC2477.sol\":{\"keccak256\":\"0x26696fb362ea7d1a43b162f4f89a6de4ad29a87addbb69a9cb0e14ffa00478be\",\"urls\":[\"bzz-raw://f3951041e308ae2e339b0827a5b4d455e042669f80814b5317e6399b778df186\",\"dweb:/ipfs/Qmc58sQ7g8QxzHDyRBWSrykCasZdE85tY9vpMLwQ1LLYFx\"]},\"/root/project/app/rootLogic/contracts/RootLogic.sol\":{\"keccak256\":\"0x5ce8c38de55994706d03e450ab961476470844ced27a2bc0cd3e57807ce00a25\",\"urls\":[\"bzz-raw://b2a84487f23ecfa49df83fa5bc655ed6adb5e9d5df315a3897e882d135601bc7\",\"dweb:/ipfs/QmSth8QFJ5WhCzsheqCzWwxK64HyGDgs8bqrr7PfXMrYsp\"]},\"/root/project/app/rootLogic/contracts/Storage.sol\":{\"keccak256\":\"0x045bba579604e52dfd987a693ce6423f921a83d1b04036b4bc71e62b57ba42e0\",\"urls\":[\"bzz-raw://4d6ad73ced5a9c785c7cc928659f9a9442f2c109fbacdf0487baae7a47665343\",\"dweb:/ipfs/QmbEyNYyYYh2nhd8nxdpTUvVCtYiUzM3aNFDNBLZ1gvZxN\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\",\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6a23b389c1175273f6321a61cf746c6f268f3b2a139311a12e057aff58146183\",\"urls\":[\"bzz-raw://0d997134f9056685870cedc66cd6a9a9fd0983334444b6eaf587406213eb9099\",\"dweb:/ipfs/QmcwkvVgFMR7j75ZDaKsJhQR6rXgtAz7ntZBCyS6C8L3Yk\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/upgrades/contracts/upgradeability/AdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x10ce81d835a4776c23f72c9abe8f65cd806352034d2fa9ebe7a42868a1ad7b22\",\"urls\":[\"bzz-raw://096dc2c9c1def99f1b3e2bb766cb2c7c3dbdf34b8b41f58ad1fd03ec2f168aad\",\"dweb:/ipfs/QmQ3gQaM8zgge4o2hgrKMeVpGsymLHpur4pQQewAP8UGLd\"]},\"@openzeppelin/upgrades/contracts/upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xbf8ee1cf63a430a3eb8b39a9145d0d133400b8db06fa9fd33056597f7d8ceb25\",\"urls\":[\"bzz-raw://58dc9f7b607b235e9efae48b003bf43aacb1b034853b8ead82830834405904a6\",\"dweb:/ipfs/QmXqDDwV8vpufd6Xka5zYrxrSgbnfzrQTSMoN7dPTAHJ21\"]},\"@openzeppelin/upgrades/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x1b37f808dc0a45976ad23aa53908c485a74a4d9fbd03066a5ab399c46436e570\",\"urls\":[\"bzz-raw://de04959e1261bbc2ee53a88b98469a888a2f2fa49c07ea87a5d646a8fe438558\",\"dweb:/ipfs/QmUmYQaNnAMfvbfKLniFLHyBzsH77bCMf9NpNSfndfuqWh\"]},\"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]},\"@openzeppelin/upgrades/contracts/upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0xb02c6349ba01df9902857b6058f92b37f13187775cce9da74f6f28410205445b\",\"urls\":[\"bzz-raw://f05434b5110c9de912e001a5dc2b252947f474346cb8ea5ec26ea2efe7143aa7\",\"dweb:/ipfs/QmbaksVa6vQz926TCHgJniKFuod44QhuGzVFYMtdUgdxba\"]},\"@openzeppelin/upgrades/contracts/utils/Address.sol\":{\"keccak256\":\"0x7be7f8e4c08bc70ff9815e3f11c569f42aa3c447b5bc61fd75fb5cec97f63a9f\",\"urls\":[\"bzz-raw://f301a9226d637e1593916ba2de7b0b28c35f2adc3ca8526289fe1eedafa83bc2\",\"dweb:/ipfs/QmPb991LE8nyvhB4BkX46P1Pan2ijH9tfqWwLAz65VUUKs\"]}},\"version\":1}",
  "bytecode": "0x6080604052612509806100136000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638f32d59b116100715780638f32d59b1461017b578063bf1095b414610199578063c4d66de8146101c9578063c81e25ab146101e5578063e867ab7814610217578063f2fde38b14610233576100b4565b8063308014f5146100b95780634ef996d4146100d557806362b9bdc214610105578063715018a6146101235780637ba20a4d1461012d5780638da5cb5b1461015d575b600080fd5b6100d360048036036100ce919081019061173c565b61024f565b005b6100ef60048036036100ea9190810190611765565b610308565b6040516100fc9190611f7b565b60405180910390f35b61010d610341565b60405161011a9190611f45565b60405180910390f35b61012b61036b565b005b61014760048036036101429190810190611854565b610473565b6040516101549190612072565b60405180910390f35b610165610548565b6040516101729190611f45565b60405180910390f35b610183610572565b6040516101909190611f7b565b60405180910390f35b6101b360048036036101ae9190810190611672565b6105d1565b6040516101c091906121ef565b60405180910390f35b6101e360048036036101de9190810190611620565b6108de565b005b6101ff60048036036101fa919081019061173c565b610a12565b60405161020e93929190611fdb565b60405180910390f35b610231600480360361022c91908101906117c8565b610a76565b005b61024d60048036036102489190810190611620565b610cf3565b005b806066600082815260200190815260200160002060000160009054906101000a900460ff16156102b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ab9061212f565b60405180910390fd5b6102bc610572565b6102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f29061214f565b60405180910390fd5b61030482610d46565b5050565b600083838360405160200161031f93929190611e60565b6040516020818303038152906040528051906020012085149050949350505050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610373610572565b6103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a99061214f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080826040516020016104879190611ec9565b6040516020818303038152906040528051906020012090506040516020016104ae90611f1b565b604051602081830303815290604052805190602001208114156104d5576000915050610543565b6040516020016104e490611f06565b6040516020818303038152906040528051906020012081141561050b576001915050610543565b60405160200161051a90611f30565b60405160208183030381529060405280519060200120811415610541576002915050610543565b505b919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105b5610e4c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000856066600082815260200190815260200160002060000160009054906101000a900460ff16610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e906120ef565b60405180910390fd5b868660666000838152602001908152602001600020600101600082815260200190815260200160002060009054906101000a900460ff16156106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a5906121af565b60405180910390fd5b6106ba88888888610308565b6106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f0906121cf565b60405180910390fd5b6107048a8a8a610e54565b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a906120cf565b60405180910390fd5b6001606660008b815260200190815260200160002060010160008a815260200190815260200160002060006101000a81548160ff021916908315150217905550606660008a8152602001908152602001600020600001601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506107d1610f01565b73ffffffffffffffffffffffffffffffffffffffff16639db171a0888888606660008f815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518563ffffffff1660e01b81526004016108459493929190611f96565b602060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108979190810190611895565b9350887fdfaa618c92ac2a063b19734f3cc41d29ff6d2f0cfa172f99f22c7e5660f3e4c7896040516108c99190612012565b60405180910390a25050509695505050505050565b600060019054906101000a900460ff16806108fd57506108fc610fd8565b5b8061091457506000809054906101000a900460ff16155b610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a9061218f565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109ed33610fef565b8015610a0e5760008060016101000a81548160ff0219169083151502179055505b5050565b60666020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160159054906101000a900460ff16905083565b836066600082815260200190815260200160002060000160009054906101000a900460ff1615610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad29061212f565b60405180910390fd5b610ae3611197565b73ffffffffffffffffffffffffffffffffffffffff1663938509d3336040518263ffffffff1660e01b8152600401610b1b9190611f60565b60206040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b6b9190810190611713565b80610b7a5750610b7961126e565b5b610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb0906120af565b60405180910390fd5b6000610bc486611317565b9050600060018287878760405160008152602001604052604051610beb949392919061202d565b6020604051602081039080840390855afa158015610c0d573d6000803e3d6000fd5b5050506020604051035190503373ffffffffffffffffffffffffffffffffffffffff1663a2e1a8d8826040518263ffffffff1660e01b8152600401610c529190611f45565b60206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ca29190810190611713565b610ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd89061216f565b60405180910390fd5b610cea87610d46565b50505050505050565b610cfb610572565b610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d319061214f565b60405180910390fd5b610d4381611347565b50565b60405180606001604052806001151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600060ff168152506066600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff021916908360ff160217905550905050807fe4dd69b1474d45a85a99c7e40eac6c4da1d71b0fba50511c992c03d08fe329d860405160405180910390a250565b600033905090565b60008082905060008090505b8551811015610ef3576000868281518110610e7757fe5b6020026020010151905080831015610eb9578281604051602001610e9c929190611e9d565b604051602081830303815290604052805190602001209250610ee5565b8083604051602001610ecc929190611e9d565b6040516020818303038152906040528051906020012092505b508080600101915050610e60565b508381149150509392505050565b600080610f0c611477565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280600a81526020017f524f4f545f4c4f474943000000000000000000000000000000000000000000008152506040518263ffffffff1660e01b8152600401610f79919061208d565b60206040518083038186803b158015610f9157600080fd5b505afa158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fc99190810190611649565b90506000819050809250505090565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff168061100e575061100d610fd8565b5b8061102557506000809054906101000a900460ff16155b611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b9061218f565b60405180910390fd5b60008060019054906101000a900460ff1615905080156110b4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156111935760008060016101000a81548160ff0219169083151502179055505b5050565b6000806111a2611477565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601c81526020017f4c4943454e5345445f555345525f57414c4c45545f464143544f5259000000008152506040518263ffffffff1660e01b815260040161120f919061208d565b60206040518083038186803b15801561122757600080fd5b505afa15801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061125f9190810190611649565b90506000819050809250505090565b60008033905060008190506000600281111561128657fe5b8173ffffffffffffffffffffffffffffffffffffffff1663419900776040518163ffffffff1660e01b815260040160206040518083038186803b1580156112cc57600080fd5b505afa1580156112e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611304919081019061182b565b600281111561130f57fe5b149250505090565b60008160405160200161132a9190611ee0565b604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ae9061210f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000813590506114b081612443565b92915050565b6000815190506114c581612443565b92915050565b600082601f8301126114dc57600080fd5b81356114ef6114ea82612237565b61220a565b9150818183526020840193506020810190508385602084028201111561151457600080fd5b60005b83811015611544578161152a8882611578565b845260208401935060208301925050600181019050611517565b5050505092915050565b60008135905061155d8161245a565b92915050565b6000815190506115728161245a565b92915050565b60008135905061158781612471565b92915050565b60008151905061159c81612488565b92915050565b600082601f8301126115b357600080fd5b81356115c66115c18261225f565b61220a565b915080825260208301602083018583830111156115e257600080fd5b6115ed838284612377565b50505092915050565b60008151905061160581612498565b92915050565b60008135905061161a816124af565b92915050565b60006020828403121561163257600080fd5b6000611640848285016114a1565b91505092915050565b60006020828403121561165b57600080fd5b6000611669848285016114b6565b91505092915050565b60008060008060008060c0878903121561168b57600080fd5b600087013567ffffffffffffffff8111156116a557600080fd5b6116b189828a016114cb565b96505060206116c289828a01611578565b95505060406116d389828a01611578565b94505060606116e489828a0161154e565b93505060806116f589828a016114a1565b92505060a061170689828a01611578565b9150509295509295509295565b60006020828403121561172557600080fd5b600061173384828501611563565b91505092915050565b60006020828403121561174e57600080fd5b600061175c84828501611578565b91505092915050565b6000806000806080858703121561177b57600080fd5b600061178987828801611578565b945050602061179a8782880161154e565b93505060406117ab878288016114a1565b92505060606117bc87828801611578565b91505092959194509250565b600080600080608085870312156117de57600080fd5b60006117ec87828801611578565b94505060206117fd8782880161160b565b935050604061180e87828801611578565b925050606061181f87828801611578565b91505092959194509250565b60006020828403121561183d57600080fd5b600061184b8482850161158d565b91505092915050565b60006020828403121561186657600080fd5b600082013567ffffffffffffffff81111561188057600080fd5b61188c848285016115a2565b91505092915050565b6000602082840312156118a757600080fd5b60006118b5848285016115f6565b91505092915050565b6118c78161232f565b82525050565b6118d6816122bd565b82525050565b6118ed6118e8826122bd565b6123b9565b82525050565b6118fc816122cf565b82525050565b61191361190e826122cf565b6123cb565b82525050565b611922816122db565b82525050565b611939611934826122db565b6123dd565b82525050565b61194881612341565b82525050565b600061195982612296565b61196381856122b2565b9350611973818560208601612386565b80840191505092915050565b600061198a8261228b565b61199481856122a1565b93506119a4818560208601612386565b6119ad8161240b565b840191505092915050565b60006119c5603e836122a1565b91507f5468652073656e646572206973206e65697468657220746865206c6963656e7360008301527f6564207573657220636f6e7472616374206e6f72207468652061646d696e00006020830152604082019050919050565b6000611a2b601c836122b2565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000611a6b6020836122a1565b91507f4d65726b6c652070726f6f6620766572696669636174696f6e206661696c65646000830152602082019050919050565b6000611aab602d836122a1565b91507f426174636820646f65736e277420657869737420666f7220746865206769766560008301527f6e206d65726b6c6520726f6f74000000000000000000000000000000000000006020830152604082019050919050565b6000611b116026836122a1565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b77602e836122a1565b91507f426174636820616c72656164792065786973747320666f72207468652067697660008301527f656e206d65726b6c6520726f6f740000000000000000000000000000000000006020830152604082019050919050565b6000611bdd6020836122a1565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611c1d6039836122a1565b91507f5369676e6572206d75737420626520616e206f776e6572206f6e20746865206360008301527f616c6c696e67204c6963656e7365645573657257616c6c6574000000000000006020830152604082019050919050565b6000611c83602e836122a1565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6000611ce96016836122a1565b91507f53525220616c72656164792070726f6365737365642e000000000000000000006000830152602082019050919050565b6000611d296026836122a1565b91507f7372724861736820646f6573206e6f74206d617463682074686520737272206460008301527f657461696c7300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d8f6007836122b2565b91507f68616e646c6572000000000000000000000000000000000000000000000000006000830152600782019050919050565b6000611dcf6005836122b2565b91507f61646d696e0000000000000000000000000000000000000000000000000000006000830152600582019050919050565b6000611e0f6006836122b2565b91507f61727469737400000000000000000000000000000000000000000000000000006000830152600682019050919050565b611e4b81612318565b82525050565b611e5a81612322565b82525050565b6000611e6c8286611902565b600182019150611e7c82856118dc565b601482019150611e8c8284611928565b602082019150819050949350505050565b6000611ea98285611928565b602082019150611eb98284611928565b6020820191508190509392505050565b6000611ed5828461194e565b915081905092915050565b6000611eeb82611a1e565b9150611ef78284611928565b60208201915081905092915050565b6000611f1182611d82565b9150819050919050565b6000611f2682611dc2565b9150819050919050565b6000611f3b82611e02565b9150819050919050565b6000602082019050611f5a60008301846118cd565b92915050565b6000602082019050611f7560008301846118be565b92915050565b6000602082019050611f9060008301846118f3565b92915050565b6000608082019050611fab60008301876118f3565b611fb860208301866118cd565b611fc56040830185611919565b611fd260608301846118cd565b95945050505050565b6000606082019050611ff060008301866118f3565b611ffd60208301856118cd565b61200a6040830184611e51565b949350505050565b60006020820190506120276000830184611919565b92915050565b60006080820190506120426000830187611919565b61204f6020830186611e51565b61205c6040830185611919565b6120696060830184611919565b95945050505050565b6000602082019050612087600083018461193f565b92915050565b600060208201905081810360008301526120a7818461197f565b905092915050565b600060208201905081810360008301526120c8816119b8565b9050919050565b600060208201905081810360008301526120e881611a5e565b9050919050565b6000602082019050818103600083015261210881611a9e565b9050919050565b6000602082019050818103600083015261212881611b04565b9050919050565b6000602082019050818103600083015261214881611b6a565b9050919050565b6000602082019050818103600083015261216881611bd0565b9050919050565b6000602082019050818103600083015261218881611c10565b9050919050565b600060208201905081810360008301526121a881611c76565b9050919050565b600060208201905081810360008301526121c881611cdc565b9050919050565b600060208201905081810360008301526121e881611d1c565b9050919050565b60006020820190506122046000830184611e42565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561222d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561224e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561227657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006122c8826122f8565b9050919050565b60008115159050919050565b6000819050919050565b60008190506122f382612436565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061233a82612353565b9050919050565b600061234c826122e5565b9050919050565b600061235e82612365565b9050919050565b6000612370826122f8565b9050919050565b82818337600083830152505050565b60005b838110156123a4578082015181840152602081019050612389565b838111156123b3576000848401525b50505050565b60006123c4826123e7565b9050919050565b60006123d6826123f9565b9050919050565b6000819050919050565b60006123f282612429565b9050919050565b60006124048261241c565b9050919050565b6000601f19601f8301169050919050565b60008160f81b9050919050565b60008160601b9050919050565b6003811061244057fe5b50565b61244c816122bd565b811461245757600080fd5b50565b612463816122cf565b811461246e57600080fd5b50565b61247a816122db565b811461248557600080fd5b50565b6003811061249557600080fd5b50565b6124a181612318565b81146124ac57600080fd5b50565b6124b881612322565b81146124c357600080fd5b5056fea365627a7a72315820fe789e3c22341d5fec8cd48e1ed7299f3c4715a947b22fc4b32775ebd7ab1e0a6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638f32d59b116100715780638f32d59b1461017b578063bf1095b414610199578063c4d66de8146101c9578063c81e25ab146101e5578063e867ab7814610217578063f2fde38b14610233576100b4565b8063308014f5146100b95780634ef996d4146100d557806362b9bdc214610105578063715018a6146101235780637ba20a4d1461012d5780638da5cb5b1461015d575b600080fd5b6100d360048036036100ce919081019061173c565b61024f565b005b6100ef60048036036100ea9190810190611765565b610308565b6040516100fc9190611f7b565b60405180910390f35b61010d610341565b60405161011a9190611f45565b60405180910390f35b61012b61036b565b005b61014760048036036101429190810190611854565b610473565b6040516101549190612072565b60405180910390f35b610165610548565b6040516101729190611f45565b60405180910390f35b610183610572565b6040516101909190611f7b565b60405180910390f35b6101b360048036036101ae9190810190611672565b6105d1565b6040516101c091906121ef565b60405180910390f35b6101e360048036036101de9190810190611620565b6108de565b005b6101ff60048036036101fa919081019061173c565b610a12565b60405161020e93929190611fdb565b60405180910390f35b610231600480360361022c91908101906117c8565b610a76565b005b61024d60048036036102489190810190611620565b610cf3565b005b806066600082815260200190815260200160002060000160009054906101000a900460ff16156102b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ab9061212f565b60405180910390fd5b6102bc610572565b6102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f29061214f565b60405180910390fd5b61030482610d46565b5050565b600083838360405160200161031f93929190611e60565b6040516020818303038152906040528051906020012085149050949350505050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610373610572565b6103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a99061214f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080826040516020016104879190611ec9565b6040516020818303038152906040528051906020012090506040516020016104ae90611f1b565b604051602081830303815290604052805190602001208114156104d5576000915050610543565b6040516020016104e490611f06565b6040516020818303038152906040528051906020012081141561050b576001915050610543565b60405160200161051a90611f30565b60405160208183030381529060405280519060200120811415610541576002915050610543565b505b919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166105b5610e4c565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000856066600082815260200190815260200160002060000160009054906101000a900460ff16610637576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062e906120ef565b60405180910390fd5b868660666000838152602001908152602001600020600101600082815260200190815260200160002060009054906101000a900460ff16156106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a5906121af565b60405180910390fd5b6106ba88888888610308565b6106f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f0906121cf565b60405180910390fd5b6107048a8a8a610e54565b610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a906120cf565b60405180910390fd5b6001606660008b815260200190815260200160002060010160008a815260200190815260200160002060006101000a81548160ff021916908315150217905550606660008a8152602001908152602001600020600001601581819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506107d1610f01565b73ffffffffffffffffffffffffffffffffffffffff16639db171a0888888606660008f815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518563ffffffff1660e01b81526004016108459493929190611f96565b602060405180830381600087803b15801561085f57600080fd5b505af1158015610873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108979190810190611895565b9350887fdfaa618c92ac2a063b19734f3cc41d29ff6d2f0cfa172f99f22c7e5660f3e4c7896040516108c99190612012565b60405180910390a25050509695505050505050565b600060019054906101000a900460ff16806108fd57506108fc610fd8565b5b8061091457506000809054906101000a900460ff16155b610953576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094a9061218f565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109ed33610fef565b8015610a0e5760008060016101000a81548160ff0219169083151502179055505b5050565b60666020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160159054906101000a900460ff16905083565b836066600082815260200190815260200160002060000160009054906101000a900460ff1615610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad29061212f565b60405180910390fd5b610ae3611197565b73ffffffffffffffffffffffffffffffffffffffff1663938509d3336040518263ffffffff1660e01b8152600401610b1b9190611f60565b60206040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b6b9190810190611713565b80610b7a5750610b7961126e565b5b610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb0906120af565b60405180910390fd5b6000610bc486611317565b9050600060018287878760405160008152602001604052604051610beb949392919061202d565b6020604051602081039080840390855afa158015610c0d573d6000803e3d6000fd5b5050506020604051035190503373ffffffffffffffffffffffffffffffffffffffff1663a2e1a8d8826040518263ffffffff1660e01b8152600401610c529190611f45565b60206040518083038186803b158015610c6a57600080fd5b505afa158015610c7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ca29190810190611713565b610ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd89061216f565b60405180910390fd5b610cea87610d46565b50505050505050565b610cfb610572565b610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d319061214f565b60405180910390fd5b610d4381611347565b50565b60405180606001604052806001151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600060ff168152506066600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160000160156101000a81548160ff021916908360ff160217905550905050807fe4dd69b1474d45a85a99c7e40eac6c4da1d71b0fba50511c992c03d08fe329d860405160405180910390a250565b600033905090565b60008082905060008090505b8551811015610ef3576000868281518110610e7757fe5b6020026020010151905080831015610eb9578281604051602001610e9c929190611e9d565b604051602081830303815290604052805190602001209250610ee5565b8083604051602001610ecc929190611e9d565b6040516020818303038152906040528051906020012092505b508080600101915050610e60565b508381149150509392505050565b600080610f0c611477565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280600a81526020017f524f4f545f4c4f474943000000000000000000000000000000000000000000008152506040518263ffffffff1660e01b8152600401610f79919061208d565b60206040518083038186803b158015610f9157600080fd5b505afa158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fc99190810190611649565b90506000819050809250505090565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff168061100e575061100d610fd8565b5b8061102557506000809054906101000a900460ff16155b611064576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105b9061218f565b60405180910390fd5b60008060019054906101000a900460ff1615905080156110b4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156111935760008060016101000a81548160ff0219169083151502179055505b5050565b6000806111a2611477565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280601c81526020017f4c4943454e5345445f555345525f57414c4c45545f464143544f5259000000008152506040518263ffffffff1660e01b815260040161120f919061208d565b60206040518083038186803b15801561122757600080fd5b505afa15801561123b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061125f9190810190611649565b90506000819050809250505090565b60008033905060008190506000600281111561128657fe5b8173ffffffffffffffffffffffffffffffffffffffff1663419900776040518163ffffffff1660e01b815260040160206040518083038186803b1580156112cc57600080fd5b505afa1580156112e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611304919081019061182b565b600281111561130f57fe5b149250505090565b60008160405160200161132a9190611ee0565b604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ae9061210f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000813590506114b081612443565b92915050565b6000815190506114c581612443565b92915050565b600082601f8301126114dc57600080fd5b81356114ef6114ea82612237565b61220a565b9150818183526020840193506020810190508385602084028201111561151457600080fd5b60005b83811015611544578161152a8882611578565b845260208401935060208301925050600181019050611517565b5050505092915050565b60008135905061155d8161245a565b92915050565b6000815190506115728161245a565b92915050565b60008135905061158781612471565b92915050565b60008151905061159c81612488565b92915050565b600082601f8301126115b357600080fd5b81356115c66115c18261225f565b61220a565b915080825260208301602083018583830111156115e257600080fd5b6115ed838284612377565b50505092915050565b60008151905061160581612498565b92915050565b60008135905061161a816124af565b92915050565b60006020828403121561163257600080fd5b6000611640848285016114a1565b91505092915050565b60006020828403121561165b57600080fd5b6000611669848285016114b6565b91505092915050565b60008060008060008060c0878903121561168b57600080fd5b600087013567ffffffffffffffff8111156116a557600080fd5b6116b189828a016114cb565b96505060206116c289828a01611578565b95505060406116d389828a01611578565b94505060606116e489828a0161154e565b93505060806116f589828a016114a1565b92505060a061170689828a01611578565b9150509295509295509295565b60006020828403121561172557600080fd5b600061173384828501611563565b91505092915050565b60006020828403121561174e57600080fd5b600061175c84828501611578565b91505092915050565b6000806000806080858703121561177b57600080fd5b600061178987828801611578565b945050602061179a8782880161154e565b93505060406117ab878288016114a1565b92505060606117bc87828801611578565b91505092959194509250565b600080600080608085870312156117de57600080fd5b60006117ec87828801611578565b94505060206117fd8782880161160b565b935050604061180e87828801611578565b925050606061181f87828801611578565b91505092959194509250565b60006020828403121561183d57600080fd5b600061184b8482850161158d565b91505092915050565b60006020828403121561186657600080fd5b600082013567ffffffffffffffff81111561188057600080fd5b61188c848285016115a2565b91505092915050565b6000602082840312156118a757600080fd5b60006118b5848285016115f6565b91505092915050565b6118c78161232f565b82525050565b6118d6816122bd565b82525050565b6118ed6118e8826122bd565b6123b9565b82525050565b6118fc816122cf565b82525050565b61191361190e826122cf565b6123cb565b82525050565b611922816122db565b82525050565b611939611934826122db565b6123dd565b82525050565b61194881612341565b82525050565b600061195982612296565b61196381856122b2565b9350611973818560208601612386565b80840191505092915050565b600061198a8261228b565b61199481856122a1565b93506119a4818560208601612386565b6119ad8161240b565b840191505092915050565b60006119c5603e836122a1565b91507f5468652073656e646572206973206e65697468657220746865206c6963656e7360008301527f6564207573657220636f6e7472616374206e6f72207468652061646d696e00006020830152604082019050919050565b6000611a2b601c836122b2565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6000611a6b6020836122a1565b91507f4d65726b6c652070726f6f6620766572696669636174696f6e206661696c65646000830152602082019050919050565b6000611aab602d836122a1565b91507f426174636820646f65736e277420657869737420666f7220746865206769766560008301527f6e206d65726b6c6520726f6f74000000000000000000000000000000000000006020830152604082019050919050565b6000611b116026836122a1565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b77602e836122a1565b91507f426174636820616c72656164792065786973747320666f72207468652067697660008301527f656e206d65726b6c6520726f6f740000000000000000000000000000000000006020830152604082019050919050565b6000611bdd6020836122a1565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611c1d6039836122a1565b91507f5369676e6572206d75737420626520616e206f776e6572206f6e20746865206360008301527f616c6c696e67204c6963656e7365645573657257616c6c6574000000000000006020830152604082019050919050565b6000611c83602e836122a1565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6000611ce96016836122a1565b91507f53525220616c72656164792070726f6365737365642e000000000000000000006000830152602082019050919050565b6000611d296026836122a1565b91507f7372724861736820646f6573206e6f74206d617463682074686520737272206460008301527f657461696c7300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611d8f6007836122b2565b91507f68616e646c6572000000000000000000000000000000000000000000000000006000830152600782019050919050565b6000611dcf6005836122b2565b91507f61646d696e0000000000000000000000000000000000000000000000000000006000830152600582019050919050565b6000611e0f6006836122b2565b91507f61727469737400000000000000000000000000000000000000000000000000006000830152600682019050919050565b611e4b81612318565b82525050565b611e5a81612322565b82525050565b6000611e6c8286611902565b600182019150611e7c82856118dc565b601482019150611e8c8284611928565b602082019150819050949350505050565b6000611ea98285611928565b602082019150611eb98284611928565b6020820191508190509392505050565b6000611ed5828461194e565b915081905092915050565b6000611eeb82611a1e565b9150611ef78284611928565b60208201915081905092915050565b6000611f1182611d82565b9150819050919050565b6000611f2682611dc2565b9150819050919050565b6000611f3b82611e02565b9150819050919050565b6000602082019050611f5a60008301846118cd565b92915050565b6000602082019050611f7560008301846118be565b92915050565b6000602082019050611f9060008301846118f3565b92915050565b6000608082019050611fab60008301876118f3565b611fb860208301866118cd565b611fc56040830185611919565b611fd260608301846118cd565b95945050505050565b6000606082019050611ff060008301866118f3565b611ffd60208301856118cd565b61200a6040830184611e51565b949350505050565b60006020820190506120276000830184611919565b92915050565b60006080820190506120426000830187611919565b61204f6020830186611e51565b61205c6040830185611919565b6120696060830184611919565b95945050505050565b6000602082019050612087600083018461193f565b92915050565b600060208201905081810360008301526120a7818461197f565b905092915050565b600060208201905081810360008301526120c8816119b8565b9050919050565b600060208201905081810360008301526120e881611a5e565b9050919050565b6000602082019050818103600083015261210881611a9e565b9050919050565b6000602082019050818103600083015261212881611b04565b9050919050565b6000602082019050818103600083015261214881611b6a565b9050919050565b6000602082019050818103600083015261216881611bd0565b9050919050565b6000602082019050818103600083015261218881611c10565b9050919050565b600060208201905081810360008301526121a881611c76565b9050919050565b600060208201905081810360008301526121c881611cdc565b9050919050565b600060208201905081810360008301526121e881611d1c565b9050919050565b60006020820190506122046000830184611e42565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561222d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561224e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561227657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006122c8826122f8565b9050919050565b60008115159050919050565b6000819050919050565b60008190506122f382612436565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061233a82612353565b9050919050565b600061234c826122e5565b9050919050565b600061235e82612365565b9050919050565b6000612370826122f8565b9050919050565b82818337600083830152505050565b60005b838110156123a4578082015181840152602081019050612389565b838111156123b3576000848401525b50505050565b60006123c4826123e7565b9050919050565b60006123d6826123f9565b9050919050565b6000819050919050565b60006123f282612429565b9050919050565b60006124048261241c565b9050919050565b6000601f19601f8301169050919050565b60008160f81b9050919050565b60008160601b9050919050565b6003811061244057fe5b50565b61244c816122bd565b811461245757600080fd5b50565b612463816122cf565b811461246e57600080fd5b50565b61247a816122db565b811461248557600080fd5b50565b6003811061249557600080fd5b50565b6124a181612318565b81146124ac57600080fd5b50565b6124b881612322565b81146124c357600080fd5b5056fea365627a7a72315820fe789e3c22341d5fec8cd48e1ed7299f3c4715a947b22fc4b32775ebd7ab1e0a6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "664:5707:0:-;;;;;;;;;",
  "deployedSourceMap": "664:5707:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;664:5707:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2279:132;;;;;;;;;;;;;;;;:::i;:::-;;4764:307;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5179:102;;;:::i;:::-;;;;;;;;;;;;;;;;1746:137:26;;;:::i;:::-;;488:296:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;959:77:26;;;:::i;:::-;;;;;;;;;;;;;;;;1310:92;;;:::i;:::-;;;;;;;;;;;;;;;;3491:910:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2023:143;;;;;;;;;;;;;;;;:::i;:::-;;1100:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2615:455;;;;;;;;;;;;;;;;:::i;:::-;;2032:107:26;;;;;;;;;;;;;;;;:::i;:::-;;2279:132:0;2347:10;1273:7;:19;1281:10;1273:19;;;;;;;;;;;:28;;;;;;;;;;;;1272:29;1257:106;;;;;;;;;;;;;;;;;;;;;;1163:9:26;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;2381:25:0;2395:10;2381:13;:25::i;:::-;2279:132;;:::o;4764:307::-;4914:16;5011:15;5028:13;5043:14;4994:64;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4994:64:0;;;4975:91;;;;;;4958:7;:108;4938:128;;4764:307;;;;;;:::o;5179:102::-;5234:7;5256:20;;;;;;;;;;;5249:27;;5179:102;:::o;1746:137:26:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;1844:1;1807:40;;1828:6;;;;;;;;;;;1807:40;;;;;;;;;;;;1874:1;1857:6;;:19;;;;;;;;;;;;;;;;;;1746:137::o;488:296:9:-;551:8;567:16;613:5;596:23;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;596:23:9;;;586:34;;;;;;567:53;;202:25;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;202:25:9;;;192:36;;;;;;630:8;:18;626:45;;;657:14;650:21;;;;;626:45;278:27;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;278:27:9;;;268:38;;;;;;681:8;:20;677:49;;;710:16;703:23;;;;;677:49;355:26;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;355:26:9;;;345:37;;;;;;736:8;:19;732:47;;;764:15;757:22;;;;;732:47;488:296;;;;;:::o;959:77:26:-;997:7;1023:6;;;;;;;;;;;1016:13;;959:77;:::o;1310:92::-;1350:4;1389:6;;;;;;;;;;;1373:22;;:12;:10;:12::i;:::-;:22;;;1366:29;;1310:92;:::o;3491:910:0:-;3783:15;3710:10;1441:7;:19;1449:10;1441:19;;;;;;;;;;;:28;;;;;;;;;;;;1426:104;;;;;;;;;;;;;;;;;;;;;;3749:10;3761:7;1637;:19;1645:10;1637:19;;;;;;;;;;;:35;;:44;1673:7;1637:44;;;;;;;;;;;;;;;;;;;;;1636:45;1621:98;;;;;;;;;;;;;;;;;;;;;;3823:70;3837:7;3846:15;3863:13;3878:14;3823:13;:70::i;:::-;3808:139;;;;;;;;;;;;;;;;;;;;;;3969:52;3988:11;4001:10;4013:7;3969:18;:52::i;:::-;3954:115;;;;;;;;;;;;;;;;;;;;;;4123:4;4076:7;:19;4084:10;4076:19;;;;;;;;;;;:35;;:44;4112:7;4076:44;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;4133:7;:19;4141:10;4133:19;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4186:12;:10;:12::i;:::-;:30;;;4224:15;4247:13;4268:14;4290:7;:19;4298:10;4290:19;;;;;;;;;;;:26;;;;;;;;;;;;4186:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4186:160:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4186:160:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4186:160:0;;;;;;;;;4176:170;;4376:10;4357:39;4388:7;4357:39;;;;;;;;;;;;;;;1536:1;;3491:910;;;;;;;;;:::o;2023:143::-;1024:12:28;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2113:12:0;2090:20;;:35;;;;;;;;;;;;;;;;;;2131:30;2150:10;2131:18;:30::i;:::-;1268:14:28;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2023:143:0;;:::o;1100:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2615:455::-;2742:10;1273:7;:19;1281:10;1273:19;;;;;;;;;;;:28;;;;;;;;;;;;1272:29;1257:106;;;;;;;;;;;;;;;;;;;;;;1784:14;:12;:14::i;:::-;:28;;;1813:10;1784:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1784:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1784:40:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1784:40:0;;;;;;;;;:54;;;;1828:10;:8;:10::i;:::-;1784:54;1769:147;;;;;;;;;;;;;;;;;;;;;;2777:19;2799:35;:10;:33;:35::i;:::-;2777:57;;2840:14;2857:31;2867:11;2880:1;2883;2886;2857:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2857:31:0;;;;;;;;2840:48;;2927:10;2909:44;;;2954:6;2909:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2909:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2909:52:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2909:52:0;;;;;;;;;2894:140;;;;;;;;;;;;;;;;;;;;;;3040:25;3054:10;3040:13;:25::i;:::-;1922:1;;2615:455;;;;;:::o;2032:107:26:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;5321:206:0:-;5400:86;;;;;;;;5424:4;5400:86;;;;;;5444:10;5400:86;;;;;;5478:1;5400:86;;;;;5378:7;:19;5386:10;5378:19;;;;;;;;;;;:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5511:10;5497:25;;;;;;;;;;5321:206;:::o;867:96:21:-;912:15;946:10;939:17;;867:96;:::o;464:778:23:-;555:4;571:20;594:4;571:27;;614:9;626:1;614:13;;609:514;633:5;:12;629:1;:16;609:514;;;666:20;689:5;695:1;689:8;;;;;;;;;;;;;;666:31;;731:12;716;:27;712:401;;;883:12;897;866:44;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;866:44:23;;;856:55;;;;;;841:70;;712:401;;;1070:12;1084;1053:44;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1053:44:23;;;1043:55;;;;;;1028:70;;712:401;609:514;647:3;;;;;;;609:514;;;;1231:4;1215:12;:20;1208:27;;;464:778;;;;;:::o;5843:201:0:-;5887:9;5904:24;5931:15;:13;:15::i;:::-;:19;;;5951:10;;;;;;;;;;;;;;;;;5931:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5931:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5931:31:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5931:31:0;;;;;;;;;5904:58;;5968:19;6000:16;5968:49;;6030:9;6023:16;;;;5843:201;:::o;1409:498:28:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;741:142:26:-;1024:12:28;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;815:6:26;806;;:15;;;;;;;;;;;;;;;;;;869:6;;;;;;;;;;;836:40;;865:1;836:40;;;;;;;;;;;;1268:14:28;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:142:26;;:::o;6048:321:0:-;6094:25;6127:40;6170:15;:13;:15::i;:::-;:19;;;6197:28;;;;;;;;;;;;;;;;;6170:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6170:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6170:61:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6170:61:0;;;;;;;;;6127:104;;6237:33;6306:32;6237:107;;6357:7;6350:14;;;;6048:321;:::o;5531:191::-;5573:4;5585:13;5601:10;5585:26;;5617:23;5661:5;5617:50;;5703:14;5680:37;;;;;;;;:5;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5680:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5680:19:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5680:19:0;;;;;;;;;:37;;;;;;;;;5673:44;;;;5531:191;:::o;3381:265:22:-;3450:7;3633:4;3580:58;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3580:58:22;;;3570:69;;;;;;3563:76;;3381:265;;;:::o;2240:225:26:-;2333:1;2313:22;;:8;:22;;;;2305:73;;;;;;;;;;;;;;;;;;;;;;2422:8;2393:38;;2414:6;;;;;;;;;;;2393:38;;;;;;;;;;;;2450:8;2441:6;;:17;;;;;;;;;;;;;;;;;;2240:225;:::o;5726:113:0:-;5773:12;5813:20;;;;;;;;;;;5793:41;;5726:113;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;301:707;;418:3;411:4;403:6;399:17;395:27;385:2;;436:1;433;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;;;495:80;;;486:89;;592:5;617:6;610:5;603:21;647:4;639:6;635:17;625:27;;669:4;664:3;660:14;653:21;;722:6;769:3;761:4;753:6;749:17;744:3;740:27;737:36;734:2;;;786:1;783;776:12;734:2;811:1;796:206;821:6;818:1;815:13;796:206;;;879:3;901:37;934:3;922:10;901:37;;;896:3;889:50;962:4;957:3;953:14;946:21;;990:4;985:3;981:14;974:21;;853:149;843:1;840;836:9;831:14;;796:206;;;800:14;378:630;;;;;;;;1016:124;;1093:6;1080:20;1071:29;;1105:30;1129:5;1105:30;;;1065:75;;;;;1147:128;;1228:6;1222:13;1213:22;;1240:30;1264:5;1240:30;;;1207:68;;;;;1282:130;;1362:6;1349:20;1340:29;;1374:33;1401:5;1374:33;;;1334:78;;;;;1419:160;;1516:6;1510:13;1501:22;;1528:46;1568:5;1528:46;;;1495:84;;;;;1587:442;;1689:3;1682:4;1674:6;1670:17;1666:27;1656:2;;1707:1;1704;1697:12;1656:2;1744:6;1731:20;1766:65;1781:49;1823:6;1781:49;;;1766:65;;;1757:74;;1851:6;1844:5;1837:21;1887:4;1879:6;1875:17;1920:4;1913:5;1909:16;1955:3;1946:6;1941:3;1937:16;1934:25;1931:2;;;1972:1;1969;1962:12;1931:2;1982:41;2016:6;2011:3;2006;1982:41;;;1649:380;;;;;;;;2037:134;;2121:6;2115:13;2106:22;;2133:33;2160:5;2133:33;;;2100:71;;;;;2178:126;;2256:6;2243:20;2234:29;;2268:31;2293:5;2268:31;;;2228:76;;;;;2311:241;;2415:2;2403:9;2394:7;2390:23;2386:32;2383:2;;;2431:1;2428;2421:12;2383:2;2466:1;2483:53;2528:7;2519:6;2508:9;2504:22;2483:53;;;2473:63;;2445:97;2377:175;;;;;2559:263;;2674:2;2662:9;2653:7;2649:23;2645:32;2642:2;;;2690:1;2687;2680:12;2642:2;2725:1;2742:64;2798:7;2789:6;2778:9;2774:22;2742:64;;;2732:74;;2704:108;2636:186;;;;;2829:999;;;;;;;3040:3;3028:9;3019:7;3015:23;3011:33;3008:2;;;3057:1;3054;3047:12;3008:2;3120:1;3109:9;3105:17;3092:31;3143:18;3135:6;3132:30;3129:2;;;3175:1;3172;3165:12;3129:2;3195:78;3265:7;3256:6;3245:9;3241:22;3195:78;;;3185:88;;3071:208;3310:2;3328:53;3373:7;3364:6;3353:9;3349:22;3328:53;;;3318:63;;3289:98;3418:2;3436:53;3481:7;3472:6;3461:9;3457:22;3436:53;;;3426:63;;3397:98;3526:2;3544:50;3586:7;3577:6;3566:9;3562:22;3544:50;;;3534:60;;3505:95;3631:3;3650:53;3695:7;3686:6;3675:9;3671:22;3650:53;;;3640:63;;3610:99;3740:3;3759:53;3804:7;3795:6;3784:9;3780:22;3759:53;;;3749:63;;3719:99;3002:826;;;;;;;;;3835:257;;3947:2;3935:9;3926:7;3922:23;3918:32;3915:2;;;3963:1;3960;3953:12;3915:2;3998:1;4015:61;4068:7;4059:6;4048:9;4044:22;4015:61;;;4005:71;;3977:105;3909:183;;;;;4099:241;;4203:2;4191:9;4182:7;4178:23;4174:32;4171:2;;;4219:1;4216;4209:12;4171:2;4254:1;4271:53;4316:7;4307:6;4296:9;4292:22;4271:53;;;4261:63;;4233:97;4165:175;;;;;4347:611;;;;;4499:3;4487:9;4478:7;4474:23;4470:33;4467:2;;;4516:1;4513;4506:12;4467:2;4551:1;4568:53;4613:7;4604:6;4593:9;4589:22;4568:53;;;4558:63;;4530:97;4658:2;4676:50;4718:7;4709:6;4698:9;4694:22;4676:50;;;4666:60;;4637:95;4763:2;4781:53;4826:7;4817:6;4806:9;4802:22;4781:53;;;4771:63;;4742:98;4871:2;4889:53;4934:7;4925:6;4914:9;4910:22;4889:53;;;4879:63;;4850:98;4461:497;;;;;;;;4965:613;;;;;5118:3;5106:9;5097:7;5093:23;5089:33;5086:2;;;5135:1;5132;5125:12;5086:2;5170:1;5187:53;5232:7;5223:6;5212:9;5208:22;5187:53;;;5177:63;;5149:97;5277:2;5295:51;5338:7;5329:6;5318:9;5314:22;5295:51;;;5285:61;;5256:96;5383:2;5401:53;5446:7;5437:6;5426:9;5422:22;5401:53;;;5391:63;;5362:98;5491:2;5509:53;5554:7;5545:6;5534:9;5530:22;5509:53;;;5499:63;;5470:98;5080:498;;;;;;;;5585:289;;5713:2;5701:9;5692:7;5688:23;5684:32;5681:2;;;5729:1;5726;5719:12;5681:2;5764:1;5781:77;5850:7;5841:6;5830:9;5826:22;5781:77;;;5771:87;;5743:121;5675:199;;;;;5881:347;;5995:2;5983:9;5974:7;5970:23;5966:32;5963:2;;;6011:1;6008;6001:12;5963:2;6074:1;6063:9;6059:17;6046:31;6097:18;6089:6;6086:30;6083:2;;;6129:1;6126;6119:12;6083:2;6149:63;6204:7;6195:6;6184:9;6180:22;6149:63;;;6139:73;;6025:193;5957:271;;;;;6235:263;;6350:2;6338:9;6329:7;6325:23;6321:32;6318:2;;;6366:1;6363;6356:12;6318:2;6401:1;6418:64;6474:7;6465:6;6454:9;6450:22;6418:64;;;6408:74;;6380:108;6312:186;;;;;6505:142;6596:45;6635:5;6596:45;;;6591:3;6584:58;6578:69;;;6654:113;6737:24;6755:5;6737:24;;;6732:3;6725:37;6719:48;;;6774:152;6875:45;6895:24;6913:5;6895:24;;;6875:45;;;6870:3;6863:58;6857:69;;;6933:104;7010:21;7025:5;7010:21;;;7005:3;6998:34;6992:45;;;7044:140;7139:39;7156:21;7171:5;7156:21;;;7139:39;;;7134:3;7127:52;7121:63;;;7191:113;7274:24;7292:5;7274:24;;;7269:3;7262:37;7256:48;;;7311:152;7412:45;7432:24;7450:5;7432:24;;;7412:45;;;7407:3;7400:58;7394:69;;;7470:148;7564:48;7606:5;7564:48;;;7559:3;7552:61;7546:72;;;7625:360;;7755:39;7788:5;7755:39;;;7806:89;7888:6;7883:3;7806:89;;;7799:96;;7900:52;7945:6;7940:3;7933:4;7926:5;7922:16;7900:52;;;7973:6;7968:3;7964:16;7957:23;;7735:250;;;;;;7992:339;;8100:35;8129:5;8100:35;;;8147:71;8211:6;8206:3;8147:71;;;8140:78;;8223:52;8268:6;8263:3;8256:4;8249:5;8245:16;8223:52;;;8296:29;8318:6;8296:29;;;8291:3;8287:39;8280:46;;8080:251;;;;;;8339:399;;8499:67;8563:2;8558:3;8499:67;;;8492:74;;8599:34;8595:1;8590:3;8586:11;8579:55;8668:32;8663:2;8658:3;8654:12;8647:54;8729:2;8724:3;8720:12;8713:19;;8485:253;;;;8747:400;;8925:85;9007:2;9002:3;8925:85;;;8918:92;;9043:66;9039:1;9034:3;9030:11;9023:87;9138:2;9133:3;9129:12;9122:19;;8911:236;;;;9156:332;;9316:67;9380:2;9375:3;9316:67;;;9309:74;;9416:34;9412:1;9407:3;9403:11;9396:55;9479:2;9474:3;9470:12;9463:19;;9302:186;;;;9497:382;;9657:67;9721:2;9716:3;9657:67;;;9650:74;;9757:34;9753:1;9748:3;9744:11;9737:55;9826:15;9821:2;9816:3;9812:12;9805:37;9870:2;9865:3;9861:12;9854:19;;9643:236;;;;9888:375;;10048:67;10112:2;10107:3;10048:67;;;10041:74;;10148:34;10144:1;10139:3;10135:11;10128:55;10217:8;10212:2;10207:3;10203:12;10196:30;10254:2;10249:3;10245:12;10238:19;;10034:229;;;;10272:383;;10432:67;10496:2;10491:3;10432:67;;;10425:74;;10532:34;10528:1;10523:3;10519:11;10512:55;10601:16;10596:2;10591:3;10587:12;10580:38;10646:2;10641:3;10637:12;10630:19;;10418:237;;;;10664:332;;10824:67;10888:2;10883:3;10824:67;;;10817:74;;10924:34;10920:1;10915:3;10911:11;10904:55;10987:2;10982:3;10978:12;10971:19;;10810:186;;;;11005:394;;11165:67;11229:2;11224:3;11165:67;;;11158:74;;11265:34;11261:1;11256:3;11252:11;11245:55;11334:27;11329:2;11324:3;11320:12;11313:49;11390:2;11385:3;11381:12;11374:19;;11151:248;;;;11408:383;;11568:67;11632:2;11627:3;11568:67;;;11561:74;;11668:34;11664:1;11659:3;11655:11;11648:55;11737:16;11732:2;11727:3;11723:12;11716:38;11782:2;11777:3;11773:12;11766:19;;11554:237;;;;11800:322;;11960:67;12024:2;12019:3;11960:67;;;11953:74;;12060:24;12056:1;12051:3;12047:11;12040:45;12113:2;12108:3;12104:12;12097:19;;11946:176;;;;12131:375;;12291:67;12355:2;12350:3;12291:67;;;12284:74;;12391:34;12387:1;12382:3;12378:11;12371:55;12460:8;12455:2;12450:3;12446:12;12439:30;12497:2;12492:3;12488:12;12481:19;;12277:229;;;;12515:341;;12693:84;12775:1;12770:3;12693:84;;;12686:91;;12810:9;12806:1;12801:3;12797:11;12790:30;12848:1;12843:3;12839:11;12832:18;;12679:177;;;;12865:339;;13043:84;13125:1;13120:3;13043:84;;;13036:91;;13160:7;13156:1;13151:3;13147:11;13140:28;13196:1;13191:3;13187:11;13180:18;;13029:175;;;;13213:340;;13391:84;13473:1;13468:3;13391:84;;;13384:91;;13508:8;13504:1;13499:3;13495:11;13488:29;13545:1;13540:3;13536:11;13529:18;;13377:176;;;;13561:113;13644:24;13662:5;13644:24;;;13639:3;13632:37;13626:48;;;13681:107;13760:22;13776:5;13760:22;;;13755:3;13748:35;13742:46;;;13795:509;;13964:69;14029:3;14020:6;13964:69;;;14055:1;14050:3;14046:11;14039:18;;14068:75;14139:3;14130:6;14068:75;;;14165:2;14160:3;14156:12;14149:19;;14179:75;14250:3;14241:6;14179:75;;;14276:2;14271:3;14267:12;14260:19;;14296:3;14289:10;;13952:352;;;;;;;14311:383;;14458:75;14529:3;14520:6;14458:75;;;14555:2;14550:3;14546:12;14539:19;;14569:75;14640:3;14631:6;14569:75;;;14666:2;14661:3;14657:12;14650:19;;14686:3;14679:10;;14446:248;;;;;;14701:266;;14847:95;14938:3;14929:6;14847:95;;;14840:102;;14959:3;14952:10;;14828:139;;;;;14974:511;;15201:148;15345:3;15201:148;;;15194:155;;15360:75;15431:3;15422:6;15360:75;;;15457:2;15452:3;15448:12;15441:19;;15477:3;15470:10;;15182:303;;;;;15492:372;;15691:148;15835:3;15691:148;;;15684:155;;15856:3;15849:10;;15672:192;;;;15871:372;;16070:148;16214:3;16070:148;;;16063:155;;16235:3;16228:10;;16051:192;;;;16250:372;;16449:148;16593:3;16449:148;;;16442:155;;16614:3;16607:10;;16430:192;;;;16629:213;;16747:2;16736:9;16732:18;16724:26;;16761:71;16829:1;16818:9;16814:17;16805:6;16761:71;;;16718:124;;;;;16849:229;;16975:2;16964:9;16960:18;16952:26;;16989:79;17065:1;17054:9;17050:17;17041:6;16989:79;;;16946:132;;;;;17085:201;;17197:2;17186:9;17182:18;17174:26;;17211:65;17273:1;17262:9;17258:17;17249:6;17211:65;;;17168:118;;;;;17293:535;;17489:3;17478:9;17474:19;17466:27;;17504:65;17566:1;17555:9;17551:17;17542:6;17504:65;;;17580:72;17648:2;17637:9;17633:18;17624:6;17580:72;;;17663;17731:2;17720:9;17716:18;17707:6;17663:72;;;17746;17814:2;17803:9;17799:18;17790:6;17746:72;;;17460:368;;;;;;;;17835:415;;17999:2;17988:9;17984:18;17976:26;;18013:65;18075:1;18064:9;18060:17;18051:6;18013:65;;;18089:72;18157:2;18146:9;18142:18;18133:6;18089:72;;;18172:68;18236:2;18225:9;18221:18;18212:6;18172:68;;;17970:280;;;;;;;18257:213;;18375:2;18364:9;18360:18;18352:26;;18389:71;18457:1;18446:9;18442:17;18433:6;18389:71;;;18346:124;;;;;18477:539;;18675:3;18664:9;18660:19;18652:27;;18690:71;18758:1;18747:9;18743:17;18734:6;18690:71;;;18772:68;18836:2;18825:9;18821:18;18812:6;18772:68;;;18851:72;18919:2;18908:9;18904:18;18895:6;18851:72;;;18934;19002:2;18991:9;18987:18;18978:6;18934:72;;;18646:370;;;;;;;;19023:235;;19152:2;19141:9;19137:18;19129:26;;19166:82;19245:1;19234:9;19230:17;19221:6;19166:82;;;19123:135;;;;;19265:293;;19399:2;19388:9;19384:18;19376:26;;19449:9;19443:4;19439:20;19435:1;19424:9;19420:17;19413:47;19474:74;19543:4;19534:6;19474:74;;;19466:82;;19370:188;;;;;19565:407;;19756:2;19745:9;19741:18;19733:26;;19806:9;19800:4;19796:20;19792:1;19781:9;19777:17;19770:47;19831:131;19957:4;19831:131;;;19823:139;;19727:245;;;;19979:407;;20170:2;20159:9;20155:18;20147:26;;20220:9;20214:4;20210:20;20206:1;20195:9;20191:17;20184:47;20245:131;20371:4;20245:131;;;20237:139;;20141:245;;;;20393:407;;20584:2;20573:9;20569:18;20561:26;;20634:9;20628:4;20624:20;20620:1;20609:9;20605:17;20598:47;20659:131;20785:4;20659:131;;;20651:139;;20555:245;;;;20807:407;;20998:2;20987:9;20983:18;20975:26;;21048:9;21042:4;21038:20;21034:1;21023:9;21019:17;21012:47;21073:131;21199:4;21073:131;;;21065:139;;20969:245;;;;21221:407;;21412:2;21401:9;21397:18;21389:26;;21462:9;21456:4;21452:20;21448:1;21437:9;21433:17;21426:47;21487:131;21613:4;21487:131;;;21479:139;;21383:245;;;;21635:407;;21826:2;21815:9;21811:18;21803:26;;21876:9;21870:4;21866:20;21862:1;21851:9;21847:17;21840:47;21901:131;22027:4;21901:131;;;21893:139;;21797:245;;;;22049:407;;22240:2;22229:9;22225:18;22217:26;;22290:9;22284:4;22280:20;22276:1;22265:9;22261:17;22254:47;22315:131;22441:4;22315:131;;;22307:139;;22211:245;;;;22463:407;;22654:2;22643:9;22639:18;22631:26;;22704:9;22698:4;22694:20;22690:1;22679:9;22675:17;22668:47;22729:131;22855:4;22729:131;;;22721:139;;22625:245;;;;22877:407;;23068:2;23057:9;23053:18;23045:26;;23118:9;23112:4;23108:20;23104:1;23093:9;23089:17;23082:47;23143:131;23269:4;23143:131;;;23135:139;;23039:245;;;;23291:407;;23482:2;23471:9;23467:18;23459:26;;23532:9;23526:4;23522:20;23518:1;23507:9;23503:17;23496:47;23557:131;23683:4;23557:131;;;23549:139;;23453:245;;;;23705:213;;23823:2;23812:9;23808:18;23800:26;;23837:71;23905:1;23894:9;23890:17;23881:6;23837:71;;;23794:124;;;;;23925:256;;23987:2;23981:9;23971:19;;24025:4;24017:6;24013:17;24124:6;24112:10;24109:22;24088:18;24076:10;24073:34;24070:62;24067:2;;;24145:1;24142;24135:12;24067:2;24165:10;24161:2;24154:22;23965:216;;;;;24188:304;;24347:18;24339:6;24336:30;24333:2;;;24379:1;24376;24369:12;24333:2;24414:4;24406:6;24402:17;24394:25;;24477:4;24471;24467:15;24459:23;;24270:222;;;;24499:322;;24643:18;24635:6;24632:30;24629:2;;;24675:1;24672;24665:12;24629:2;24742:4;24738:9;24731:4;24723:6;24719:17;24715:33;24707:41;;24806:4;24800;24796:15;24788:23;;24566:255;;;;24828:118;;24918:5;24912:12;24902:22;;24883:63;;;;24953:122;;25047:5;25041:12;25031:22;;25012:63;;;;25083:163;;25198:6;25193:3;25186:19;25235:4;25230:3;25226:14;25211:29;;25179:67;;;;;25255:145;;25391:3;25376:18;;25369:31;;;;;25408:91;;25470:24;25488:5;25470:24;;;25459:35;;25453:46;;;;25506:85;;25579:5;25572:13;25565:21;25554:32;;25548:43;;;;25598:72;;25660:5;25649:16;;25643:27;;;;25677:132;;25752:5;25741:16;;25758:46;25798:5;25758:46;;;25735:74;;;;25816:121;;25889:42;25882:5;25878:54;25867:65;;25861:76;;;;25944:72;;26006:5;25995:16;;25989:27;;;;26023:81;;26094:4;26087:5;26083:16;26072:27;;26066:38;;;;26111:129;;26198:37;26229:5;26198:37;;;26185:50;;26179:61;;;;26247:132;;26337:37;26368:5;26337:37;;;26324:50;;26318:61;;;;26386:121;;26465:37;26496:5;26465:37;;;26452:50;;26446:61;;;;26514:108;;26593:24;26611:5;26593:24;;;26580:37;;26574:48;;;;26630:145;26711:6;26706:3;26701;26688:30;26767:1;26758:6;26753:3;26749:16;26742:27;26681:94;;;;26784:268;26849:1;26856:101;26870:6;26867:1;26864:13;26856:101;;;26946:1;26941:3;26937:11;26931:18;26927:1;26922:3;26918:11;26911:39;26892:2;26889:1;26885:10;26880:15;;26856:101;;;26972:6;26969:1;26966:13;26963:2;;;27037:1;27028:6;27023:3;27019:16;27012:27;26963:2;26833:219;;;;;27060:95;;27124:26;27144:5;27124:26;;;27113:37;;27107:48;;;;27162:90;;27223:24;27241:5;27223:24;;;27212:35;;27206:46;;;;27259:74;;27323:5;27312:16;;27306:27;;;;27340:89;;27404:20;27418:5;27404:20;;;27393:31;;27387:42;;;;27436:88;;27498:21;27513:5;27498:21;;;27487:32;;27481:43;;;;27531:97;;27619:2;27615:7;27610:2;27603:5;27599:14;27595:28;27585:38;;27579:49;;;;27636:96;;27716:5;27711:3;27707:15;27685:37;;27679:53;;;;27740:94;;27818:5;27814:2;27810:14;27788:36;;27782:52;;;;27842:104;27924:1;27917:5;27914:12;27904:2;;27930:9;27904:2;27898:48;;27953:117;28022:24;28040:5;28022:24;;;28015:5;28012:35;28002:2;;28061:1;28058;28051:12;28002:2;27996:74;;28077:111;28143:21;28158:5;28143:21;;;28136:5;28133:32;28123:2;;28179:1;28176;28169:12;28123:2;28117:71;;28195:117;28264:24;28282:5;28264:24;;;28257:5;28254:35;28244:2;;28303:1;28300;28293:12;28244:2;28238:74;;28319:107;28401:1;28394:5;28391:12;28381:2;;28417:1;28414;28407:12;28381:2;28375:51;;28433:117;28502:24;28520:5;28502:24;;;28495:5;28492:35;28482:2;;28541:1;28538;28531:12;28482:2;28476:74;;28557:113;28624:22;28640:5;28624:22;;;28617:5;28614:33;28604:2;;28661:1;28658;28651:12;28604:2;28598:72;",
  "source": "pragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/cryptography/MerkleProof.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../../rootLogic/contracts/RootLogic.sol\";\nimport \"../../licensedUser/contracts/LicensedUserWalletFactory.sol\";\nimport \"../../licensedUser/contracts/LicensedUserLogic.sol\";\nimport \"../../licensedUser/contracts/IdentityUserType.sol\";\nimport \"../../name/contracts/Contracts.sol\";\n\ncontract BulkIssue is IdentityUserType, Contracts, Initializable, Ownable {\n  using ECDSA for bytes32;\n  /*\n   * Structs\n   */\n  struct Batch {\n    bool prepared;\n    address issuer;\n    uint8 processedCount;\n    mapping(bytes32 => bool) processedLeaves;\n  }\n\n  /*\n   * Events\n   */\n  event BatchPrepared(bytes32 indexed merkleRoot);\n\n  event CreateSRRWithProof(bytes32 indexed merkleRoot, bytes32 srrHash);\n\n  /*\n   * Storages\n   */\n  mapping(bytes32 => Batch) public batches;\n  address private _nameRegistryAddress;\n\n  /*\n   * Modifiers\n   */\n  modifier isNewBatch(bytes32 merkleRoot) {\n    require(\n      !batches[merkleRoot].prepared,\n      \"Batch already exists for the given merkle root\"\n    );\n    _;\n  }\n\n  modifier batchExists(bytes32 merkleRoot) {\n    require(\n      batches[merkleRoot].prepared,\n      \"Batch doesn't exist for the given merkle root\"\n    );\n    _;\n  }\n\n  modifier srrNotAlreadyProcessed(bytes32 merkleRoot, bytes32 srrHash) {\n    require(\n      !batches[merkleRoot].processedLeaves[srrHash],\n      \"SRR already processed.\"\n    );\n    _;\n  }\n\n  modifier onlyLicensedUser() {\n    require(\n      _userFactory().instantiation(msg.sender) || _isAdmin(),\n      \"The sender is neither the licensed user contract nor the admin\"\n    );\n    _;\n  }\n\n  /*\n   * Public functions\n   */\n\n  /**\n   * @dev Initializes the BulkIssue contract\n   */\n  function initialize(address nameRegistry) public initializer {\n    _nameRegistryAddress = nameRegistry;\n    Ownable.initialize(msg.sender);\n  }\n\n  /**\n   * @dev Reserves a batch request before excuting\n   * @param merkleRoot bytes32 of merkle root\n   */\n  function prepareBatch(bytes32 merkleRoot)\n    public\n    isNewBatch(merkleRoot)\n    onlyOwner\n  {\n    _prepareBatch(merkleRoot);\n  }\n\n  /**\n   * @dev Reserves a batch request before excuting\n   * @param merkleRoot bytes32 of merkle root\n   * @param v uint8 of sig.v\n   * @param r bytes32 of sig.r\n   * @param s bytes32 of sig.s\n   */\n  function prepareBatchFromLicensedUser(\n    bytes32 merkleRoot,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) public isNewBatch(merkleRoot) onlyLicensedUser {\n    bytes32 messageHash = merkleRoot.toEthSignedMessageHash();\n    address signer = ecrecover(messageHash, v, r, s);\n    require(\n      LicensedUserLogic(msg.sender).isOwnerAddress(signer),\n      \"Signer must be an owner on the calling LicensedUserWallet\"\n    );\n    _prepareBatch(merkleRoot);\n  }\n\n  /**\n   * @dev Creates SRR with merkle proof\n   * @param merkleProof bytes32 of merkle proof value\n   * @param merkleRoot bytes32 of merkle root value\n   * @param srrHash bytes32 of merkle tree leaf\n   * @param isPrimaryIssuer boolean whether the user is a primary issuer\n   * @param artistAddress address of the artist contract\n   * @param metadataDigest bytes32 of metadata hash\n   * @return uint256 tokenId\n   */\n  function createSRRWithProof(\n    bytes32[] memory merkleProof,\n    bytes32 merkleRoot,\n    bytes32 srrHash,\n    bool isPrimaryIssuer,\n    address artistAddress,\n    bytes32 metadataDigest\n  )\n    public\n    batchExists(merkleRoot)\n    srrNotAlreadyProcessed(merkleRoot, srrHash)\n    returns (uint256 tokenId)\n  {\n    require(\n      verifySRRHash(srrHash, isPrimaryIssuer, artistAddress, metadataDigest),\n      \"srrHash does not match the srr details\"\n    );\n\n    require(\n      MerkleProof.verify(merkleProof, merkleRoot, srrHash),\n      \"Merkle proof verification failed\"\n    );\n\n    batches[merkleRoot].processedLeaves[srrHash] = true;\n    batches[merkleRoot].processedCount++;\n\n    tokenId = _rootLogic().createSRRFromBulk(\n      isPrimaryIssuer,\n      artistAddress,\n      metadataDigest,\n      batches[merkleRoot].issuer // LUW address - issuer\n    );\n    emit CreateSRRWithProof(merkleRoot, srrHash);\n  }\n\n  /**\n   * @dev Verify the hash of the params when creating SRR\n   * @param srrHash bytes32 of hash value of all other params\n   * @param isPrimaryIssuer boolean whether the user is a primary issuer\n   * @param artistAddress address of the artist contract\n   * @param metadataDigest bytes32 of metadata hash\n   * @return whether the hash matches or not\n   */\n  function verifySRRHash(\n    bytes32 srrHash,\n    bool isPrimaryIssuer,\n    address artistAddress,\n    bytes32 metadataDigest\n  ) public pure returns (bool hashMatches) {\n    hashMatches =\n      srrHash ==\n      keccak256(\n        abi.encodePacked(isPrimaryIssuer, artistAddress, metadataDigest)\n      );\n  }\n\n  /**\n   * @dev Gets the endpoint address of NameRegistry\n   * @return NameRegistry proxy address\n   */\n  function getNameRegistryAddress() public view returns (address) {\n    return _nameRegistryAddress;\n  }\n\n  /**\n   * Private functions\n   */\n\n  function _prepareBatch(bytes32 merkleRoot) private {\n    batches[merkleRoot] = Batch({\n      prepared: true,\n      issuer: msg.sender,\n      processedCount: 0\n    });\n    emit BatchPrepared(merkleRoot);\n  }\n\n  function _isAdmin() private view returns (bool) {\n    address proxy = msg.sender;\n    LicensedUserLogic logic = LicensedUserLogic(proxy);\n    return logic.getUserType() == UserType.ADMIN;\n  }\n\n  function _nameRegistry() private view returns (NameRegistry) {\n    return NameRegistry(_nameRegistryAddress);\n  }\n\n  function _rootLogic() private view returns (RootLogic) {\n    address rootLogicAddress = _nameRegistry().get(ROOT_LOGIC);\n    RootLogic rootLogic = RootLogic(rootLogicAddress);\n    return rootLogic;\n  }\n\n  function _userFactory() private view returns (LicensedUserWalletFactory) {\n    address licensedUserWalletFactoryAddress = _nameRegistry().get(\n      LICENSED_USER_WALLET_FACTORY\n    );\n    LicensedUserWalletFactory factory = LicensedUserWalletFactory(\n      licensedUserWalletFactoryAddress\n    );\n    return factory;\n  }\n}\n",
  "sourcePath": "/root/project/app/batch/contracts/BulkIssue.sol",
  "ast": {
    "absolutePath": "/root/project/app/batch/contracts/BulkIssue.sol",
    "exportedSymbols": {
      "BulkIssue": [
        410
      ]
    },
    "id": 411,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4804,
        "src": "59:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/MerkleProof.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4609,
        "src": "142:89:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4540,
        "src": "232:83:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4948,
        "src": "316:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/rootLogic/contracts/RootLogic.sol",
        "file": "../../rootLogic/contracts/RootLogic.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4362,
        "src": "378:49:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/licensedUser/contracts/LicensedUserWalletFactory.sol",
        "file": "../../licensedUser/contracts/LicensedUserWalletFactory.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 1918,
        "src": "428:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/licensedUser/contracts/LicensedUserLogic.sol",
        "file": "../../licensedUser/contracts/LicensedUserLogic.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 1571,
        "src": "497:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/licensedUser/contracts/IdentityUserType.sol",
        "file": "../../licensedUser/contracts/IdentityUserType.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 1238,
        "src": "558:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 3113,
        "src": "618:44:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "IdentityUserType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1237,
              "src": "686:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityUserType_$1237",
                "typeString": "contract IdentityUserType"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "686:16:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3112,
              "src": "704:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$3112",
                "typeString": "contract Contracts"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "704:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4947,
              "src": "715:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4947",
                "typeString": "contract Initializable"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "715:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4803,
              "src": "730:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4803",
                "typeString": "contract Ownable"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "730:7:0"
          }
        ],
        "contractDependencies": [
          1237,
          3112,
          4458,
          4803,
          4947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 410,
        "linearizedBaseContracts": [
          410,
          4803,
          4458,
          4947,
          3112,
          1237
        ],
        "name": "BulkIssue",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4539,
              "src": "748:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$4539",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "742:24:0",
            "typeName": {
              "id": 21,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "758:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "canonicalName": "BulkIssue.Batch",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 24,
                "name": "prepared",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "812:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "issuer",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "831:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "831:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "processedCount",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "851:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "851:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "name": "processedLeaves",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "877:40:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 31,
                  "keyType": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "877:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 30,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Batch",
            "nodeType": "StructDefinition",
            "scope": 410,
            "src": "793:129:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37,
            "name": "BatchPrepared",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "969:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:28:0"
            },
            "src": "949:48:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 43,
            "name": "CreateSRRWithProof",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "indexed": true,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1026:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1054:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1025:45:0"
            },
            "src": "1001:70:0"
          },
          {
            "constant": false,
            "id": 47,
            "name": "batches",
            "nodeType": "VariableDeclaration",
            "scope": 410,
            "src": "1100:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
              "typeString": "mapping(bytes32 => struct BulkIssue.Batch)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1108:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1100:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                "typeString": "mapping(bytes32 => struct BulkIssue.Batch)"
              },
              "valueType": {
                "contractScope": null,
                "id": 45,
                "name": "Batch",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 33,
                "src": "1119:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Batch_$33_storage_ptr",
                  "typeString": "struct BulkIssue.Batch"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 49,
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 410,
            "src": "1144:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1251:124:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1272:29:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "batches",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "1273:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                              }
                            },
                            "id": 56,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "merkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1281:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1273:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Batch_$33_storage",
                              "typeString": "struct BulkIssue.Batch storage ref"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prepared",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "1273:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426174636820616c72656164792065786973747320666f722074686520676976656e206d65726b6c6520726f6f74",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1309:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51e82ae41079c4b89fb07613ccc22ab9b18cffba5c9a1645ce20b03d6ff3274e",
                          "typeString": "literal_string \"Batch already exists for the given merkle root\""
                        },
                        "value": "Batch already exists for the given merkle root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51e82ae41079c4b89fb07613ccc22ab9b18cffba5c9a1645ce20b03d6ff3274e",
                          "typeString": "literal_string \"Batch already exists for the given merkle root\""
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:106:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:106:0"
                },
                {
                  "id": 62,
                  "nodeType": "PlaceholderStatement",
                  "src": "1369:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 64,
            "name": "isNewBatch",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1231:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1230:20:0"
            },
            "src": "1211:164:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1420:122:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "batches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "1441:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                              "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                            }
                          },
                          "id": 71,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1449:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1441:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Batch_$33_storage",
                            "typeString": "struct BulkIssue.Batch storage ref"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "prepared",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "1441:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426174636820646f65736e277420657869737420666f722074686520676976656e206d65726b6c6520726f6f74",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_233bf8f347e344ff96044a45ccc93396a445b4e8666017994ef9177b1b2e7529",
                          "typeString": "literal_string \"Batch doesn't exist for the given merkle root\""
                        },
                        "value": "Batch doesn't exist for the given merkle root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_233bf8f347e344ff96044a45ccc93396a445b4e8666017994ef9177b1b2e7529",
                          "typeString": "literal_string \"Batch doesn't exist for the given merkle root\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:104:0"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "1536:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "name": "batchExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1400:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1399:20:0"
            },
            "src": "1379:163:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1615:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1636:45:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 85,
                                "name": "batches",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1637:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                                  "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                                }
                              },
                              "id": 87,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 86,
                                "name": "merkleRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "1645:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1637:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Batch_$33_storage",
                                "typeString": "struct BulkIssue.Batch storage ref"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "processedLeaves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "1637:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 90,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "srrHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1673:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1637:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53525220616c72656164792070726f6365737365642e",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c1cd9e6477211f489d8ac253c04d5e7de35272bae516c8089a88628691c92ef7",
                          "typeString": "literal_string \"SRR already processed.\""
                        },
                        "value": "SRR already processed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c1cd9e6477211f489d8ac253c04d5e7de35272bae516c8089a88628691c92ef7",
                          "typeString": "literal_string \"SRR already processed.\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1621:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1621:98:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1621:98:0"
                },
                {
                  "id": 95,
                  "nodeType": "PlaceholderStatement",
                  "src": "1725:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "name": "srrNotAlreadyProcessed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1578:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1598:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1577:37:0"
            },
            "src": "1546:185:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1763:165:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 103,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5322,
                                "src": "1813:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1813:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 100,
                                "name": "_userFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 409,
                                "src": "1784:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_LicensedUserWalletFactory_$1917_$",
                                  "typeString": "function () view returns (contract LicensedUserWalletFactory)"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1784:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                                "typeString": "contract LicensedUserWalletFactory"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "instantiation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1728,
                            "src": "1784:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1784:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 106,
                            "name": "_isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1828:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1784:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652073656e646572206973206e65697468657220746865206c6963656e736564207573657220636f6e7472616374206e6f72207468652061646d696e",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1846:64:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04d350b4587f05523b7be89d806bcd2b2343e3616d0e005e1f8a9ebb92db0cb5",
                          "typeString": "literal_string \"The sender is neither the licensed user contract nor the admin\""
                        },
                        "value": "The sender is neither the licensed user contract nor the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04d350b4587f05523b7be89d806bcd2b2343e3616d0e005e1f8a9ebb92db0cb5",
                          "typeString": "literal_string \"The sender is neither the licensed user contract nor the admin\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1769:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:147:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:147:0"
                },
                {
                  "id": 112,
                  "nodeType": "PlaceholderStatement",
                  "src": "1922:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "name": "onlyLicensedUser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:2:0"
            },
            "src": "1735:193:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2084:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2090:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "2113:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2090:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5322,
                          "src": "2150:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2150:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4803,
                        "src": "2131:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$4803_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4714,
                      "src": "2131:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:30:0"
                }
              ]
            },
            "documentation": "@dev Initializes the BulkIssue contract",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 118,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4922,
                  "src": "2072:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2072:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2043:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2042:22:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:0:0"
            },
            "scope": 410,
            "src": "2023:143:0",
            "stateMutability": "nonpayable",
            "superFunction": 4714,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "2375:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2395:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 143,
                      "name": "_prepareBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "2381:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2381:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:25:0"
                }
              ]
            },
            "documentation": "@dev Reserves a batch request before excuting\n@param merkleRoot bytes32 of merkle root",
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 138,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 135,
                    "src": "2347:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 139,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 137,
                  "name": "isNewBatch",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 64,
                  "src": "2336:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2336:22:0"
              },
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4732,
                  "src": "2363:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2363:9:0"
              }
            ],
            "name": "prepareBatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2301:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2300:20:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:0:0"
            },
            "scope": 410,
            "src": "2279:132:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2771:299:0",
              "statements": [
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "name": "messageHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2777:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2777:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "2799:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4538,
                      "src": "2799:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2777:57:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "name": "signer",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2840:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2840:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "messageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2867:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "2880:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2883:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "2886:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 172,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5314,
                      "src": "2857:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2840:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2954:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 181,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5322,
                                  "src": "2927:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2927:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 180,
                              "name": "LicensedUserLogic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "2909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LicensedUserLogic_$1570_$",
                                "typeString": "type(contract LicensedUserLogic)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2909:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                              "typeString": "contract LicensedUserLogic"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOwnerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2680,
                          "src": "2909:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2909:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e6572206d75737420626520616e206f776e6572206f6e207468652063616c6c696e67204c6963656e7365645573657257616c6c6574",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2969:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e13b52acd5857da3d5a62c38252839c358adef9a8d35f477e660fa0c47f0a43",
                          "typeString": "literal_string \"Signer must be an owner on the calling LicensedUserWallet\""
                        },
                        "value": "Signer must be an owner on the calling LicensedUserWallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e13b52acd5857da3d5a62c38252839c358adef9a8d35f477e660fa0c47f0a43",
                          "typeString": "literal_string \"Signer must be an owner on the calling LicensedUserWallet\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "2894:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:140:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "3054:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 190,
                      "name": "_prepareBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "3040:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3040:25:0"
                }
              ]
            },
            "documentation": "@dev Reserves a batch request before excuting\n@param merkleRoot bytes32 of merkle root\n@param v uint8 of sig.v\n@param r bytes32 of sig.r\n@param s bytes32 of sig.s",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 159,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "2742:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 158,
                  "name": "isNewBatch",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 64,
                  "src": "2731:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2731:22:0"
              },
              {
                "arguments": null,
                "id": 162,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 161,
                  "name": "onlyLicensedUser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 114,
                  "src": "2754:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2754:16:0"
              }
            ],
            "name": "prepareBatchFromLicensedUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2658:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2682:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2695:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2695:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2710:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2652:71:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2771:0:0"
            },
            "scope": 410,
            "src": "2615:455:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3802:599:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 222,
                            "name": "srrHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "3837:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 223,
                            "name": "isPrimaryIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "3846:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "artistAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "3863:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "metadataDigest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "3878:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 221,
                          "name": "verifySRRHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "3823:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bool_$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bool,address,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3823:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7372724861736820646f6573206e6f74206d6174636820746865207372722064657461696c73",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3901:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef6055c36a56d7059747642ebbfcc14923baede231215fc84dc5b92d9aa40980",
                          "typeString": "literal_string \"srrHash does not match the srr details\""
                        },
                        "value": "srrHash does not match the srr details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef6055c36a56d7059747642ebbfcc14923baede231215fc84dc5b92d9aa40980",
                          "typeString": "literal_string \"srrHash does not match the srr details\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "3808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3808:139:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3808:139:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3988:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4001:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "srrHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4013:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4608,
                            "src": "3969:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$4608_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4607,
                          "src": "3969:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3969:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d65726b6c652070726f6f6620766572696669636174696f6e206661696c6564",
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4029:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22a4a81d703f7af7719fa268b4c1089e2edd388877fe529a428cdd14d76ccf88",
                          "typeString": "literal_string \"Merkle proof verification failed\""
                        },
                        "value": "Merkle proof verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22a4a81d703f7af7719fa268b4c1089e2edd388877fe529a428cdd14d76ccf88",
                          "typeString": "literal_string \"Merkle proof verification failed\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "3954:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3954:115:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "batches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "4076:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                              "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                            }
                          },
                          "id": 242,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4084:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4076:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Batch_$33_storage",
                            "typeString": "struct BulkIssue.Batch storage ref"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "processedLeaves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "4076:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 245,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "srrHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4112:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4076:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4123:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4076:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "4076:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4133:36:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "batches",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "4133:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 250,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "4141:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4133:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Batch_$33_storage",
                          "typeString": "struct BulkIssue.Batch storage ref"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "processedCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "4133:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 255,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "4176:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "isPrimaryIssuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "4224:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "artistAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "4247:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "metadataDigest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4268:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 262,
                              "name": "batches",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4290:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                              }
                            },
                            "id": 264,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "merkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "4298:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4290:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Batch_$33_storage",
                              "typeString": "struct BulkIssue.Batch storage ref"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "4290:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 256,
                            "name": "_rootLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "4186:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_RootLogic_$4361_$",
                              "typeString": "function () view returns (contract RootLogic)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4186:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RootLogic_$4361",
                            "typeString": "contract RootLogic"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createSRRFromBulk",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3573,
                        "src": "4186:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (bool,address,bytes32,address) external returns (uint256)"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4186:160:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4176:170:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:170:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "4376:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "srrHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4388:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 269,
                      "name": "CreateSRRWithProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "4357:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4357:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "EmitStatement",
                  "src": "4352:44:0"
                }
              ]
            },
            "documentation": "@dev Creates SRR with merkle proof\n@param merkleProof bytes32 of merkle proof value\n@param merkleRoot bytes32 of merkle root value\n@param srrHash bytes32 of merkle tree leaf\n@param isPrimaryIssuer boolean whether the user is a primary issuer\n@param artistAddress address of the artist contract\n@param metadataDigest bytes32 of metadata hash\n@return uint256 tokenId",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 211,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "3710:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 210,
                  "name": "batchExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 78,
                  "src": "3698:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3698:23:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 214,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "3749:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 215,
                    "name": "srrHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "3761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 216,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 213,
                  "name": "srrNotAlreadyProcessed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 97,
                  "src": "3726:22:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$_t_bytes32_$",
                    "typeString": "modifier (bytes32,bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3726:43:0"
              }
            ],
            "name": "createSRRWithProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "merkleProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3524:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 196,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3524:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 197,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3524:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3558:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3558:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3582:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3582:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "name": "isPrimaryIssuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3603:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "name": "artistAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3629:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "metadataDigest",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3656:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3518:164:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3783:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3782:17:0"
            },
            "scope": 410,
            "src": "3491:910:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "4932:139:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 288,
                      "name": "hashMatches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "4938:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "srrHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "4958:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 293,
                                "name": "isPrimaryIssuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "5011:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "artistAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "5028:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 295,
                                "name": "metadataDigest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "5043:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 291,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5309,
                                "src": "4994:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4994:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4994:64:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 290,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5316,
                          "src": "4975:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4975:91:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "4958:108:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4938:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "4938:128:0"
                }
              ]
            },
            "documentation": "@dev Verify the hash of the params when creating SRR\n@param srrHash bytes32 of hash value of all other params\n@param isPrimaryIssuer boolean whether the user is a primary issuer\n@param artistAddress address of the artist contract\n@param metadataDigest bytes32 of metadata hash\n@return whether the hash matches or not",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifySRRHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4792:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "isPrimaryIssuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4813:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "artistAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4839:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4839:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "name": "metadataDigest",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4866:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4786:106:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "hashMatches",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4914:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4914:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4913:18:0"
            },
            "scope": 410,
            "src": "4764:307:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "5243:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 307,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "5256:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 306,
                  "id": 308,
                  "nodeType": "Return",
                  "src": "5249:27:0"
                }
              ]
            },
            "documentation": "@dev Gets the endpoint address of NameRegistry\n@return NameRegistry proxy address",
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5210:2:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "5234:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5233:9:0"
            },
            "scope": 410,
            "src": "5179:102:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "5372:155:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "batches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "5378:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                          "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                        }
                      },
                      "id": 317,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "5386:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5378:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Batch_$33_storage",
                        "typeString": "struct BulkIssue.Batch storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5424:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5322,
                            "src": "5444:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5444:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5478:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 318,
                        "name": "Batch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5400:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Batch_$33_storage_ptr_$",
                          "typeString": "type(struct BulkIssue.Batch storage pointer)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "prepared",
                        "issuer",
                        "processedCount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5400:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Batch_$33_memory",
                        "typeString": "struct BulkIssue.Batch memory"
                      }
                    },
                    "src": "5378:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Batch_$33_storage",
                      "typeString": "struct BulkIssue.Batch storage ref"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "5378:108:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 327,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "5511:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 326,
                      "name": "BatchPrepared",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "5497:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5497:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "EmitStatement",
                  "src": "5492:30:0"
                }
              ]
            },
            "documentation": "Private functions",
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareBatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "5344:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5343:20:0"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5372:0:0"
            },
            "scope": 410,
            "src": "5321:206:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "5579:143:0",
              "statements": [
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "name": "proxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "5585:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5585:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 340,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5322,
                      "src": "5601:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5601:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5585:26:0"
                },
                {
                  "assignments": [
                    342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 342,
                      "name": "logic",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "5617:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                        "typeString": "contract LicensedUserLogic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 341,
                        "name": "LicensedUserLogic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1570,
                        "src": "5617:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                          "typeString": "contract LicensedUserLogic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "5661:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 343,
                      "name": "LicensedUserLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "5643:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LicensedUserLogic_$1570_$",
                        "typeString": "type(contract LicensedUserLogic)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5643:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                      "typeString": "contract LicensedUserLogic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5617:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_UserType_$1174",
                      "typeString": "enum IdentityUserType.UserType"
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 347,
                          "name": "logic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "5680:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                            "typeString": "contract LicensedUserLogic"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getUserType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1071,
                        "src": "5680:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_UserType_$1174_$",
                          "typeString": "function () view external returns (enum IdentityUserType.UserType)"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5680:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$1174",
                        "typeString": "enum IdentityUserType.UserType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "UserType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "5703:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserType_$1174_$",
                          "typeString": "type(enum IdentityUserType.UserType)"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADMIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5703:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$1174",
                        "typeString": "enum IdentityUserType.UserType"
                      }
                    },
                    "src": "5680:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 335,
                  "id": 353,
                  "nodeType": "Return",
                  "src": "5673:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5548:2:0"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "5573:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5573:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5572:6:0"
            },
            "scope": 410,
            "src": "5531:191:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "5787:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "5813:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 360,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3164,
                      "src": "5800:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$3164_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5800:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$3164",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 359,
                  "id": 363,
                  "nodeType": "Return",
                  "src": "5793:41:0"
                }
              ]
            },
            "documentation": null,
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5748:2:0"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "5773:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$3164",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 357,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3164,
                    "src": "5773:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$3164",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5772:14:0"
            },
            "scope": 410,
            "src": "5726:113:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "5898:146:0",
              "statements": [
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5904:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5904:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3093,
                        "src": "5951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 372,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "5931:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$3164_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5931:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$3164",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3163,
                      "src": "5931:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5931:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5904:58:0"
                },
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "name": "rootLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5968:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RootLogic_$4361",
                        "typeString": "contract RootLogic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 378,
                        "name": "RootLogic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4361,
                        "src": "5968:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RootLogic_$4361",
                          "typeString": "contract RootLogic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "rootLogicAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "6000:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 380,
                      "name": "RootLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4361,
                      "src": "5990:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_RootLogic_$4361_$",
                        "typeString": "type(contract RootLogic)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5990:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RootLogic_$4361",
                      "typeString": "contract RootLogic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5968:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 384,
                    "name": "rootLogic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "6030:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RootLogic_$4361",
                      "typeString": "contract RootLogic"
                    }
                  },
                  "functionReturnParameters": 369,
                  "id": 385,
                  "nodeType": "Return",
                  "src": "6023:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5862:2:0"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5887:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RootLogic_$4361",
                    "typeString": "contract RootLogic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 367,
                    "name": "RootLogic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4361,
                    "src": "5887:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RootLogic_$4361",
                      "typeString": "contract RootLogic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5886:11:0"
            },
            "scope": 410,
            "src": "5843:201:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "6121:248:0",
              "statements": [
                {
                  "assignments": [
                    393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 393,
                      "name": "licensedUserWalletFactoryAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6127:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 392,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6127:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 399,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "LICENSED_USER_WALLET_FACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3108,
                        "src": "6197:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 394,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "6170:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$3164_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6170:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$3164",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3163,
                      "src": "6170:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6170:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6127:104:0"
                },
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6237:33:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                        "typeString": "contract LicensedUserWalletFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 400,
                        "name": "LicensedUserWalletFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1917,
                        "src": "6237:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                          "typeString": "contract LicensedUserWalletFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "licensedUserWalletFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "6306:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 402,
                      "name": "LicensedUserWalletFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1917,
                      "src": "6273:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LicensedUserWalletFactory_$1917_$",
                        "typeString": "type(contract LicensedUserWalletFactory)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6273:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                      "typeString": "contract LicensedUserWalletFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6237:107:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 401,
                    "src": "6357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                      "typeString": "contract LicensedUserWalletFactory"
                    }
                  },
                  "functionReturnParameters": 391,
                  "id": 407,
                  "nodeType": "Return",
                  "src": "6350:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_userFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6069:2:0"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "6094:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                    "typeString": "contract LicensedUserWalletFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 389,
                    "name": "LicensedUserWalletFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1917,
                    "src": "6094:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                      "typeString": "contract LicensedUserWalletFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:27:0"
            },
            "scope": 410,
            "src": "6048:321:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 411,
        "src": "664:5707:0"
      }
    ],
    "src": "0:6372:0"
  },
  "legacyAST": {
    "absolutePath": "/root/project/app/batch/contracts/BulkIssue.sol",
    "exportedSymbols": {
      "BulkIssue": [
        410
      ]
    },
    "id": 411,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4804,
        "src": "59:82:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/MerkleProof.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4609,
        "src": "142:89:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4540,
        "src": "232:83:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4948,
        "src": "316:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/rootLogic/contracts/RootLogic.sol",
        "file": "../../rootLogic/contracts/RootLogic.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 4362,
        "src": "378:49:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/licensedUser/contracts/LicensedUserWalletFactory.sol",
        "file": "../../licensedUser/contracts/LicensedUserWalletFactory.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 1918,
        "src": "428:68:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/licensedUser/contracts/LicensedUserLogic.sol",
        "file": "../../licensedUser/contracts/LicensedUserLogic.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 1571,
        "src": "497:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/licensedUser/contracts/IdentityUserType.sol",
        "file": "../../licensedUser/contracts/IdentityUserType.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 1238,
        "src": "558:59:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 411,
        "sourceUnit": 3113,
        "src": "618:44:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12,
              "name": "IdentityUserType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1237,
              "src": "686:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IdentityUserType_$1237",
                "typeString": "contract IdentityUserType"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "686:16:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 14,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3112,
              "src": "704:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$3112",
                "typeString": "contract Contracts"
              }
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "704:9:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4947,
              "src": "715:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4947",
                "typeString": "contract Initializable"
              }
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "715:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4803,
              "src": "730:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$4803",
                "typeString": "contract Ownable"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "730:7:0"
          }
        ],
        "contractDependencies": [
          1237,
          3112,
          4458,
          4803,
          4947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 410,
        "linearizedBaseContracts": [
          410,
          4803,
          4458,
          4947,
          3112,
          1237
        ],
        "name": "BulkIssue",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22,
            "libraryName": {
              "contractScope": null,
              "id": 20,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4539,
              "src": "748:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$4539",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "742:24:0",
            "typeName": {
              "id": 21,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "758:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "canonicalName": "BulkIssue.Batch",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 24,
                "name": "prepared",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "812:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "812:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "issuer",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "831:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 25,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "831:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "processedCount",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "851:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "851:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "name": "processedLeaves",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "877:40:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 31,
                  "keyType": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "885:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "877:24:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 30,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Batch",
            "nodeType": "StructDefinition",
            "scope": 410,
            "src": "793:129:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37,
            "name": "BatchPrepared",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "969:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "968:28:0"
            },
            "src": "949:48:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 43,
            "name": "CreateSRRWithProof",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "indexed": true,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1026:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "1054:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1025:45:0"
            },
            "src": "1001:70:0"
          },
          {
            "constant": false,
            "id": 47,
            "name": "batches",
            "nodeType": "VariableDeclaration",
            "scope": 410,
            "src": "1100:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
              "typeString": "mapping(bytes32 => struct BulkIssue.Batch)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1108:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1100:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                "typeString": "mapping(bytes32 => struct BulkIssue.Batch)"
              },
              "valueType": {
                "contractScope": null,
                "id": 45,
                "name": "Batch",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 33,
                "src": "1119:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Batch_$33_storage_ptr",
                  "typeString": "struct BulkIssue.Batch"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 49,
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 410,
            "src": "1144:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1251:124:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1272:29:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 54,
                              "name": "batches",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "1273:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                              }
                            },
                            "id": 56,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "merkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "1281:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1273:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Batch_$33_storage",
                              "typeString": "struct BulkIssue.Batch storage ref"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "prepared",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24,
                          "src": "1273:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426174636820616c72656164792065786973747320666f722074686520676976656e206d65726b6c6520726f6f74",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1309:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51e82ae41079c4b89fb07613ccc22ab9b18cffba5c9a1645ce20b03d6ff3274e",
                          "typeString": "literal_string \"Batch already exists for the given merkle root\""
                        },
                        "value": "Batch already exists for the given merkle root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51e82ae41079c4b89fb07613ccc22ab9b18cffba5c9a1645ce20b03d6ff3274e",
                          "typeString": "literal_string \"Batch already exists for the given merkle root\""
                        }
                      ],
                      "id": 53,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1257:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:106:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:106:0"
                },
                {
                  "id": 62,
                  "nodeType": "PlaceholderStatement",
                  "src": "1369:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 64,
            "name": "isNewBatch",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "1231:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1231:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1230:20:0"
            },
            "src": "1211:164:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1420:122:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 69,
                            "name": "batches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "1441:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                              "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                            }
                          },
                          "id": 71,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1449:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1441:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Batch_$33_storage",
                            "typeString": "struct BulkIssue.Batch storage ref"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "prepared",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "1441:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426174636820646f65736e277420657869737420666f722074686520676976656e206d65726b6c6520726f6f74",
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:47:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_233bf8f347e344ff96044a45ccc93396a445b4e8666017994ef9177b1b2e7529",
                          "typeString": "literal_string \"Batch doesn't exist for the given merkle root\""
                        },
                        "value": "Batch doesn't exist for the given merkle root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_233bf8f347e344ff96044a45ccc93396a445b4e8666017994ef9177b1b2e7529",
                          "typeString": "literal_string \"Batch doesn't exist for the given merkle root\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:104:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:104:0"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "1536:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "name": "batchExists",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1400:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1399:20:0"
            },
            "src": "1379:163:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1615:116:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1636:45:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 85,
                                "name": "batches",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47,
                                "src": "1637:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                                  "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                                }
                              },
                              "id": 87,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 86,
                                "name": "merkleRoot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80,
                                "src": "1645:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1637:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Batch_$33_storage",
                                "typeString": "struct BulkIssue.Batch storage ref"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "processedLeaves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "1637:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 90,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "srrHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "1673:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1637:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53525220616c72656164792070726f6365737365642e",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1689:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c1cd9e6477211f489d8ac253c04d5e7de35272bae516c8089a88628691c92ef7",
                          "typeString": "literal_string \"SRR already processed.\""
                        },
                        "value": "SRR already processed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c1cd9e6477211f489d8ac253c04d5e7de35272bae516c8089a88628691c92ef7",
                          "typeString": "literal_string \"SRR already processed.\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1621:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1621:98:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1621:98:0"
                },
                {
                  "id": 95,
                  "nodeType": "PlaceholderStatement",
                  "src": "1725:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "name": "srrNotAlreadyProcessed",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1578:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1598:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1577:37:0"
            },
            "src": "1546:185:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1763:165:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 103,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5322,
                                "src": "1813:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1813:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 100,
                                "name": "_userFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 409,
                                "src": "1784:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_LicensedUserWalletFactory_$1917_$",
                                  "typeString": "function () view returns (contract LicensedUserWalletFactory)"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1784:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                                "typeString": "contract LicensedUserWalletFactory"
                              }
                            },
                            "id": 102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "instantiation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1728,
                            "src": "1784:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1784:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 106,
                            "name": "_isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1828:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1828:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1784:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652073656e646572206973206e65697468657220746865206c6963656e736564207573657220636f6e7472616374206e6f72207468652061646d696e",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1846:64:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04d350b4587f05523b7be89d806bcd2b2343e3616d0e005e1f8a9ebb92db0cb5",
                          "typeString": "literal_string \"The sender is neither the licensed user contract nor the admin\""
                        },
                        "value": "The sender is neither the licensed user contract nor the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04d350b4587f05523b7be89d806bcd2b2343e3616d0e005e1f8a9ebb92db0cb5",
                          "typeString": "literal_string \"The sender is neither the licensed user contract nor the admin\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "1769:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:147:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:147:0"
                },
                {
                  "id": 112,
                  "nodeType": "PlaceholderStatement",
                  "src": "1922:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "name": "onlyLicensedUser",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1760:2:0"
            },
            "src": "1735:193:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2084:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2090:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 122,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "2113:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2090:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5322,
                          "src": "2150:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2150:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4803,
                        "src": "2131:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$4803_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4714,
                      "src": "2131:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:30:0"
                }
              ]
            },
            "documentation": "@dev Initializes the BulkIssue contract",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 118,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4922,
                  "src": "2072:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2072:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2043:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2042:22:0"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:0:0"
            },
            "scope": 410,
            "src": "2023:143:0",
            "stateMutability": "nonpayable",
            "superFunction": 4714,
            "visibility": "public"
          },
          {
            "body": {
              "id": 147,
              "nodeType": "Block",
              "src": "2375:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "2395:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 143,
                      "name": "_prepareBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "2381:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2381:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:25:0"
                }
              ]
            },
            "documentation": "@dev Reserves a batch request before excuting\n@param merkleRoot bytes32 of merkle root",
            "id": 148,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 138,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 135,
                    "src": "2347:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 139,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 137,
                  "name": "isNewBatch",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 64,
                  "src": "2336:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2336:22:0"
              },
              {
                "arguments": null,
                "id": 141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 140,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4732,
                  "src": "2363:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2363:9:0"
              }
            ],
            "name": "prepareBatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 148,
                  "src": "2301:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2300:20:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2375:0:0"
            },
            "scope": 410,
            "src": "2279:132:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2771:299:0",
              "statements": [
                {
                  "assignments": [
                    165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 165,
                      "name": "messageHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2777:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2777:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 169,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "2799:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4538,
                      "src": "2799:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2777:57:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "name": "signer",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "2840:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2840:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "messageHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2867:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 174,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "2880:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 175,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2883:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "2886:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 172,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5314,
                      "src": "2857:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2840:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2954:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 181,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5322,
                                  "src": "2927:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2927:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 180,
                              "name": "LicensedUserLogic",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "2909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LicensedUserLogic_$1570_$",
                                "typeString": "type(contract LicensedUserLogic)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2909:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                              "typeString": "contract LicensedUserLogic"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOwnerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2680,
                          "src": "2909:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2909:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5369676e6572206d75737420626520616e206f776e6572206f6e207468652063616c6c696e67204c6963656e7365645573657257616c6c6574",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2969:59:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e13b52acd5857da3d5a62c38252839c358adef9a8d35f477e660fa0c47f0a43",
                          "typeString": "literal_string \"Signer must be an owner on the calling LicensedUserWallet\""
                        },
                        "value": "Signer must be an owner on the calling LicensedUserWallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e13b52acd5857da3d5a62c38252839c358adef9a8d35f477e660fa0c47f0a43",
                          "typeString": "literal_string \"Signer must be an owner on the calling LicensedUserWallet\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "2894:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:140:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:140:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "3054:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 190,
                      "name": "_prepareBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "3040:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3040:25:0"
                }
              ]
            },
            "documentation": "@dev Reserves a batch request before excuting\n@param merkleRoot bytes32 of merkle root\n@param v uint8 of sig.v\n@param r bytes32 of sig.r\n@param s bytes32 of sig.s",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 159,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 150,
                    "src": "2742:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 158,
                  "name": "isNewBatch",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 64,
                  "src": "2731:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2731:22:0"
              },
              {
                "arguments": null,
                "id": 162,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 161,
                  "name": "onlyLicensedUser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 114,
                  "src": "2754:16:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2754:16:0"
              }
            ],
            "name": "prepareBatchFromLicensedUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2658:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2682:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 154,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2695:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2695:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2710:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2710:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2652:71:0"
            },
            "returnParameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2771:0:0"
            },
            "scope": 410,
            "src": "2615:455:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "3802:599:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 222,
                            "name": "srrHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "3837:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 223,
                            "name": "isPrimaryIssuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "3846:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "artistAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "3863:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "metadataDigest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 208,
                            "src": "3878:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 221,
                          "name": "verifySRRHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 302,
                          "src": "3823:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bool_$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bool,address,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3823:70:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7372724861736820646f6573206e6f74206d6174636820746865207372722064657461696c73",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3901:40:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef6055c36a56d7059747642ebbfcc14923baede231215fc84dc5b92d9aa40980",
                          "typeString": "literal_string \"srrHash does not match the srr details\""
                        },
                        "value": "srrHash does not match the srr details"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef6055c36a56d7059747642ebbfcc14923baede231215fc84dc5b92d9aa40980",
                          "typeString": "literal_string \"srrHash does not match the srr details\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "3808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3808:139:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3808:139:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 233,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3988:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 234,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4001:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "srrHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4013:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4608,
                            "src": "3969:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$4608_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4607,
                          "src": "3969:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3969:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d65726b6c652070726f6f6620766572696669636174696f6e206661696c6564",
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4029:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22a4a81d703f7af7719fa268b4c1089e2edd388877fe529a428cdd14d76ccf88",
                          "typeString": "literal_string \"Merkle proof verification failed\""
                        },
                        "value": "Merkle proof verification failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22a4a81d703f7af7719fa268b4c1089e2edd388877fe529a428cdd14d76ccf88",
                          "typeString": "literal_string \"Merkle proof verification failed\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5325,
                        5326
                      ],
                      "referencedDeclaration": 5326,
                      "src": "3954:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3954:115:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "batches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "4076:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                              "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                            }
                          },
                          "id": 242,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 241,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4084:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4076:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Batch_$33_storage",
                            "typeString": "struct BulkIssue.Batch storage ref"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "processedLeaves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "4076:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 245,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "srrHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4112:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4076:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4123:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4076:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "4076:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4133:36:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 249,
                          "name": "batches",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "4133:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                            "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                          }
                        },
                        "id": 251,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 250,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "4141:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4133:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Batch_$33_storage",
                          "typeString": "struct BulkIssue.Batch storage ref"
                        }
                      },
                      "id": 252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "processedCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "4133:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 255,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "4176:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 259,
                          "name": "isPrimaryIssuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "4224:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 260,
                          "name": "artistAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "4247:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 261,
                          "name": "metadataDigest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "4268:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 262,
                              "name": "batches",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4290:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                                "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                              }
                            },
                            "id": 264,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "merkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "4298:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4290:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Batch_$33_storage",
                              "typeString": "struct BulkIssue.Batch storage ref"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26,
                          "src": "4290:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 256,
                            "name": "_rootLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "4186:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_RootLogic_$4361_$",
                              "typeString": "function () view returns (contract RootLogic)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4186:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RootLogic_$4361",
                            "typeString": "contract RootLogic"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "createSRRFromBulk",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3573,
                        "src": "4186:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (bool,address,bytes32,address) external returns (uint256)"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4186:160:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4176:170:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:170:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "4376:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "srrHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "4388:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 269,
                      "name": "CreateSRRWithProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "4357:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4357:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "EmitStatement",
                  "src": "4352:44:0"
                }
              ]
            },
            "documentation": "@dev Creates SRR with merkle proof\n@param merkleProof bytes32 of merkle proof value\n@param merkleRoot bytes32 of merkle root value\n@param srrHash bytes32 of merkle tree leaf\n@param isPrimaryIssuer boolean whether the user is a primary issuer\n@param artistAddress address of the artist contract\n@param metadataDigest bytes32 of metadata hash\n@return uint256 tokenId",
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 211,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "3710:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 210,
                  "name": "batchExists",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 78,
                  "src": "3698:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3698:23:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 214,
                    "name": "merkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 200,
                    "src": "3749:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 215,
                    "name": "srrHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "3761:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 216,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 213,
                  "name": "srrNotAlreadyProcessed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 97,
                  "src": "3726:22:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$_t_bytes32_$",
                    "typeString": "modifier (bytes32,bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3726:43:0"
              }
            ],
            "name": "createSRRWithProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "merkleProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3524:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 196,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3524:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 197,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3524:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3558:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3558:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3582:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3582:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "name": "isPrimaryIssuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3603:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "name": "artistAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3629:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "metadataDigest",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3656:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3656:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3518:164:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "3783:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3782:17:0"
            },
            "scope": 410,
            "src": "3491:910:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "4932:139:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 288,
                      "name": "hashMatches",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "4938:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 289,
                        "name": "srrHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "4958:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 293,
                                "name": "isPrimaryIssuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "5011:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "artistAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "5028:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 295,
                                "name": "metadataDigest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "5043:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 291,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5309,
                                "src": "4994:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4994:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4994:64:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 290,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5316,
                          "src": "4975:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4975:91:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "4958:108:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4938:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "4938:128:0"
                }
              ]
            },
            "documentation": "@dev Verify the hash of the params when creating SRR\n@param srrHash bytes32 of hash value of all other params\n@param isPrimaryIssuer boolean whether the user is a primary issuer\n@param artistAddress address of the artist contract\n@param metadataDigest bytes32 of metadata hash\n@return whether the hash matches or not",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifySRRHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "srrHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4792:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "name": "isPrimaryIssuer",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4813:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "name": "artistAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4839:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4839:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "name": "metadataDigest",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4866:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4786:106:0"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "name": "hashMatches",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4914:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4914:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4913:18:0"
            },
            "scope": 410,
            "src": "4764:307:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "5243:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 307,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "5256:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 306,
                  "id": 308,
                  "nodeType": "Return",
                  "src": "5249:27:0"
                }
              ]
            },
            "documentation": "@dev Gets the endpoint address of NameRegistry\n@return NameRegistry proxy address",
            "id": 310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5210:2:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "5234:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5234:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5233:9:0"
            },
            "scope": 410,
            "src": "5179:102:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "5372:155:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 315,
                        "name": "batches",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "5378:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Batch_$33_storage_$",
                          "typeString": "mapping(bytes32 => struct BulkIssue.Batch storage ref)"
                        }
                      },
                      "id": 317,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "5386:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5378:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Batch_$33_storage",
                        "typeString": "struct BulkIssue.Batch storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5424:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5322,
                            "src": "5444:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5444:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5478:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 318,
                        "name": "Batch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5400:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Batch_$33_storage_ptr_$",
                          "typeString": "type(struct BulkIssue.Batch storage pointer)"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "prepared",
                        "issuer",
                        "processedCount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5400:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Batch_$33_memory",
                        "typeString": "struct BulkIssue.Batch memory"
                      }
                    },
                    "src": "5378:108:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Batch_$33_storage",
                      "typeString": "struct BulkIssue.Batch storage ref"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "5378:108:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 327,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "5511:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 326,
                      "name": "BatchPrepared",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "5497:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5497:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 329,
                  "nodeType": "EmitStatement",
                  "src": "5492:30:0"
                }
              ]
            },
            "documentation": "Private functions",
            "id": 331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareBatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "name": "merkleRoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 331,
                  "src": "5344:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5344:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5343:20:0"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5372:0:0"
            },
            "scope": 410,
            "src": "5321:206:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "5579:143:0",
              "statements": [
                {
                  "assignments": [
                    337
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 337,
                      "name": "proxy",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "5585:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5585:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 340,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5322,
                      "src": "5601:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5601:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5585:26:0"
                },
                {
                  "assignments": [
                    342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 342,
                      "name": "logic",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "5617:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                        "typeString": "contract LicensedUserLogic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 341,
                        "name": "LicensedUserLogic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1570,
                        "src": "5617:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                          "typeString": "contract LicensedUserLogic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 344,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "5661:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 343,
                      "name": "LicensedUserLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1570,
                      "src": "5643:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LicensedUserLogic_$1570_$",
                        "typeString": "type(contract LicensedUserLogic)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5643:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                      "typeString": "contract LicensedUserLogic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5617:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_UserType_$1174",
                      "typeString": "enum IdentityUserType.UserType"
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 347,
                          "name": "logic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "5680:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LicensedUserLogic_$1570",
                            "typeString": "contract LicensedUserLogic"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getUserType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1071,
                        "src": "5680:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_UserType_$1174_$",
                          "typeString": "function () view external returns (enum IdentityUserType.UserType)"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5680:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$1174",
                        "typeString": "enum IdentityUserType.UserType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 350,
                        "name": "UserType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1174,
                        "src": "5703:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_UserType_$1174_$",
                          "typeString": "type(enum IdentityUserType.UserType)"
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADMIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5703:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_UserType_$1174",
                        "typeString": "enum IdentityUserType.UserType"
                      }
                    },
                    "src": "5680:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 335,
                  "id": 353,
                  "nodeType": "Return",
                  "src": "5673:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isAdmin",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5548:2:0"
            },
            "returnParameters": {
              "id": 335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "5573:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5573:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5572:6:0"
            },
            "scope": 410,
            "src": "5531:191:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "5787:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "5813:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 360,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3164,
                      "src": "5800:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$3164_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5800:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$3164",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 359,
                  "id": 363,
                  "nodeType": "Return",
                  "src": "5793:41:0"
                }
              ]
            },
            "documentation": null,
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5748:2:0"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "5773:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$3164",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 357,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3164,
                    "src": "5773:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$3164",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5772:14:0"
            },
            "scope": 410,
            "src": "5726:113:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "5898:146:0",
              "statements": [
                {
                  "assignments": [
                    371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 371,
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5904:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 370,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5904:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 375,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3093,
                        "src": "5951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 372,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "5931:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$3164_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5931:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$3164",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3163,
                      "src": "5931:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5931:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5904:58:0"
                },
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "name": "rootLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5968:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RootLogic_$4361",
                        "typeString": "contract RootLogic"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 378,
                        "name": "RootLogic",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4361,
                        "src": "5968:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RootLogic_$4361",
                          "typeString": "contract RootLogic"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "rootLogicAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "6000:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 380,
                      "name": "RootLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4361,
                      "src": "5990:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_RootLogic_$4361_$",
                        "typeString": "type(contract RootLogic)"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5990:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RootLogic_$4361",
                      "typeString": "contract RootLogic"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5968:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 384,
                    "name": "rootLogic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 379,
                    "src": "6030:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RootLogic_$4361",
                      "typeString": "contract RootLogic"
                    }
                  },
                  "functionReturnParameters": 369,
                  "id": 385,
                  "nodeType": "Return",
                  "src": "6023:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5862:2:0"
            },
            "returnParameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "5887:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RootLogic_$4361",
                    "typeString": "contract RootLogic"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 367,
                    "name": "RootLogic",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4361,
                    "src": "5887:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RootLogic_$4361",
                      "typeString": "contract RootLogic"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5886:11:0"
            },
            "scope": 410,
            "src": "5843:201:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "6121:248:0",
              "statements": [
                {
                  "assignments": [
                    393
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 393,
                      "name": "licensedUserWalletFactoryAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6127:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 392,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6127:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 399,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "LICENSED_USER_WALLET_FACTORY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3108,
                        "src": "6197:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 394,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "6170:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$3164_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6170:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$3164",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3163,
                      "src": "6170:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6170:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6127:104:0"
                },
                {
                  "assignments": [
                    401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 401,
                      "name": "factory",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6237:33:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                        "typeString": "contract LicensedUserWalletFactory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 400,
                        "name": "LicensedUserWalletFactory",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1917,
                        "src": "6237:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                          "typeString": "contract LicensedUserWalletFactory"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 405,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "licensedUserWalletFactoryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 393,
                        "src": "6306:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 402,
                      "name": "LicensedUserWalletFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1917,
                      "src": "6273:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LicensedUserWalletFactory_$1917_$",
                        "typeString": "type(contract LicensedUserWalletFactory)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6273:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                      "typeString": "contract LicensedUserWalletFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6237:107:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "name": "factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 401,
                    "src": "6357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                      "typeString": "contract LicensedUserWalletFactory"
                    }
                  },
                  "functionReturnParameters": 391,
                  "id": 407,
                  "nodeType": "Return",
                  "src": "6350:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_userFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6069:2:0"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "6094:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                    "typeString": "contract LicensedUserWalletFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 389,
                    "name": "LicensedUserWalletFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1917,
                    "src": "6094:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LicensedUserWalletFactory_$1917",
                      "typeString": "contract LicensedUserWalletFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:27:0"
            },
            "scope": 410,
            "src": "6048:321:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 411,
        "src": "664:5707:0"
      }
    ],
    "src": "0:6372:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xe4dd69b1474d45a85a99c7e40eac6c4da1d71b0fba50511c992c03d08fe329d8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            }
          ],
          "name": "BatchPrepared",
          "type": "event"
        },
        "0xdfaa618c92ac2a063b19734f3cc41d29ff6d2f0cfa172f99f22c7e5660f3e4c7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "srrHash",
              "type": "bytes32"
            }
          ],
          "name": "CreateSRRWithProof",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDaC90492b233C01c33048C331AB39c7f7d5453F3",
      "transactionHash": "0x81a1603d7432276480ea95f968d3fdc181c96a3df4e2674f21d1052c03182fcc"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-03T06:33:50.299Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "createSRRWithProof(bytes32[],bytes32,bytes32,bool,address,bytes32)": {
        "details": "Creates SRR with merkle proof",
        "params": {
          "artistAddress": "address of the artist contract",
          "isPrimaryIssuer": "boolean whether the user is a primary issuer",
          "merkleProof": "bytes32 of merkle proof value",
          "merkleRoot": "bytes32 of merkle root value",
          "metadataDigest": "bytes32 of metadata hash",
          "srrHash": "bytes32 of merkle tree leaf"
        },
        "return": "uint256 tokenId"
      },
      "getNameRegistryAddress()": {
        "details": "Gets the endpoint address of NameRegistry",
        "return": "NameRegistry proxy address"
      },
      "getUserType(string)": {
        "details": "Gets user type",
        "params": {
          "_type": "string of the user type"
        },
        "return": "UserType"
      },
      "initialize(address)": {
        "details": "Initializes the BulkIssue contract"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "prepareBatch(bytes32)": {
        "details": "Reserves a batch request before excuting",
        "params": {
          "merkleRoot": "bytes32 of merkle root"
        }
      },
      "prepareBatchFromLicensedUser(bytes32,uint8,bytes32,bytes32)": {
        "details": "Reserves a batch request before excuting",
        "params": {
          "merkleRoot": "bytes32 of merkle root",
          "r": "bytes32 of sig.r",
          "s": "bytes32 of sig.s",
          "v": "uint8 of sig.v"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifySRRHash(bytes32,bool,address,bytes32)": {
        "details": "Verify the hash of the params when creating SRR",
        "params": {
          "artistAddress": "address of the artist contract",
          "isPrimaryIssuer": "boolean whether the user is a primary issuer",
          "metadataDigest": "bytes32 of metadata hash",
          "srrHash": "bytes32 of hash value of all other params"
        },
        "return": "whether the hash matches or not"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}