{
  "contractName": "StartrailRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMsgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferSRRFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "setNameRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootLogicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSRROwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getIdNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIdNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMsgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootLogicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSRROwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"setNameRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferSRRFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"getIdNonce()\":{\"details\":\"Gets the nonce from the storage\",\"returns\":{\"_0\":\"idNonce from storage\"}},\"getNameRegistryAddress()\":{\"details\":\"Gets the endpoint address of NameRegistry\",\"returns\":{\"_0\":\"NameRegistry proxy address\"}},\"getRootLogicAddress()\":{\"details\":\"Gets the endpoint address of the RootLogic\",\"returns\":{\"_0\":\"RootLogic proxy address\"}},\"getSRROwner(uint256)\":{\"details\":\"Gets the owner address of the SRR\",\"params\":{\"tokenId\":\"uint256 of the SRR ID\"},\"returns\":{\"_0\":\"owner address\"}},\"initialize(string,string,address)\":{\"details\":\"Initializes the StartrailRegistry\",\"params\":{\"name\":\"string of the name\",\"nameRegistry\":\"address of the NameRegistry contract\",\"symbol\":\"string of the symbol\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"mint(address)\":{\"details\":\"Creates a new StartrailRegistryRecordID\",\"params\":{\"sender\":\"address of the sender\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"setNameRegistry(address)\":{\"details\":\"Sets the address of the NameRegistry contract\",\"params\":{\"nameRegistry\":\"address of the NameRegistry contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |=== Requirements: - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferSRRFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given SRR ID to another address.\",\"params\":{\"from\":\"address of the current owner\",\"to\":\"address to receive the ownership\",\"tokenId\":\"uint256 ID of the SRR to be transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/root/rinkeby/startrail/app/token/contracts/StartrailRegistry.sol\":\"StartrailRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/rinkeby/startrail/app/common/IRootLogic.sol\":{\"keccak256\":\"0x03a5ea72ab3345ef72d6afcdc625f38f9a75917cfdc0c1519863b80550891b9c\",\"urls\":[\"bzz-raw://2cecaa7596ac28de297ab83281460aef24d7900b8d0a33ad9e6b2ed671793944\",\"dweb:/ipfs/QmaPn1pzKwhYh8F1xxWagkH5myPekCp4mXAxaL3gN7mtw4\"]},\"/root/rinkeby/startrail/app/common/IStartrailRegistry.sol\":{\"keccak256\":\"0x610ac64dd93305b4b331d14f2fbd0e47777a65a8f61268bfce43aa3c1547b1f7\",\"urls\":[\"bzz-raw://e68e4b11202b6c6cd39278c6002d183acc61ef5f44aeaafe2eb163a246b4ff9c\",\"dweb:/ipfs/Qmf6jEktqgEz5xrm1qJso9Q7ucHxjQwb3inzeqVkDMactC\"]},\"/root/rinkeby/startrail/app/common/IStartrailValidator.sol\":{\"keccak256\":\"0xbb0549391f14b502243ba17136ab8fec3cddb96f967beb2f26e9bd4cf3ef1c19\",\"urls\":[\"bzz-raw://910d776ed901f44f7973001d84e30ff6f0eb0df289f3f68f481774d28b39336d\",\"dweb:/ipfs/QmdHATXy8V5fJC4M2oSojLsqdauDJkrGhNh1xFZG7kfsLm\"]},\"/root/rinkeby/startrail/app/lib/contracts/IDGenerator.sol\":{\"keccak256\":\"0xec92d387ada7bb34e0bf804961d2b5df52cbd25c3a53182cc5345b89b25333ee\",\"urls\":[\"bzz-raw://7829677a43aa2e34a6eb3243d38d4c5bfe7b343e9d7920eb0bc4a598c5cbb735\",\"dweb:/ipfs/QmZRREFQA5y9ReHM2b5ZkpE2dXS7oYWZ7m6kpC2R1VB4Wk\"]},\"/root/rinkeby/startrail/app/lib/contracts/Signature.sol\":{\"keccak256\":\"0xadccb0f6488359996554a1c5ea36b6323b9b72891dc3466751ad31e505d3a169\",\"urls\":[\"bzz-raw://f0462fab2c3ef530ad2f05b00d699800bff3f1f71c2d6e6421e21f9d865db1f1\",\"dweb:/ipfs/Qmd4dBNXNdLd2XcrEYDB2RvWC57R1RbyXK7PWvp3Vo5k4r\"]},\"/root/rinkeby/startrail/app/name/contracts/Contracts.sol\":{\"keccak256\":\"0xe33f00e176c568a8e199b5cf2d2822713eb5bcb4676851ea5e80b680ae63b223\",\"urls\":[\"bzz-raw://bfeb96cb8bc0ace2f95b2f23a8171ed633394725f218212dccdaecdd3383c88b\",\"dweb:/ipfs/QmXXab8NjxMTQ39DrmUVcV4Smc9vW9MvbqHRsexHsDJDU9\"]},\"/root/rinkeby/startrail/app/name/contracts/NameRegistry.sol\":{\"keccak256\":\"0xa564d5bf30b113b5b6fb69c6c83c9589040e19eecfa9e18fedae71b9a42c6e4d\",\"urls\":[\"bzz-raw://bb5aa295cd5cc8ab352f8f9eea4a37a1fa914846a41efd0970f60a0987b70d45\",\"dweb:/ipfs/QmT1yfAUgt1uRoAYiEKAtQpDcFMPHkDwyivqYDeXbbHkPH\"]},\"/root/rinkeby/startrail/app/token/contracts/StartrailRegistry.sol\":{\"keccak256\":\"0x40235bd4cee62336999949f2e4a2262e433fb1b024895d9d2567447f6367e429\",\"urls\":[\"bzz-raw://e529d941c11c031c649518df7b66255244b2a897260e6ac2c43088d745b2c7d7\",\"dweb:/ipfs/QmcVLJjj36mWwq5hYmVb6FMb3gGn3LnvSEj7PTHDps1ju6\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd1778eb2a00f482020d0298305421371eb6487ca0d7d05d9e2b91c353e53f47f\",\"urls\":[\"bzz-raw://1d8c81a9961cf1c95a3bca7ae896c8446f8627bfff1f0caf32254d75d3e03c07\",\"dweb:/ipfs/QmeRL8Se6J1rTnwtZpgn3LcA1jQ7gr4td7YmgdaWZH5oxD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5b08ef130698e8270f01c481f687a470e436080bafdbfa33abbf6467c1adb619\",\"urls\":[\"bzz-raw://1f2c7f80b2f7038c3a90808883871a1d424c4ea725fc4e61aaf9cbcb2a7656fb\",\"dweb:/ipfs/QmZZ17KkLWGz5BsjZwakC6mG2Y4Lnn5pGxjzPvYceoYVeg\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x734b5bedb78074a59bca6aff9e5a1801c9c7e9c5314daf32e14857161fb36932\",\"urls\":[\"bzz-raw://4574e71185f6693eb5cdf7a5126fba97caf0ec0366b08290dd361af44b3414d3\",\"dweb:/ipfs/QmTPBh1R3EU973H7h6D1kQ1XBA1oX2QdSHZACyytWUYKsn\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa0237f846362c88efa0b2a5815e5cf95cf58c1f9acf654fa6e57f62090fdc92d\",\"urls\":[\"bzz-raw://ed15922f47d283422ed74b3ed7ff4c8df4831d7611953b5c970f460bf2215e3c\",\"dweb:/ipfs/QmaNLi68QwwZhENcbM6D5GP6Yp3xC8fQY7gEMXvWES92uK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfd5cf8319cb84ca04ea407d6fba686d53ad7f5d2bf476f41678f5a751d12a7ea\",\"urls\":[\"bzz-raw://45b75b553c4a9053429609b1c3db481f1728ca00448f01acc4065249bbf87adc\",\"dweb:/ipfs/QmRZH6QM32mJn1GZCAPXUQtBz65H4kk6DsGQbGNo4ZNPy9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd1d78b1c8534fbcf8fdc8fbfec9133df142ef8cae9ae820929dfe6d80d2c790a\",\"urls\":[\"bzz-raw://193a827fbe83fa83c4cabb172dc438dd45c50253858a1f2bf56e8f9a2d548386\",\"dweb:/ipfs/QmbWBHwHv7CyHSZY6jxnaDiHWGEEyVb8LeGdRpWXUjaiBr\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40d4c72c7f8dfdfb9fd048de5d3ece0020dfcd057b29f0630fd703e7fbe7301\",\"dweb:/ipfs/QmSw7Q9JVVbVDWwVbaJjHhkPmTm8GF3nwVTZUfnmPqTdNm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612671806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636352211e1161010457806395d89b41116100a2578063ddb8e35011610071578063ddb8e3501461038b578063e36a35091461039e578063e985e9c5146103a6578063f2fde38b146103b9576101cf565b806395d89b411461034a578063a22cb46514610352578063b88d4fde14610365578063c87b56dd14610378576101cf565b806370a08231116100de57806370a082311461031f578063715018a6146103325780637a6ce2e11461033a5780638da5cb5b14610342576101cf565b80636352211e146102f15780636a627842146103045780636c0360eb14610317576101cf565b806318160ddd1161017157806342842e0e1161014b57806342842e0e146102b05780634f6ccce7146102c35780635f915423146102d657806362b9bdc2146102e9576101cf565b806318160ddd1461027557806323b872dd1461028a5780632f745c591461029d576101cf565b8063081812fc116101ad578063081812fc14610227578063095ea7b3146102475780630bdd4f501461025a578063109a037a14610262576101cf565b806301ffc9a7146101d457806306fdde03146101fd578063077f224a14610212575b600080fd5b6101e76101e2366004611ddd565b6103cc565b6040516101f49190611fd4565b60405180910390f35b6102056103ef565b6040516101f49190611fdf565b610225610220366004611e15565b610486565b005b61023a610235366004611e8a565b610547565b6040516101f49190611f83565b610225610255366004611db2565b61058a565b61023a610622565b610225610270366004611cd7565b610631565b61027d6106d6565b6040516101f491906125a4565b610225610298366004611cd7565b6106e2565b61027d6102ab366004611db2565b61071a565b6102256102be366004611cd7565b61074b565b61027d6102d1366004611e8a565b610766565b61023a6102e4366004611e8a565b610782565b61023a61078d565b61023a6102ff366004611e8a565b61079c565b61027d610312366004611c67565b6107ca565b6102056108b1565b61027d61032d366004611c67565b610912565b61022561095b565b61023a6109da565b61023a6109e4565b6102056109f3565b610225610360366004611d81565b610a54565b610225610373366004611d17565b610b22565b610205610386366004611e8a565b610b5b565b610225610399366004611c67565b610ca5565b61027d610cfc565b6101e76103b4366004611c9f565b610d02565b6102256103c7366004611c67565b610d30565b6001600160e01b0319811660009081526097602052604090205460ff165b919050565b60ce8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b505050505090505b90565b600054610100900460ff168061049f575061049f610de7565b806104ad575060005460ff16155b6104d25760405162461bcd60e51b81526004016104c9906123a0565b60405180910390fd5b600054610100900460ff161580156104fd576000805460ff1961ff0019909116610100171660011790555b60fc80546001600160a01b0319166001600160a01b038416179055600160fb556105278484610ded565b61052f610e8b565b8015610541576000805461ff00191690555b50505050565b600061055282610f1e565b61056e5760405162461bcd60e51b81526004016104c99061231f565b50600090815260cc60205260409020546001600160a01b031690565b60006105958261079c565b9050806001600160a01b0316836001600160a01b031614156105c95760405162461bcd60e51b81526004016104c990612486565b806001600160a01b03166105db610f31565b6001600160a01b031614806105f757506105f7816103b4610f31565b6106135760405162461bcd60e51b81526004016104c990612201565b61061d8383610f35565b505050565b600061062c610fa3565b905090565b610639610fa3565b336001600160a01b038216146106615760405162461bcd60e51b81526004016104c99061255c565b61066a82610f1e565b6106865760405162461bcd60e51b81526004016104c9906121b5565b60006106918361079c565b9050806001600160a01b0316856001600160a01b0316146106c45760405162461bcd60e51b81526004016104c990612518565b6106cf858585611030565b5050505050565b600061062c60ca611150565b6106f36106ed610f31565b8261115b565b61070f5760405162461bcd60e51b81526004016104c9906124c7565b61061d838383611030565b6001600160a01b038216600090815260c960205260408120610742908363ffffffff6111e016565b90505b92915050565b61061d83838360405180602001604052806000815250610b22565b60008061077a60ca8463ffffffff6111ec16565b509392505050565b60006107458261079c565b60fc546001600160a01b031690565b6000610745826040518060600160405280602981526020016126136029913960ca919063ffffffff61120816565b60006107d4610fa3565b336001600160a01b038216146107fc5760405162461bcd60e51b81526004016104c99061255c565b60fb8054600101905560005b60fb54604051634a7dd52360e01b815273__IDGenerator___________________________91634a7dd5239161084191906004016125a4565b60206040518083038186803b15801561085957600080fd5b505af415801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108919190611ea2565b905061089c81610f1e565b610808576108aa8482611215565b9392505050565b60d18054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047b5780601f106104505761010080835404028352916020019161047b565b60006001600160a01b03821661093a5760405162461bcd60e51b81526004016104c99061225e565b6001600160a01b038216600090815260c96020526040902061074590611150565b610963610f31565b6065546001600160a01b039081169116146109905760405162461bcd60e51b81526004016104c99061236b565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b600061062c610f31565b6065546001600160a01b031690565b60cf8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047b5780601f106104505761010080835404028352916020019161047b565b610a5c610f31565b6001600160a01b0316826001600160a01b03161415610a8d5760405162461bcd60e51b81526004016104c99061217e565b8060cd6000610a9a610f31565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ade610f31565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b169190611fd4565b60405180910390a35050565b610b33610b2d610f31565b8361115b565b610b4f5760405162461bcd60e51b81526004016104c9906124c7565b610541848484846112e5565b6060610b6682610f1e565b610b825760405162461bcd60e51b81526004016104c990612437565b600082815260d0602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b505060d15493945050505060026000196101006001841615020190911604610c405790506103ea565b805115610c725760d181604051602001610c5b929190611f02565b6040516020818303038152906040529150506103ea565b60d1610c7d84611318565b604051602001610c8e929190611f02565b604051602081830303815290604052915050919050565b610cad610f31565b6065546001600160a01b03908116911614610cda5760405162461bcd60e51b81526004016104c99061236b565b60fc80546001600160a01b0319166001600160a01b0392909216919091179055565b60fb5490565b6001600160a01b03918216600090815260cd6020908152604080832093909416825291909152205460ff1690565b610d38610f31565b6065546001600160a01b03908116911614610d655760405162461bcd60e51b81526004016104c99061236b565b6001600160a01b038116610d8b5760405162461bcd60e51b81526004016104c990612086565b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b303b1590565b600054610100900460ff1680610e065750610e06610de7565b80610e14575060005460ff16155b610e305760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015610e5b576000805460ff1961ff0019909116610100171660011790555b610e636113f3565b610e6b611474565b610e7583836114f2565b801561061d576000805461ff0019169055505050565b600054610100900460ff1680610ea45750610ea4610de7565b80610eb2575060005460ff16155b610ece5760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015610ef9576000805460ff1961ff0019909116610100171660011790555b610f016113f3565b610f096115b8565b8015610f1b576000805461ff00191690555b50565b600061074560ca8363ffffffff61169216565b3390565b600081815260cc6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f6a8261079c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610fae61078d565b6001600160a01b031663f72d0b3b60016040518263ffffffff1660e01b8152600401610fda91906125ad565b60206040518083038186803b158015610ff257600080fd5b505afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a9190611c83565b91505090565b826001600160a01b03166110438261079c565b6001600160a01b0316146110695760405162461bcd60e51b81526004016104c9906123ee565b6001600160a01b03821661108f5760405162461bcd60e51b81526004016104c99061213a565b61109a83838361061d565b6110a5600082610f35565b6001600160a01b038316600090815260c9602052604090206110cd908263ffffffff61169e16565b506001600160a01b038216600090815260c9602052604090206110f6908263ffffffff6116aa16565b5061110960ca828463ffffffff6116b616565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610745826116cc565b600061116682610f1e565b6111825760405162461bcd60e51b81526004016104c9906121b5565b600061118d8361079c565b9050806001600160a01b0316846001600160a01b031614806111c85750836001600160a01b03166111bd84610547565b6001600160a01b0316145b806111d857506111d88185610d02565b949350505050565b600061074283836116d0565b60008080806111fb8686611715565b9097909650945050505050565b60006111d8848484611771565b6001600160a01b03821661123b5760405162461bcd60e51b81526004016104c9906122ea565b61124481610f1e565b156112615760405162461bcd60e51b81526004016104c990612103565b61126d6000838361061d565b6001600160a01b038216600090815260c960205260409020611295908263ffffffff6116aa16565b506112a860ca828463ffffffff6116b616565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6112f0848484611030565b6112fc848484846117d0565b6105415760405162461bcd60e51b81526004016104c990612034565b60608161133d57506040805180820190915260018152600360fc1b60208201526103ea565b8160005b811561135557600101600a82049150611341565b60608167ffffffffffffffff8111801561136e57600080fd5b506040519080825280601f01601f191660200182016040528015611399576020820181803683370190505b50859350905060001982015b83156113ea57600a840660300160f81b828280600190039350815181106113c857fe5b60200101906001600160f81b031916908160001a905350600a840493506113a5565b50949350505050565b600054610100900460ff168061140c575061140c610de7565b8061141a575060005460ff16155b6114365760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015610f09576000805460ff1961ff0019909116610100171660011790558015610f1b576000805461ff001916905550565b600054610100900460ff168061148d575061148d610de7565b8061149b575060005460ff16155b6114b75760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff161580156114e2576000805460ff1961ff0019909116610100171660011790555b610f096301ffc9a760e01b61190a565b600054610100900460ff168061150b575061150b610de7565b80611519575060005460ff16155b6115355760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015611560576000805460ff1961ff0019909116610100171660011790555b82516115739060ce906020860190611b51565b5081516115879060cf906020850190611b51565b506115986380ac58cd60e01b61190a565b6115a8635b5e139f60e01b61190a565b610e7563780e9d6360e01b61190a565b600054610100900460ff16806115d157506115d1610de7565b806115df575060005460ff16155b6115fb5760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015611626576000805460ff1961ff0019909116610100171660011790555b6000611630610f31565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610f1b576000805461ff001916905550565b60006107428383611959565b60006107428383611971565b60006107428383611a37565b60006111d884846001600160a01b038516611a81565b5490565b815460009082106116f35760405162461bcd60e51b81526004016104c990611ff2565b82600001828154811061170257fe5b9060005260206000200154905092915050565b81546000908190831061173a5760405162461bcd60e51b81526004016104c9906122a8565b600084600001848154811061174b57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816117a15760405162461bcd60e51b81526004016104c99190611fdf565b508460000160018203815481106117b457fe5b9060005260206000209060020201600101549150509392505050565b60006117e4846001600160a01b0316611b18565b6117f0575060016111d8565b600060606001600160a01b038616630a85bd0160e11b61180e610f31565b8988886040516024016118249493929190611f97565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516118629190611ee6565b6000604051808303816000865af19150503d806000811461189f576040519150601f19603f3d011682016040523d82523d6000602084013e6118a4565b606091505b5091509150816118d6578051156118be5780518082602001fd5b60405162461bcd60e51b81526004016104c990612034565b6000818060200190518101906118ec9190611df9565b6001600160e01b031916630a85bd0160e11b1493506111d892505050565b6001600160e01b031980821614156119345760405162461bcd60e51b81526004016104c9906120cc565b6001600160e01b0319166000908152609760205260409020805460ff19166001179055565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611a2d57835460001980830191908101906000908790839081106119a457fe5b90600052602060002001549050808760000184815481106119c157fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806119f157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610745565b6000915050610745565b6000611a438383611959565b611a7957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610745565b506000610745565b600082815260018401602052604081205480611ae65750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556108aa565b82856000016001830381548110611af957fe5b90600052602060002090600202016001018190555060009150506108aa565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906111d8575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b9257805160ff1916838001178555611bbf565b82800160010185558215611bbf579182015b82811115611bbf578251825591602001919060010190611ba4565b50611bcb929150611bcf565b5090565b61048391905b80821115611bcb5760008155600101611bd5565b600082601f830112611bf9578081fd5b813567ffffffffffffffff80821115611c10578283fd5b604051601f8301601f191681016020018281118282101715611c30578485fd5b604052828152925082848301602001861015611c4b57600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215611c78578081fd5b81356108aa816125e7565b600060208284031215611c94578081fd5b81516108aa816125e7565b60008060408385031215611cb1578081fd5b8235611cbc816125e7565b91506020830135611ccc816125e7565b809150509250929050565b600080600060608486031215611ceb578081fd5b8335611cf6816125e7565b92506020840135611d06816125e7565b929592945050506040919091013590565b60008060008060808587031215611d2c578081fd5b8435611d37816125e7565b93506020850135611d47816125e7565b925060408501359150606085013567ffffffffffffffff811115611d69578182fd5b611d7587828801611be9565b91505092959194509250565b60008060408385031215611d93578182fd5b8235611d9e816125e7565b915060208301358015158114611ccc578182fd5b60008060408385031215611dc4578182fd5b8235611dcf816125e7565b946020939093013593505050565b600060208284031215611dee578081fd5b81356108aa816125fc565b600060208284031215611e0a578081fd5b81516108aa816125fc565b600080600060608486031215611e29578283fd5b833567ffffffffffffffff80821115611e40578485fd5b611e4c87838801611be9565b94506020860135915080821115611e61578384fd5b50611e6e86828701611be9565b9250506040840135611e7f816125e7565b809150509250925092565b600060208284031215611e9b578081fd5b5035919050565b600060208284031215611eb3578081fd5b5051919050565b60008151808452611ed28160208601602086016125bb565b601f01601f19169290920160200192915050565b60008251611ef88184602087016125bb565b9190910192915050565b6000808454600180821660008114611f215760018114611f3857611f67565b60ff198316865260028304607f1686019350611f67565b600283048886526020808720875b83811015611f5f5781548a820152908501908201611f46565b505050860193505b5050508351611f7a8183602088016125bb565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fca90830184611eba565b9695505050505050565b901515815260200190565b6000602082526107426020830184611eba565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604082015260600190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526022908201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526024908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152633bb732b960e11b606082015260800190565b60208082526028908201527f5468652073656e646572206973206e6f742074686520526f6f744c6f6769632060408201526718dbdb9d1c9858dd60c21b606082015260800190565b90815260200190565b60ff91909116815260200190565b60005b838110156125d65781810151838201526020016125be565b838111156105415750506000910152565b6001600160a01b0381168114610f1b57600080fd5b6001600160e01b031981168114610f1b57600080fdfe4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220b383d4832fcbed1ec39a0de98fa96442d2a066e8b5a20935886687f649f0d1a264736f6c634300060b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636352211e1161010457806395d89b41116100a2578063ddb8e35011610071578063ddb8e3501461038b578063e36a35091461039e578063e985e9c5146103a6578063f2fde38b146103b9576101cf565b806395d89b411461034a578063a22cb46514610352578063b88d4fde14610365578063c87b56dd14610378576101cf565b806370a08231116100de57806370a082311461031f578063715018a6146103325780637a6ce2e11461033a5780638da5cb5b14610342576101cf565b80636352211e146102f15780636a627842146103045780636c0360eb14610317576101cf565b806318160ddd1161017157806342842e0e1161014b57806342842e0e146102b05780634f6ccce7146102c35780635f915423146102d657806362b9bdc2146102e9576101cf565b806318160ddd1461027557806323b872dd1461028a5780632f745c591461029d576101cf565b8063081812fc116101ad578063081812fc14610227578063095ea7b3146102475780630bdd4f501461025a578063109a037a14610262576101cf565b806301ffc9a7146101d457806306fdde03146101fd578063077f224a14610212575b600080fd5b6101e76101e2366004611ddd565b6103cc565b6040516101f49190611fd4565b60405180910390f35b6102056103ef565b6040516101f49190611fdf565b610225610220366004611e15565b610486565b005b61023a610235366004611e8a565b610547565b6040516101f49190611f83565b610225610255366004611db2565b61058a565b61023a610622565b610225610270366004611cd7565b610631565b61027d6106d6565b6040516101f491906125a4565b610225610298366004611cd7565b6106e2565b61027d6102ab366004611db2565b61071a565b6102256102be366004611cd7565b61074b565b61027d6102d1366004611e8a565b610766565b61023a6102e4366004611e8a565b610782565b61023a61078d565b61023a6102ff366004611e8a565b61079c565b61027d610312366004611c67565b6107ca565b6102056108b1565b61027d61032d366004611c67565b610912565b61022561095b565b61023a6109da565b61023a6109e4565b6102056109f3565b610225610360366004611d81565b610a54565b610225610373366004611d17565b610b22565b610205610386366004611e8a565b610b5b565b610225610399366004611c67565b610ca5565b61027d610cfc565b6101e76103b4366004611c9f565b610d02565b6102256103c7366004611c67565b610d30565b6001600160e01b0319811660009081526097602052604090205460ff165b919050565b60ce8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b505050505090505b90565b600054610100900460ff168061049f575061049f610de7565b806104ad575060005460ff16155b6104d25760405162461bcd60e51b81526004016104c9906123a0565b60405180910390fd5b600054610100900460ff161580156104fd576000805460ff1961ff0019909116610100171660011790555b60fc80546001600160a01b0319166001600160a01b038416179055600160fb556105278484610ded565b61052f610e8b565b8015610541576000805461ff00191690555b50505050565b600061055282610f1e565b61056e5760405162461bcd60e51b81526004016104c99061231f565b50600090815260cc60205260409020546001600160a01b031690565b60006105958261079c565b9050806001600160a01b0316836001600160a01b031614156105c95760405162461bcd60e51b81526004016104c990612486565b806001600160a01b03166105db610f31565b6001600160a01b031614806105f757506105f7816103b4610f31565b6106135760405162461bcd60e51b81526004016104c990612201565b61061d8383610f35565b505050565b600061062c610fa3565b905090565b610639610fa3565b336001600160a01b038216146106615760405162461bcd60e51b81526004016104c99061255c565b61066a82610f1e565b6106865760405162461bcd60e51b81526004016104c9906121b5565b60006106918361079c565b9050806001600160a01b0316856001600160a01b0316146106c45760405162461bcd60e51b81526004016104c990612518565b6106cf858585611030565b5050505050565b600061062c60ca611150565b6106f36106ed610f31565b8261115b565b61070f5760405162461bcd60e51b81526004016104c9906124c7565b61061d838383611030565b6001600160a01b038216600090815260c960205260408120610742908363ffffffff6111e016565b90505b92915050565b61061d83838360405180602001604052806000815250610b22565b60008061077a60ca8463ffffffff6111ec16565b509392505050565b60006107458261079c565b60fc546001600160a01b031690565b6000610745826040518060600160405280602981526020016126136029913960ca919063ffffffff61120816565b60006107d4610fa3565b336001600160a01b038216146107fc5760405162461bcd60e51b81526004016104c99061255c565b60fb8054600101905560005b60fb54604051634a7dd52360e01b815273__IDGenerator___________________________91634a7dd5239161084191906004016125a4565b60206040518083038186803b15801561085957600080fd5b505af415801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108919190611ea2565b905061089c81610f1e565b610808576108aa8482611215565b9392505050565b60d18054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047b5780601f106104505761010080835404028352916020019161047b565b60006001600160a01b03821661093a5760405162461bcd60e51b81526004016104c99061225e565b6001600160a01b038216600090815260c96020526040902061074590611150565b610963610f31565b6065546001600160a01b039081169116146109905760405162461bcd60e51b81526004016104c99061236b565b6065546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3606580546001600160a01b0319169055565b600061062c610f31565b6065546001600160a01b031690565b60cf8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561047b5780601f106104505761010080835404028352916020019161047b565b610a5c610f31565b6001600160a01b0316826001600160a01b03161415610a8d5760405162461bcd60e51b81526004016104c99061217e565b8060cd6000610a9a610f31565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ade610f31565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b169190611fd4565b60405180910390a35050565b610b33610b2d610f31565b8361115b565b610b4f5760405162461bcd60e51b81526004016104c9906124c7565b610541848484846112e5565b6060610b6682610f1e565b610b825760405162461bcd60e51b81526004016104c990612437565b600082815260d0602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b505060d15493945050505060026000196101006001841615020190911604610c405790506103ea565b805115610c725760d181604051602001610c5b929190611f02565b6040516020818303038152906040529150506103ea565b60d1610c7d84611318565b604051602001610c8e929190611f02565b604051602081830303815290604052915050919050565b610cad610f31565b6065546001600160a01b03908116911614610cda5760405162461bcd60e51b81526004016104c99061236b565b60fc80546001600160a01b0319166001600160a01b0392909216919091179055565b60fb5490565b6001600160a01b03918216600090815260cd6020908152604080832093909416825291909152205460ff1690565b610d38610f31565b6065546001600160a01b03908116911614610d655760405162461bcd60e51b81526004016104c99061236b565b6001600160a01b038116610d8b5760405162461bcd60e51b81526004016104c990612086565b6065546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b303b1590565b600054610100900460ff1680610e065750610e06610de7565b80610e14575060005460ff16155b610e305760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015610e5b576000805460ff1961ff0019909116610100171660011790555b610e636113f3565b610e6b611474565b610e7583836114f2565b801561061d576000805461ff0019169055505050565b600054610100900460ff1680610ea45750610ea4610de7565b80610eb2575060005460ff16155b610ece5760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015610ef9576000805460ff1961ff0019909116610100171660011790555b610f016113f3565b610f096115b8565b8015610f1b576000805461ff00191690555b50565b600061074560ca8363ffffffff61169216565b3390565b600081815260cc6020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f6a8261079c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610fae61078d565b6001600160a01b031663f72d0b3b60016040518263ffffffff1660e01b8152600401610fda91906125ad565b60206040518083038186803b158015610ff257600080fd5b505afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a9190611c83565b91505090565b826001600160a01b03166110438261079c565b6001600160a01b0316146110695760405162461bcd60e51b81526004016104c9906123ee565b6001600160a01b03821661108f5760405162461bcd60e51b81526004016104c99061213a565b61109a83838361061d565b6110a5600082610f35565b6001600160a01b038316600090815260c9602052604090206110cd908263ffffffff61169e16565b506001600160a01b038216600090815260c9602052604090206110f6908263ffffffff6116aa16565b5061110960ca828463ffffffff6116b616565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000610745826116cc565b600061116682610f1e565b6111825760405162461bcd60e51b81526004016104c9906121b5565b600061118d8361079c565b9050806001600160a01b0316846001600160a01b031614806111c85750836001600160a01b03166111bd84610547565b6001600160a01b0316145b806111d857506111d88185610d02565b949350505050565b600061074283836116d0565b60008080806111fb8686611715565b9097909650945050505050565b60006111d8848484611771565b6001600160a01b03821661123b5760405162461bcd60e51b81526004016104c9906122ea565b61124481610f1e565b156112615760405162461bcd60e51b81526004016104c990612103565b61126d6000838361061d565b6001600160a01b038216600090815260c960205260409020611295908263ffffffff6116aa16565b506112a860ca828463ffffffff6116b616565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6112f0848484611030565b6112fc848484846117d0565b6105415760405162461bcd60e51b81526004016104c990612034565b60608161133d57506040805180820190915260018152600360fc1b60208201526103ea565b8160005b811561135557600101600a82049150611341565b60608167ffffffffffffffff8111801561136e57600080fd5b506040519080825280601f01601f191660200182016040528015611399576020820181803683370190505b50859350905060001982015b83156113ea57600a840660300160f81b828280600190039350815181106113c857fe5b60200101906001600160f81b031916908160001a905350600a840493506113a5565b50949350505050565b600054610100900460ff168061140c575061140c610de7565b8061141a575060005460ff16155b6114365760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015610f09576000805460ff1961ff0019909116610100171660011790558015610f1b576000805461ff001916905550565b600054610100900460ff168061148d575061148d610de7565b8061149b575060005460ff16155b6114b75760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff161580156114e2576000805460ff1961ff0019909116610100171660011790555b610f096301ffc9a760e01b61190a565b600054610100900460ff168061150b575061150b610de7565b80611519575060005460ff16155b6115355760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015611560576000805460ff1961ff0019909116610100171660011790555b82516115739060ce906020860190611b51565b5081516115879060cf906020850190611b51565b506115986380ac58cd60e01b61190a565b6115a8635b5e139f60e01b61190a565b610e7563780e9d6360e01b61190a565b600054610100900460ff16806115d157506115d1610de7565b806115df575060005460ff16155b6115fb5760405162461bcd60e51b81526004016104c9906123a0565b600054610100900460ff16158015611626576000805460ff1961ff0019909116610100171660011790555b6000611630610f31565b606580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610f1b576000805461ff001916905550565b60006107428383611959565b60006107428383611971565b60006107428383611a37565b60006111d884846001600160a01b038516611a81565b5490565b815460009082106116f35760405162461bcd60e51b81526004016104c990611ff2565b82600001828154811061170257fe5b9060005260206000200154905092915050565b81546000908190831061173a5760405162461bcd60e51b81526004016104c9906122a8565b600084600001848154811061174b57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816117a15760405162461bcd60e51b81526004016104c99190611fdf565b508460000160018203815481106117b457fe5b9060005260206000209060020201600101549150509392505050565b60006117e4846001600160a01b0316611b18565b6117f0575060016111d8565b600060606001600160a01b038616630a85bd0160e11b61180e610f31565b8988886040516024016118249493929190611f97565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516118629190611ee6565b6000604051808303816000865af19150503d806000811461189f576040519150601f19603f3d011682016040523d82523d6000602084013e6118a4565b606091505b5091509150816118d6578051156118be5780518082602001fd5b60405162461bcd60e51b81526004016104c990612034565b6000818060200190518101906118ec9190611df9565b6001600160e01b031916630a85bd0160e11b1493506111d892505050565b6001600160e01b031980821614156119345760405162461bcd60e51b81526004016104c9906120cc565b6001600160e01b0319166000908152609760205260409020805460ff19166001179055565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611a2d57835460001980830191908101906000908790839081106119a457fe5b90600052602060002001549050808760000184815481106119c157fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806119f157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610745565b6000915050610745565b6000611a438383611959565b611a7957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610745565b506000610745565b600082815260018401602052604081205480611ae65750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556108aa565b82856000016001830381548110611af957fe5b90600052602060002090600202016001018190555060009150506108aa565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906111d8575050151592915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b9257805160ff1916838001178555611bbf565b82800160010185558215611bbf579182015b82811115611bbf578251825591602001919060010190611ba4565b50611bcb929150611bcf565b5090565b61048391905b80821115611bcb5760008155600101611bd5565b600082601f830112611bf9578081fd5b813567ffffffffffffffff80821115611c10578283fd5b604051601f8301601f191681016020018281118282101715611c30578485fd5b604052828152925082848301602001861015611c4b57600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215611c78578081fd5b81356108aa816125e7565b600060208284031215611c94578081fd5b81516108aa816125e7565b60008060408385031215611cb1578081fd5b8235611cbc816125e7565b91506020830135611ccc816125e7565b809150509250929050565b600080600060608486031215611ceb578081fd5b8335611cf6816125e7565b92506020840135611d06816125e7565b929592945050506040919091013590565b60008060008060808587031215611d2c578081fd5b8435611d37816125e7565b93506020850135611d47816125e7565b925060408501359150606085013567ffffffffffffffff811115611d69578182fd5b611d7587828801611be9565b91505092959194509250565b60008060408385031215611d93578182fd5b8235611d9e816125e7565b915060208301358015158114611ccc578182fd5b60008060408385031215611dc4578182fd5b8235611dcf816125e7565b946020939093013593505050565b600060208284031215611dee578081fd5b81356108aa816125fc565b600060208284031215611e0a578081fd5b81516108aa816125fc565b600080600060608486031215611e29578283fd5b833567ffffffffffffffff80821115611e40578485fd5b611e4c87838801611be9565b94506020860135915080821115611e61578384fd5b50611e6e86828701611be9565b9250506040840135611e7f816125e7565b809150509250925092565b600060208284031215611e9b578081fd5b5035919050565b600060208284031215611eb3578081fd5b5051919050565b60008151808452611ed28160208601602086016125bb565b601f01601f19169290920160200192915050565b60008251611ef88184602087016125bb565b9190910192915050565b6000808454600180821660008114611f215760018114611f3857611f67565b60ff198316865260028304607f1686019350611f67565b600283048886526020808720875b83811015611f5f5781548a820152908501908201611f46565b505050860193505b5050508351611f7a8183602088016125bb565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fca90830184611eba565b9695505050505050565b901515815260200190565b6000602082526107426020830184611eba565b60208082526022908201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604082015260600190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526022908201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e604082015261647360f01b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560408201526d195b881a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60208082526024908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152633bb732b960e11b606082015260800190565b60208082526028908201527f5468652073656e646572206973206e6f742074686520526f6f744c6f6769632060408201526718dbdb9d1c9858dd60c21b606082015260800190565b90815260200190565b60ff91909116815260200190565b60005b838110156125d65781810151838201526020016125be565b838111156105415750506000910152565b6001600160a01b0381168114610f1b57600080fd5b6001600160e01b031981168114610f1b57600080fdfe4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220b383d4832fcbed1ec39a0de98fa96442d2a066e8b5a20935886687f649f0d1a264736f6c634300060b0033",
  "sourceMap": "539:4670:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "539:4670:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:140:12;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5028:90:15;;;:::i;:::-;;;;;;;:::i;1080:274:8:-;;;;;;:::i;:::-;;:::i;:::-;;9688:209:15;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9022:381::-;;;;;;:::i;:::-;;:::i;2821:98:8:-;;;:::i;2038:433::-;;;;;;:::i;:::-;;:::i;7902:200:15:-;;;:::i;:::-;;;;;;;:::i;11399:300::-;;;;;;:::i;:::-;;:::i;7597:152::-;;;;;;:::i;:::-;;:::i;12348:149::-;;;;;;:::i;:::-;;:::i;8440:161::-;;;;;;:::i;:::-;;:::i;3258:149:8:-;;;;;;:::i;:::-;;:::i;3027:102::-;;;:::i;4756:167:15:-;;;;;;:::i;:::-;;:::i;1461:335:8:-;;;;;;:::i;:::-;;:::i;7136:87:15:-;;;:::i;4326:211::-;;;;;;:::i;:::-;;:::i;1894:145:11:-;;;:::i;798:84:8:-;;;:::i;1271:77:11:-;;;:::i;5227:94:15:-;;;:::i;10196:290::-;;;;;;:::i;:::-;;:::i;13220:282::-;;;;;;:::i;:::-;;:::i;6164:740::-;;;;;;:::i;:::-;;:::i;2605:110:8:-;;;;;;:::i;:::-;;:::i;3499:77::-;;;:::i;10808:154:15:-;;;;;;:::i;:::-;;:::i;2188:240:11:-;;;;;;:::i;:::-;;:::i;1103:140:12:-;-1:-1:-1;;;;;;1203:33:12;;1180:4;1203:33;;;:20;:33;;;;;;;;1103:140;;;;:::o;5028:90:15:-;5106:5;5099:12;;;;;;;;-1:-1:-1;;5099:12:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5074:13;;5099:12;;5106:5;;5099:12;;5106:5;5099:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5028:90;;:::o;1080:274:8:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;1205:20:8::1;:35:::0;;-1:-1:-1;;;;;;1205:35:8::1;-1:-1:-1::0;;;;;1205:35:8;::::1;;::::0;;-1:-1:-1;1246:7:8::1;:11:::0;1263:45:::1;1295:4:::0;1301:6;1263:31:::1;:45::i;:::-;1314:35;:33;:35::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;1264:55;1080:274:8;;;;:::o;9688:209:15:-;9756:7;9783:16;9791:7;9783;:16::i;:::-;9775:73;;;;-1:-1:-1;;;9775:73:15;;;;;;;:::i;:::-;-1:-1:-1;9866:24:15;;;;:15;:24;;;;;;-1:-1:-1;;;;;9866:24:15;;9688:209::o;9022:381::-;9102:13;9118:16;9126:7;9118;:16::i;:::-;9102:32;;9158:5;-1:-1:-1;;;;;9152:11:15;:2;-1:-1:-1;;;;;9152:11:15;;;9144:57;;;;-1:-1:-1;;;9144:57:15;;;;;;;:::i;:::-;9236:5;-1:-1:-1;;;;;9220:21:15;:12;:10;:12::i;:::-;-1:-1:-1;;;;;9220:21:15;;:62;;;;9245:37;9262:5;9269:12;:10;:12::i;9245:37::-;9212:152;;;;-1:-1:-1;;;9212:152:15;;;;;;;:::i;:::-;9375:21;9384:2;9388:7;9375:8;:21::i;:::-;9022:381;;;:::o;2821:98:8:-;2873:7;2895:19;:17;:19::i;:::-;2888:26;;2821:98;:::o;2038:433::-;2154:19;:17;:19::i;:::-;550:10:2;-1:-1:-1;;;;;550:23:2;;;535:94;;;;-1:-1:-1;;;535:94:2;;;;;;;:::i;:::-;2196:34:8::1;2222:7;2196:25;:34::i;:::-;2181:109;;;;-1:-1:-1::0;;;2181:109:8::1;;;;;;;:::i;:::-;2296:13;2312:34;2338:7;2312:25;:34::i;:::-;2296:50;;2368:5;-1:-1:-1::0;;;;;2360:13:8::1;:4;-1:-1:-1::0;;;;;2360:13:8::1;;2352:62;;;;-1:-1:-1::0;;;2352:62:8::1;;;;;;;:::i;:::-;2420:46;2448:4;2454:2;2458:7;2420:27;:46::i;:::-;635:1:2;2038:433:8::0;;;;:::o;7902:200:15:-;7955:7;8074:21;:12;:19;:21::i;11399:300::-;11558:41;11577:12;:10;:12::i;:::-;11591:7;11558:18;:41::i;:::-;11550:103;;;;-1:-1:-1;;;11550:103:15;;;;;;;:::i;:::-;11664:28;11674:4;11680:2;11684:7;11664:9;:28::i;7597:152::-;-1:-1:-1;;;;;7712:20:15;;7686:7;7712:20;;;:13;:20;;;;;:30;;7736:5;7712:30;:23;:30;:::i;:::-;7705:37;;7597:152;;;;;:::o;12348:149::-;12451:39;12468:4;12474:2;12478:7;12451:39;;;;;;;;;;;;:16;:39::i;8440:161::-;8507:7;;8548:22;:12;8564:5;8548:22;:15;:22;:::i;:::-;-1:-1:-1;8526:44:15;8440:161;-1:-1:-1;;;8440:161:15:o;3258:149:8:-;3344:7;3368:34;3394:7;3368:25;:34::i;3027:102::-;3104:20;;-1:-1:-1;;;;;3104:20:8;3027:102;:::o;4756:167:15:-;4820:7;4846:70;4863:7;4846:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;1461:335:8:-;1569:7;1535:19;:17;:19::i;:::-;550:10:2;-1:-1:-1;;;;;550:23:2;;;535:94;;;;-1:-1:-1;;;535:94:2;;;;;;;:::i;:::-;1586:7:8::1;:12:::0;;1597:1:::1;1586:12;::::0;;:7:::1;1625:101;1667:7;::::0;1646:29:::1;::::0;-1:-1:-1;;;1646:29:8;;:11:::1;::::0;:20:::1;::::0;:29:::1;::::0;1667:7;1646:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1636:39;;1690:34;1716:7;1690:25;:34::i;:::-;1625:101;;1731:40;1755:6;1763:7;1731:23;:40::i;:::-;1784:7:::0;1461:335;-1:-1:-1;;;1461:335:8:o;7136:87:15:-;7208:8;7201:15;;;;;;;;-1:-1:-1;;7201:15:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7176:13;;7201:15;;7208:8;;7201:15;;7208:8;7201:15;;;;;;;;;;;;;;;;;;;;;;;;4326:211;4390:7;-1:-1:-1;;;;;4417:19:15;;4409:74;;;;-1:-1:-1;;;4409:74:15;;;;;;;:::i;:::-;-1:-1:-1;;;;;4501:20:15;;;;;;:13;:20;;;;;:29;;:27;:29::i;1894:145:11:-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:11;;;:22;;;1467:67;;;;-1:-1:-1;;;1467:67:11;;;;;;;:::i;:::-;1984:6:::1;::::0;1963:40:::1;::::0;2000:1:::1;::::0;-1:-1:-1;;;;;1984:6:11::1;::::0;1963:40:::1;::::0;2000:1;;1963:40:::1;2013:6;:19:::0;;-1:-1:-1;;;;;;2013:19:11::1;::::0;;1894:145::o;798:84:8:-;843:7;865:12;:10;:12::i;1271:77:11:-;1335:6;;-1:-1:-1;;;;;1335:6:11;1271:77;:::o;5227:94:15:-;5307:7;5300:14;;;;;;;;-1:-1:-1;;5300:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5275:13;;5300:14;;5307:7;;5300:14;;5307:7;5300:14;;;;;;;;;;;;;;;;;;;;;;;;10196:290;10310:12;:10;:12::i;:::-;-1:-1:-1;;;;;10298:24:15;:8;-1:-1:-1;;;;;10298:24:15;;;10290:62;;;;-1:-1:-1;;;10290:62:15;;;;;;;:::i;:::-;10408:8;10363:18;:32;10382:12;:10;:12::i;:::-;-1:-1:-1;;;;;10363:32:15;;;;;;;;;;;;;;;;;-1:-1:-1;10363:32:15;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;10363:53:15;;;;;;;;;;;10446:12;:10;:12::i;:::-;-1:-1:-1;;;;;10431:48:15;;10470:8;10431:48;;;;;;:::i;:::-;;;;;;;;10196:290;;:::o;13220:282::-;13351:41;13370:12;:10;:12::i;:::-;13384:7;13351:18;:41::i;:::-;13343:103;;;;-1:-1:-1;;;13343:103:15;;;;;;;:::i;:::-;13456:39;13470:4;13476:2;13480:7;13489:5;13456:13;:39::i;6164:740::-;6229:13;6262:16;6270:7;6262;:16::i;:::-;6254:76;;;;-1:-1:-1;;;6254:76:15;;;;;;;:::i;:::-;6367:19;;;;:10;:19;;;;;;;;;6341:45;;;;;;-1:-1:-1;;6341:45:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;6367:19;6341:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6465:8:15;6459:22;6341:45;;-1:-1:-1;;;;6459:22:15;-1:-1:-1;;6459:22:15;;;;;;;;;;;6455:74;;6509:9;-1:-1:-1;6502:16:15;;6455:74;6631:23;;:27;6627:110;;6705:8;6715:9;6688:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6674:52;;;;;6627:110;6867:8;6877:18;:7;:16;:18::i;:::-;6850:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6836:61;;;6164:740;;;:::o;2605:110:8:-;1485:12:11;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:11;;;:22;;;1467:67;;;;-1:-1:-1;;;1467:67:11;;;;;;;:::i;:::-;2675:20:8::1;:35:::0;;-1:-1:-1;;;;;;2675:35:8::1;-1:-1:-1::0;;;;;2675:35:8;;;::::1;::::0;;;::::1;::::0;;2605:110::o;3499:77::-;3564:7;;3499:77;:::o;10808:154:15:-;-1:-1:-1;;;;;10920:25:15;;;10897:4;10920:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;10808:154::o;2188:240:11:-;1485:12;:10;:12::i;:::-;1475:6;;-1:-1:-1;;;;;1475:6:11;;;:22;;;1467:67;;;;-1:-1:-1;;;1467:67:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;2276:22:11;::::1;2268:73;;;;-1:-1:-1::0;;;2268:73:11::1;;;;;;;:::i;:::-;2377:6;::::0;2356:38:::1;::::0;-1:-1:-1;;;;;2356:38:11;;::::1;::::0;2377:6:::1;::::0;2356:38:::1;::::0;2377:6:::1;::::0;2356:38:::1;2404:6;:17:::0;;-1:-1:-1;;;;;;2404:17:11::1;-1:-1:-1::0;;;;;2404:17:11;;;::::1;::::0;;;::::1;::::0;;2188:240::o;1409:498:10:-;1820:4;1864:17;1895:7;1409:498;:::o;3502:211:15:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;3598:26:15::1;:24;:26::i;:::-;3634:25;:23;:25::i;:::-;3669:37;3693:4;3699:6;3669:23;:37::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;3502:211:15;;;:::o;867:126:11:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;924:26:11::1;:24;:26::i;:::-;960;:24;:26::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;1264:55;867:126:11;:::o;14671:117:15:-;14728:4;14751:30;:12;14773:7;14751:30;:21;:30;:::i;931:104:9:-;1018:10;931:104;:::o;21695:155:15:-;21760:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;21760:29:15;-1:-1:-1;;;;;21760:29:15;;;;;;;;:24;;21813:16;21760:24;21813:7;:16::i;:::-;-1:-1:-1;;;;;21804:39:15;;;;;;;;;;;21695:155;;:::o;3697:158:8:-;3748:7;3763:24;3790:15;:13;:15::i;:::-;-1:-1:-1;;;;;3790:19:8;;86:1:5;3790:31:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3763:58;-1:-1:-1;;3697:158:8;:::o;18661:559:15:-;18778:4;-1:-1:-1;;;;;18758:24:15;:16;18766:7;18758;:16::i;:::-;-1:-1:-1;;;;;18758:24:15;;18750:78;;;;-1:-1:-1;;;18750:78:15;;;;;;;:::i;:::-;-1:-1:-1;;;;;18846:16:15;;18838:65;;;;-1:-1:-1;;;18838:65:15;;;;;;;:::i;:::-;18914:39;18935:4;18941:2;18945:7;18914:20;:39::i;:::-;19015:29;19032:1;19036:7;19015:8;:29::i;:::-;-1:-1:-1;;;;;19055:19:15;;;;;;:13;:19;;;;;:35;;19082:7;19055:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;19100:17:15;;;;;;:13;:17;;;;;:30;;19122:7;19100:30;:21;:30;:::i;:::-;-1:-1:-1;19141:29:15;:12;19158:7;19167:2;19141:29;:16;:29;:::i;:::-;;19205:7;19201:2;-1:-1:-1;;;;;19186:27:15;19195:4;-1:-1:-1;;;;;19186:27:15;;;;;;;;;;;18661:559;;;:::o;6990:121:21:-;7059:7;7085:19;7093:3;7085:7;:19::i;15149:329:15:-;15234:4;15258:16;15266:7;15258;:16::i;:::-;15250:73;;;;-1:-1:-1;;;15250:73:15;;;;;;;:::i;:::-;15333:13;15349:16;15357:7;15349;:16::i;:::-;15333:32;;15394:5;-1:-1:-1;;;;;15383:16:15;:7;-1:-1:-1;;;;;15383:16:15;;:51;;;;15427:7;-1:-1:-1;;;;;15403:31:15;:20;15415:7;15403:11;:20::i;:::-;-1:-1:-1;;;;;15403:31:15;;15383:51;:87;;;;15438:32;15455:5;15462:7;15438:16;:32::i;:::-;15375:96;15149:329;-1:-1:-1;;;;15149:329:15:o;7616:135:22:-;7687:7;7721:22;7725:3;7737:5;7721:3;:22::i;7439:224:21:-;7519:7;;;;7578:22;7582:3;7594:5;7578:3;:22::i;:::-;7547:53;;;;-1:-1:-1;7439:224:21;-1:-1:-1;;;;;7439:224:21:o;8082:202::-;8189:7;8231:44;8236:3;8256;8262:12;8231:4;:44::i;17208:393:15:-;-1:-1:-1;;;;;17287:16:15;;17279:61;;;;-1:-1:-1;;;17279:61:15;;;;;;;:::i;:::-;17359:16;17367:7;17359;:16::i;:::-;17358:17;17350:58;;;;-1:-1:-1;;;17350:58:15;;;;;;;:::i;:::-;17419:45;17448:1;17452:2;17456:7;17419:20;:45::i;:::-;-1:-1:-1;;;;;17475:17:15;;;;;;:13;:17;;;;;:30;;17497:7;17475:30;:21;:30;:::i;:::-;-1:-1:-1;17516:29:15;:12;17533:7;17542:2;17516:29;:16;:29;:::i;:::-;-1:-1:-1;17561:33:15;;17586:7;;-1:-1:-1;;;;;17561:33:15;;;17578:1;;17561:33;;17578:1;;17561:33;17208:393;;:::o;14207:269::-;14320:28;14330:4;14336:2;14340:7;14320:9;:28::i;:::-;14366:48;14389:4;14395:2;14399:7;14408:5;14366:22;:48::i;:::-;14358:111;;;;-1:-1:-1;;;14358:111:15;;;;;;;:::i;169:723:23:-;225:13;442:10;438:51;;-1:-1:-1;468:10:23;;;;;;;;;;;;-1:-1:-1;;;468:10:23;;;;;;438:51;513:5;498:12;552:75;559:9;;552:75;;584:8;;614:2;606:10;;;;552:75;;;636:19;668:6;658:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;658:17:23;-1:-1:-1;728:5:23;;-1:-1:-1;636:39:23;-1:-1:-1;;;701:10:23;;743:112;750:9;;743:112;;816:2;809:4;:9;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;-1:-1:-1;;;;;775:45:23;;;;;;;;-1:-1:-1;842:2:23;834:10;;;;743:112;;;-1:-1:-1;878:6:23;169:723;-1:-1:-1;;;;169:723:23:o;858:66:9:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1268:14;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;858:66:9;:::o;700:252:12:-;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;904:40:12::1;-1:-1:-1::0;;;904:18:12::1;:40::i;3719:402:15:-:0;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;3827:12:15;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3849:16:15;;::::1;::::0;:7:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3953:40:15::1;-1:-1:-1::0;;;3953:18:15::1;:40::i;:::-;4003:49;-1:-1:-1::0;;;4003:18:15::1;:49::i;:::-;4062:51;-1:-1:-1::0;;;4062:18:15::1;:51::i;999:195:11:-:0;1024:12:10;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:10;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:10;;;;;;;:::i;:::-;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:10;;;;;1225:18;1213:4;1225:18;;;1170:80;1068:17:11::1;1088:12;:10;:12::i;:::-;1110:6;:18:::0;;-1:-1:-1;;;;;;1110:18:11::1;-1:-1:-1::0;;;;;1110:18:11;::::1;::::0;;::::1;::::0;;;1143:43:::1;::::0;1110:18;;-1:-1:-1;1110:18:11;-1:-1:-1;;1143:43:11::1;::::0;-1:-1:-1;;1143:43:11::1;1256:1:10;1268:14:::0;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:10;;;999:195:11;:::o;6758:149:21:-;6842:4;6865:35;6875:3;6895;6865:9;:35::i;6731:135:22:-;6801:4;6824:35;6832:3;6852:5;6824:7;:35::i;6434:129::-;6501:4;6524:32;6529:3;6549:5;6524:4;:32::i;6206:174:21:-;6295:4;6318:55;6323:3;6343;-1:-1:-1;;;;;6357:14:21;;6318:4;:55::i;4450:108::-;4532:19;;4450:108::o;4390:201:22:-;4484:18;;4457:7;;4484:26;-1:-1:-1;4476:73:22;;;;-1:-1:-1;;;4476:73:22;;;;;;;:::i;:::-;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;4901:274:21:-;5004:19;;4968:7;;;;5004:27;-1:-1:-1;4996:74:21;;;;-1:-1:-1;;;4996:74:21;;;;;;;:::i;:::-;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;5582:315::-;5676:7;5714:17;;;:12;;;:17;;;;;;5764:12;5749:13;5741:36;;;;-1:-1:-1;;;5741:36:21;;;;;;;;:::i;:::-;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;20639:1050:15:-;20759:4;20784:15;:2;-1:-1:-1;;;;;20784:13:15;;:15::i;:::-;20779:58;;-1:-1:-1;20822:4:15;20815:11;;20779:58;20906:12;20920:23;-1:-1:-1;;;;;20947:7:15;;-1:-1:-1;;;21050:12:15;:10;:12::i;:::-;21076:4;21094:7;21115:5;20955:175;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;20955:175:15;;;;;;;;;;;;;;-1:-1:-1;;;;;20955:175:15;-1:-1:-1;;;;;;20955:175:15;;;;;;;;;;20947:184;;;;20955:175;20947:184;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20905:226;;;;21146:7;21141:542;;21173:17;;:21;21169:376;;21338:10;21332:17;21398:15;21385:10;21381:2;21377:19;21370:44;21287:145;21470:60;;-1:-1:-1;;;21470:60:15;;;;;;;:::i;21141:542::-;21575:13;21602:10;21591:32;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;21645:26:15;-1:-1:-1;;;21645:26:15;;-1:-1:-1;21637:35:15;;-1:-1:-1;;;21637:35:15;1637:198:12;-1:-1:-1;;;;;;1720:25:12;;;;;1712:66;;;;-1:-1:-1;;;1712:66:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1788:33:12;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1788:40:12;1824:4;1788:40;;;1637:198::o;4237:123:21:-;4308:4;4331:17;;;:12;;;;;:17;;;;;;:22;;;4237:123::o;2150:1512:22:-;2216:4;2353:19;;;:12;;;:19;;;;;;2387:15;;2383:1273;;2816:18;;-1:-1:-1;;2768:14:22;;;;2816:22;;;;2744:21;;2816:3;;:22;;3098;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;;;;;:38;;;;3316:23;;;3358:1;3316:12;;;:23;;;;;;3342:17;;;3316:43;;3465:17;;3316:3;;3465:17;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;;;1578:404;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;-1:-1:-1;1699:23:22;;;;;;;;:11;:23;;;;;;;;;;;;;1879:18;;1857:19;;;:12;;;:19;;;;;;:40;;;;1911:11;;1657:319;-1:-1:-1;1960:5:22;1953:12;;1795:678:21;1871:4;2004:17;;;:12;;;:17;;;;;;2036:13;2032:435;;-1:-1:-1;;2120:38:21;;;;;;;;;;;;;;;;;;2102:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2314:19;;2294:17;;;:12;;;:17;;;;;;;:39;2347:11;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;;;685:610:20;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:20;;;1237:51;-1:-1:-1;;685:610:20:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;689:440;;790:3;783:4;775:6;771:17;767:27;757:2;;-1:-1;;798:12;757:2;845:6;832:20;29590:18;;29582:6;29579:30;29576:2;;;-1:-1;;29612:12;29576:2;29246;29240:9;29685;29666:17;;-1:-1;;29662:33;29272:17;;29753:4;29272:17;29332:34;;;29368:22;;;29329:62;29326:2;;;-1:-1;;29394:12;29326:2;29246;29413:22;937:21;;;858:73;-1:-1;858:73;1037:16;;;29753:4;1037:16;1034:25;-1:-1;1031:2;;;1072:1;;1062:12;1031:2;32000:6;29753:4;979:6;975:17;29753:4;1013:5;1009:16;31977:30;32056:1;29753:4;32047:6;1013:5;32038:16;;32031:27;;;;750:379;;;;:::o;1866:241::-;;1970:2;1958:9;1949:7;1945:23;1941:32;1938:2;;;-1:-1;;1976:12;1938:2;85:6;72:20;97:33;124:5;97:33;:::i;2114:263::-;;2229:2;2217:9;2208:7;2204:23;2200:32;2197:2;;;-1:-1;;2235:12;2197:2;226:6;220:13;238:33;265:5;238:33;:::i;2384:366::-;;;2505:2;2493:9;2484:7;2480:23;2476:32;2473:2;;;-1:-1;;2511:12;2473:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2563:63;-1:-1;2663:2;2702:22;;72:20;97:33;72:20;97:33;:::i;:::-;2671:63;;;;2467:283;;;;;:::o;2757:491::-;;;;2895:2;2883:9;2874:7;2870:23;2866:32;2863:2;;;-1:-1;;2901:12;2863:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2953:63;-1:-1;3053:2;3092:22;;72:20;97:33;72:20;97:33;:::i;:::-;2857:391;;3061:63;;-1:-1;;;3161:2;3200:22;;;;1655:20;;2857:391::o;3255:721::-;;;;;3419:3;3407:9;3398:7;3394:23;3390:33;3387:2;;;-1:-1;;3426:12;3387:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3478:63;-1:-1;3578:2;3617:22;;72:20;97:33;72:20;97:33;:::i;:::-;3586:63;-1:-1;3686:2;3725:22;;1655:20;;-1:-1;3822:2;3807:18;;3794:32;3846:18;3835:30;;3832:2;;;-1:-1;;3868:12;3832:2;3898:62;3952:7;3943:6;3932:9;3928:22;3898:62;:::i;:::-;3888:72;;;3381:595;;;;;;;:::o;3983:360::-;;;4101:2;4089:9;4080:7;4076:23;4072:32;4069:2;;;-1:-1;;4107:12;4069:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4159:63;-1:-1;4259:2;4295:22;;347:20;31446:13;;31439:21;32634:32;;32624:2;;-1:-1;;32670:12;4350:366;;;4471:2;4459:9;4450:7;4446:23;4442:32;4439:2;;;-1:-1;;4477:12;4439:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4529:63;4629:2;4668:22;;;;1655:20;;-1:-1;;;4433:283::o;4723:239::-;;4826:2;4814:9;4805:7;4801:23;4797:32;4794:2;;;-1:-1;;4832:12;4794:2;493:6;480:20;505:32;531:5;505:32;:::i;4969:261::-;;5083:2;5071:9;5062:7;5058:23;5054:32;5051:2;;;-1:-1;;5089:12;5051:2;632:6;626:13;644:32;670:5;644:32;:::i;5237:703::-;;;;5395:2;5383:9;5374:7;5370:23;5366:32;5363:2;;;-1:-1;;5401:12;5363:2;5459:17;5446:31;5497:18;;5489:6;5486:30;5483:2;;;-1:-1;;5519:12;5483:2;5549:63;5604:7;5595:6;5584:9;5580:22;5549:63;:::i;:::-;5539:73;;5677:2;5666:9;5662:18;5649:32;5635:46;;5497:18;5693:6;5690:30;5687:2;;;-1:-1;;5723:12;5687:2;;5753:63;5808:7;5799:6;5788:9;5784:22;5753:63;:::i;:::-;5743:73;;;5853:2;5896:9;5892:22;72:20;97:33;124:5;97:33;:::i;:::-;5861:63;;;;5357:583;;;;;:::o;5947:241::-;;6051:2;6039:9;6030:7;6026:23;6022:32;6019:2;;;-1:-1;;6057:12;6019:2;-1:-1;1655:20;;6013:175;-1:-1;6013:175::o;6195:263::-;;6310:2;6298:9;6289:7;6285:23;6281:32;6278:2;;;-1:-1;;6316:12;6278:2;-1:-1;1803:13;;6272:186;-1:-1;6272:186::o;6840:343::-;;6982:5;30356:12;30641:6;30636:3;30629:19;7075:52;7120:6;30678:4;30673:3;30669:14;30678:4;7101:5;7097:16;7075:52;:::i;:::-;29685:9;32417:14;-1:-1;;32413:28;7139:39;;;;30678:4;7139:39;;6930:253;-1:-1;;6930:253::o;17449:271::-;;7350:5;30356:12;7461:52;7506:6;7501:3;7494:4;7487:5;7483:16;7461:52;:::i;:::-;7525:16;;;;;17583:137;-1:-1;;17583:137::o;17727:430::-;;-1:-1;8436:5;8430:12;8470:1;;8459:9;8455:17;8483:1;8478:268;;;;8757:1;8752:425;;;;8448:729;;8478:268;-1:-1;;8683:25;;8671:38;;8552:1;8537:17;;8556:4;8533:28;8723:16;;;-1:-1;8478:268;;8752:425;8821:1;8810:9;8806:17;30209:3;-1:-1;30199:14;30241:4;;-1:-1;30228:18;-1:-1;9010:130;9024:6;9021:1;9018:13;9010:130;;;9083:14;;9070:11;;;9063:35;9117:15;;;;9039:12;;9010:130;;;-1:-1;;;9154:16;;;-1:-1;8448:729;;;;7350:5;30356:12;7461:52;7506:6;7501:3;7494:4;7487:5;7483:16;7461:52;:::i;:::-;7525:16;;17908:249;-1:-1;;;;17908:249::o;18164:222::-;-1:-1;;;;;31685:54;;;;6552:45;;18291:2;18276:18;;18262:124::o;18393:672::-;-1:-1;;;;;31685:54;;;6552:45;;31685:54;;18819:2;18804:18;;6552:45;18902:2;18887:18;;17158:37;;;18638:3;18939:2;18924:18;;18917:48;;;18393:672;;18979:76;;18623:19;;19041:6;18979:76;:::i;:::-;18971:84;18609:456;-1:-1;;;;;;18609:456::o;19072:210::-;31446:13;;31439:21;6794:34;;19193:2;19178:18;;19164:118::o;19289:310::-;;19436:2;19457:17;19450:47;19511:78;19436:2;19425:9;19421:18;19575:6;19511:78;:::i;19606:416::-;19806:2;19820:47;;;9416:2;19791:18;;;30629:19;9452:34;30669:14;;;9432:55;-1:-1;;;9507:12;;;9500:26;9545:12;;;19777:245::o;20029:416::-;20229:2;20243:47;;;9796:2;20214:18;;;30629:19;9832:34;30669:14;;;9812:55;-1:-1;;;9887:12;;;9880:42;9941:12;;;20200:245::o;20452:416::-;20652:2;20666:47;;;10192:2;20637:18;;;30629:19;10228:34;30669:14;;;10208:55;-1:-1;;;10283:12;;;10276:30;10325:12;;;20623:245::o;20875:416::-;21075:2;21089:47;;;10576:2;21060:18;;;30629:19;10612:30;30669:14;;;10592:51;10662:12;;;21046:245::o;21298:416::-;21498:2;21512:47;;;10913:2;21483:18;;;30629:19;10949:30;30669:14;;;10929:51;10999:12;;;21469:245::o;21721:416::-;21921:2;21935:47;;;11250:2;21906:18;;;30629:19;11286:34;30669:14;;;11266:55;-1:-1;;;11341:12;;;11334:28;11381:12;;;21892:245::o;22144:416::-;22344:2;22358:47;;;11632:2;22329:18;;;30629:19;11668:27;30669:14;;;11648:48;11715:12;;;22315:245::o;22567:416::-;22767:2;22781:47;;;11966:2;22752:18;;;30629:19;12002:34;30669:14;;;11982:55;-1:-1;;;12057:12;;;12050:36;12105:12;;;22738:245::o;22990:416::-;23190:2;23204:47;;;12356:2;23175:18;;;30629:19;12392:34;30669:14;;;12372:55;12461:26;12447:12;;;12440:48;12507:12;;;23161:245::o;23413:416::-;23613:2;23627:47;;;12758:2;23598:18;;;30629:19;12794:34;30669:14;;;12774:55;-1:-1;;;12849:12;;;12842:34;12895:12;;;23584:245::o;23836:416::-;24036:2;24050:47;;;13146:2;24021:18;;;30629:19;13182:34;30669:14;;;13162:55;-1:-1;;;13237:12;;;13230:26;13275:12;;;24007:245::o;24259:416::-;24459:2;24473:47;;;24444:18;;;30629:19;13562:34;30669:14;;;13542:55;13616:12;;;24430:245::o;24682:416::-;24882:2;24896:47;;;13867:2;24867:18;;;30629:19;13903:34;30669:14;;;13883:55;-1:-1;;;13958:12;;;13951:36;14006:12;;;24853:245::o;25105:416::-;25305:2;25319:47;;;25290:18;;;30629:19;14293:34;30669:14;;;14273:55;14347:12;;;25276:245::o;25528:416::-;25728:2;25742:47;;;14598:2;25713:18;;;30629:19;14634:34;30669:14;;;14614:55;-1:-1;;;14689:12;;;14682:38;14739:12;;;25699:245::o;25951:416::-;26151:2;26165:47;;;14990:2;26136:18;;;30629:19;15026:34;30669:14;;;15006:55;-1:-1;;;15081:12;;;15074:33;15126:12;;;26122:245::o;26374:416::-;26574:2;26588:47;;;15377:2;26559:18;;;30629:19;15413:34;30669:14;;;15393:55;-1:-1;;;15468:12;;;15461:39;15519:12;;;26545:245::o;26797:416::-;26997:2;27011:47;;;15770:2;26982:18;;;30629:19;15806:34;30669:14;;;15786:55;-1:-1;;;15861:12;;;15854:25;15898:12;;;26968:245::o;27220:416::-;27420:2;27434:47;;;16149:2;27405:18;;;30629:19;16185:34;30669:14;;;16165:55;-1:-1;;;16240:12;;;16233:41;16293:12;;;27391:245::o;27643:416::-;27843:2;27857:47;;;16544:2;27828:18;;;30629:19;16580:34;30669:14;;;16560:55;-1:-1;;;16635:12;;;16628:28;16675:12;;;27814:245::o;28066:416::-;28266:2;28280:47;;;16926:2;28251:18;;;30629:19;16962:34;30669:14;;;16942:55;-1:-1;;;17017:12;;;17010:32;17061:12;;;28237:245::o;28489:238::-;17158:37;;;28624:2;28609:18;;28595:132::o;28963:214::-;31901:4;31890:16;;;;17402:35;;29086:2;29071:18;;29057:120::o;32073:268::-;32138:1;32145:101;32159:6;32156:1;32153:13;32145:101;;;32226:11;;;32220:18;32207:11;;;32200:39;32181:2;32174:10;32145:101;;;32261:6;32258:1;32255:13;32252:2;;;-1:-1;;32138:1;32308:16;;32301:27;32122:219::o;32454:117::-;-1:-1;;;;;31685:54;;32513:35;;32503:2;;32562:1;;32552:12;32696:115;-1:-1;;;;;;31533:78;;32754:34;;32744:2;;32802:1;;32792:12",
  "source": "pragma solidity 0.6.11;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\";\nimport \"../../common/IStartrailRegistry.sol\";\nimport \"../../lib/contracts/IDGenerator.sol\";\nimport \"../../lib/contracts/Signature.sol\";\nimport \"../../common/IRootLogic.sol\";\nimport \"../../common/IStartrailValidator.sol\";\nimport \"../../name/contracts/NameRegistry.sol\";\nimport \"../../name/contracts/Contracts.sol\";\n\ncontract StartrailRegistry is\n  OwnableUpgradeSafe,\n  ERC721UpgradeSafe,\n  IStartrailRegistry,\n  IStartrailValidator,\n  Contracts\n{\n  /*\n   * State variables\n   */\n  uint256 private idNonce;\n\n  /*\n   * Storage\n   */\n  address private _nameRegistryAddress;\n\n  function getMsgSender() public view returns (address) {\n    return _msgSender();\n  }\n\n  /**\n   * @dev Initializes the StartrailRegistry\n   * @param name string of the name\n   * @param symbol string of the symbol\n   * @param nameRegistry address of the NameRegistry contract\n   */\n  function initialize(\n    string memory name,\n    string memory symbol,\n    address nameRegistry\n  ) public initializer {\n    _nameRegistryAddress = nameRegistry;\n    idNonce = 1;\n    ERC721UpgradeSafe.__ERC721_init(name, symbol);\n    OwnableUpgradeSafe.__Ownable_init();\n  }\n\n  /**\n   * @dev Creates a new StartrailRegistryRecordID\n   * @param sender address of the sender\n   */\n  function mint(address sender)\n    external\n    override\n    onlyRootLogic(_rootLogicAddress())\n    returns (uint256)\n  {\n    idNonce += 1;\n    uint256 tokenId;\n    do {\n      tokenId = IDGenerator.generate(idNonce);\n    } while (ERC721UpgradeSafe._exists(tokenId));\n    ERC721UpgradeSafe._mint(sender, tokenId);\n    return tokenId;\n  }\n\n  /**\n   * @dev Transfers the ownership of a given SRR ID to another address.\n   * @param from address of the current owner\n   * @param to address to receive the ownership\n   * @param tokenId uint256 ID of the SRR to be transferred\n   */\n  function transferSRRFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) external override onlyRootLogic(_rootLogicAddress()) {\n    require(\n      ERC721UpgradeSafe._exists(tokenId),\n      \"ERC721: operator query for nonexistent token\"\n    );\n    address owner = ERC721UpgradeSafe.ownerOf(tokenId);\n    require(from == owner, \"ERC721: transfer caller is not owner\");\n    ERC721UpgradeSafe._transfer(from, to, tokenId);\n  }\n\n  /**\n   * @dev Sets the address of the NameRegistry contract\n   * @param nameRegistry address of the NameRegistry contract\n   */\n  function setNameRegistry(address nameRegistry) public onlyOwner {\n    _nameRegistryAddress = nameRegistry;\n  }\n\n  /**\n   * @dev Gets the endpoint address of the RootLogic\n   * @return RootLogic proxy address\n   */\n  function getRootLogicAddress() public view returns (address) {\n    return _rootLogicAddress();\n  }\n\n  /**\n   * @dev Gets the endpoint address of NameRegistry\n   * @return NameRegistry proxy address\n   */\n  function getNameRegistryAddress() public view returns (address) {\n    return _nameRegistryAddress;\n  }\n\n  /**\n   * @dev Gets the owner address of the SRR\n   * @param tokenId uint256 of the SRR ID\n   * @return owner address\n   */\n  function getSRROwner(uint256 tokenId)\n    external\n    override\n    view\n    returns (address)\n  {\n    return ERC721UpgradeSafe.ownerOf(tokenId);\n  }\n\n  /**\n   * @dev Gets the nonce from the storage\n   * @return idNonce from storage\n   */\n  function getIdNonce() public view returns (uint256) {\n    return idNonce;\n  }\n\n  function _nameRegistry() private view returns (NameRegistry) {\n    return NameRegistry(_nameRegistryAddress);\n  }\n\n  function _rootLogicAddress() private view returns (address) {\n    address rootLogicAddress = _nameRegistry().get(ROOT_LOGIC);\n    return rootLogicAddress;\n  }\n\n  // **************************\n  // scope out for Day1\n  // **************************\n\n  // /**\n  //  * @dev transfers StartrailRegistry\n  //  * @param to address of the receiver\n  //  * @param tokenId uint256 of StartrailRegistryRecordID\n  //  * @param sig signature\n  //  */\n  // function transferSRRFrom(\n  //   address to,\n  //   uint256 tokenId,\n  //   Signature.Sig memory sig\n  // ) public validSender(sig) {\n  //   address signer = Signature.getAddress(sig);\n  //   require(ownerOf(tokenId) == signer, \"owner and signer do not match\");\n  //   super._transferFrom(signer, to, tokenId);\n\n  //   emit TransferSRRFrom(signer, to, tokenId);\n  // }\n\n  // /**\n  //  * @dev transfers StartrailRegistry\n  //  * @param from address of the current token owner\n  //  * @param to address of the receiver\n  //  * @param tokenId uint256 of StartrailRegistryRecordID\n  //  * @param _data bytes of private metadata\n  //  */\n  // function safeTransferSRRFrom(\n  //   address from,\n  //   address to,\n  //   uint256 tokenId,\n  //   bytes memory _data\n  // ) public {\n  //   super._safeTransferFrom(from, to, tokenId, _data);\n  //   emit SafeTransferSRRFrom(from, to, tokenId, _data);\n  //   address newOnwer = ownerOf(tokenId);\n  //   IRootLogic logic = IRootLogic(_rootLogicContract);\n  //   // logic.historyProvenance(tokenId, newOnwer, from, _data);\n  // }\n}\n",
  "sourcePath": "/root/rinkeby/startrail/app/token/contracts/StartrailRegistry.sol",
  "ast": {
    "absolutePath": "/root/rinkeby/startrail/app/token/contracts/StartrailRegistry.sol",
    "exportedSymbols": {
      "StartrailRegistry": [
        801
      ]
    },
    "id": 802,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 563,
        "literals": [
          "solidity",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 564,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 565,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 2313,
        "src": "59:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 566,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 1052,
        "src": "144:79:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/common/IStartrailRegistry.sol",
        "file": "../../common/IStartrailRegistry.sol",
        "id": 567,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 252,
        "src": "224:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/lib/contracts/IDGenerator.sol",
        "file": "../../lib/contracts/IDGenerator.sol",
        "id": 568,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 340,
        "src": "270:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/lib/contracts/Signature.sol",
        "file": "../../lib/contracts/Signature.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 354,
        "src": "316:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/common/IRootLogic.sol",
        "file": "../../common/IRootLogic.sol",
        "id": 570,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 224,
        "src": "360:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/common/IStartrailValidator.sol",
        "file": "../../common/IStartrailValidator.sol",
        "id": 571,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 308,
        "src": "398:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/name/contracts/NameRegistry.sol",
        "file": "../../name/contracts/NameRegistry.sol",
        "id": 572,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 505,
        "src": "445:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 573,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 378,
        "src": "493:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 574,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1051,
              "src": "571:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$1051",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "571:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 576,
              "name": "ERC721UpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2312,
              "src": "593:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721UpgradeSafe_$2312",
                "typeString": "contract ERC721UpgradeSafe"
              }
            },
            "id": 577,
            "nodeType": "InheritanceSpecifier",
            "src": "593:17:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 578,
              "name": "IStartrailRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 251,
              "src": "614:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailRegistry_$251",
                "typeString": "contract IStartrailRegistry"
              }
            },
            "id": 579,
            "nodeType": "InheritanceSpecifier",
            "src": "614:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 580,
              "name": "IStartrailValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 307,
              "src": "636:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailValidator_$307",
                "typeString": "contract IStartrailValidator"
              }
            },
            "id": 581,
            "nodeType": "InheritanceSpecifier",
            "src": "636:19:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 582,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "659:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$377",
                "typeString": "contract Contracts"
              }
            },
            "id": 583,
            "nodeType": "InheritanceSpecifier",
            "src": "659:9:8"
          }
        ],
        "contractDependencies": [
          251,
          307,
          377,
          846,
          921,
          1051,
          1126,
          1138,
          2312,
          2420,
          2448,
          2472
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 801,
        "linearizedBaseContracts": [
          801,
          377,
          307,
          251,
          2312,
          2448,
          2472,
          2420,
          1126,
          1138,
          1051,
          846,
          921
        ],
        "name": "StartrailRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 585,
            "mutability": "mutable",
            "name": "idNonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "705:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "705:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 587,
            "mutability": "mutable",
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "757:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 586,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "757:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "852:30:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 592,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "865:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "858:19:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7a6ce2e1",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMsgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 596,
                  "src": "843:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "842:9:8"
            },
            "scope": 801,
            "src": "798:84:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1199:155:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1205:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "1228:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1205:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1256:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1246:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:11:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1295:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1301:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1263:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__ERC721_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1435,
                      "src": "1263:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:45:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "OwnableUpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "1314:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeSafe_$1051_$",
                          "typeString": "type(contract OwnableUpgradeSafe)"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__Ownable_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "1314:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:35:8"
                }
              ]
            },
            "documentation": {
              "id": 597,
              "nodeType": "StructuredDocumentation",
              "src": "886:191:8",
              "text": " @dev Initializes the StartrailRegistry\n @param name string of the name\n @param symbol string of the symbol\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "077f224a",
            "id": 629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 605,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 894,
                  "src": "1187:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:11:8"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1105:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1129:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1155:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:80:8"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:8"
            },
            "scope": 801,
            "src": "1080:274:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              234
            ],
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1580:216:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 642,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1586:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1597:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1586:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:12:8"
                },
                {
                  "assignments": [
                    647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 671,
                      "src": "1604:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:15:8"
                },
                {
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "1628:54:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 649,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "1636:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 652,
                                "name": "idNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "1667:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "IDGenerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "1646:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDGenerator_$339_$",
                                  "typeString": "type(library IDGenerator)"
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "generate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 338,
                              "src": "1646:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1646:29:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1636:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1636:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1716:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1690:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "1690:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 661,
                  "nodeType": "DoWhileStatement",
                  "src": "1625:101:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "1755:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1763:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1731:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2026,
                      "src": "1731:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:40:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "1784:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 670,
                  "nodeType": "Return",
                  "src": "1777:14:8"
                }
              ]
            },
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "1358:100:8",
              "text": " @dev Creates a new StartrailRegistryRecordID\n @param sender address of the sender"
            },
            "functionSelector": "6a627842",
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 636,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "1535:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "1521:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1521:34:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 634,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1508:8:8"
            },
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1475:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:16:8"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1569:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1568:9:8"
            },
            "scope": 801,
            "src": "1461:335:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              243
            ],
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "2175:296:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "2222:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "ERC721UpgradeSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "2196:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                              "typeString": "type(contract ERC721UpgradeSafe)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1883,
                          "src": "2196:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2196:34:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2238:46:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2181:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:109:8"
                },
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 717,
                      "src": "2296:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2338:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2312:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "2312:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2296:50:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "2360:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "2368:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2360:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:38:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        },
                        "value": "ERC721: transfer caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2352:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:62:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 712,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2448:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "2454:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2458:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2420:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2165,
                      "src": "2420:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:46:8"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "1800:235:8",
              "text": " @dev Transfers the ownership of a given SRR ID to another address.\n @param from address of the current owner\n @param to address to receive the ownership\n @param tokenId uint256 ID of the SRR to be transferred"
            },
            "functionSelector": "109a037a",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 683,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2154:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 685,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 682,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "2140:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:34:8"
              }
            ],
            "name": "transferSRRFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 681,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2131:8:8"
            },
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2068:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2086:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2102:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:59:8"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2175:0:8"
            },
            "scope": 801,
            "src": "2038:433:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "2669:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "2675:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 727,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "2698:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2675:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:35:8"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "2475:127:8",
              "text": " @dev Sets the address of the NameRegistry contract\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "ddb8e350",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 723,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 996,
                  "src": "2659:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2659:9:8"
              }
            ],
            "name": "setNameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "2630:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2629:22:8"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:8"
            },
            "scope": 801,
            "src": "2605:110:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "2882:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 737,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2895:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 736,
                  "id": 739,
                  "nodeType": "Return",
                  "src": "2888:26:8"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "2719:99:8",
              "text": " @dev Gets the endpoint address of the RootLogic\n @return RootLogic proxy address"
            },
            "functionSelector": "0bdd4f50",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2849:2:8"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 741,
                  "src": "2873:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2872:9:8"
            },
            "scope": 801,
            "src": "2821:98:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "3091:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 747,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "3104:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 748,
                  "nodeType": "Return",
                  "src": "3097:27:8"
                }
              ]
            },
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "2923:101:8",
              "text": " @dev Gets the endpoint address of NameRegistry\n @return NameRegistry proxy address"
            },
            "functionSelector": "62b9bdc2",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:8"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 750,
                  "src": "3082:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:9:8"
            },
            "scope": 801,
            "src": "3027:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              250
            ],
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "3355:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 761,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "3394:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "3368:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "3368:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "3361:41:8"
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "3133:122:8",
              "text": " @dev Gets the owner address of the SRR\n @param tokenId uint256 of the SRR ID\n @return owner address"
            },
            "functionSelector": "5f915423",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSRROwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3313:8:8"
            },
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3279:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:17:8"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3344:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3343:9:8"
            },
            "scope": 801,
            "src": "3258:149:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "3551:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 771,
                    "name": "idNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "3564:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 770,
                  "id": 772,
                  "nodeType": "Return",
                  "src": "3557:14:8"
                }
              ]
            },
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "3411:85:8",
              "text": " @dev Gets the nonce from the storage\n @return idNonce from storage"
            },
            "functionSelector": "e36a3509",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdNonce",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:2:8"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 774,
                  "src": "3542:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3541:9:8"
            },
            "scope": 801,
            "src": "3499:77:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "3641:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3667:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 779,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "3654:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$504_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 782,
                  "nodeType": "Return",
                  "src": "3647:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3602:2:8"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 784,
                  "src": "3627:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$504",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 776,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 504,
                    "src": "3627:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:14:8"
            },
            "scope": 801,
            "src": "3580:113:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "3757:98:8",
              "statements": [
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 799,
                      "src": "3763:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3763:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3810:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 791,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "3790:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$504_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$504",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 454,
                      "src": "3790:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                        "typeString": "function (uint8) view external returns (address)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 797,
                    "name": "rootLogicAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 790,
                    "src": "3834:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "3827:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:8"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 800,
                  "src": "3748:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3747:9:8"
            },
            "scope": 801,
            "src": "3697:158:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 802,
        "src": "539:4670:8"
      }
    ],
    "src": "0:5210:8"
  },
  "legacyAST": {
    "absolutePath": "/root/rinkeby/startrail/app/token/contracts/StartrailRegistry.sol",
    "exportedSymbols": {
      "StartrailRegistry": [
        801
      ]
    },
    "id": 802,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 563,
        "literals": [
          "solidity",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 564,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 565,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 2313,
        "src": "59:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 566,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 1052,
        "src": "144:79:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/common/IStartrailRegistry.sol",
        "file": "../../common/IStartrailRegistry.sol",
        "id": 567,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 252,
        "src": "224:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/lib/contracts/IDGenerator.sol",
        "file": "../../lib/contracts/IDGenerator.sol",
        "id": 568,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 340,
        "src": "270:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/lib/contracts/Signature.sol",
        "file": "../../lib/contracts/Signature.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 354,
        "src": "316:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/common/IRootLogic.sol",
        "file": "../../common/IRootLogic.sol",
        "id": 570,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 224,
        "src": "360:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/common/IStartrailValidator.sol",
        "file": "../../common/IStartrailValidator.sol",
        "id": 571,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 308,
        "src": "398:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/name/contracts/NameRegistry.sol",
        "file": "../../name/contracts/NameRegistry.sol",
        "id": 572,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 505,
        "src": "445:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/rinkeby/startrail/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 573,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 378,
        "src": "493:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 574,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1051,
              "src": "571:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$1051",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "571:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 576,
              "name": "ERC721UpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2312,
              "src": "593:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721UpgradeSafe_$2312",
                "typeString": "contract ERC721UpgradeSafe"
              }
            },
            "id": 577,
            "nodeType": "InheritanceSpecifier",
            "src": "593:17:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 578,
              "name": "IStartrailRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 251,
              "src": "614:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailRegistry_$251",
                "typeString": "contract IStartrailRegistry"
              }
            },
            "id": 579,
            "nodeType": "InheritanceSpecifier",
            "src": "614:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 580,
              "name": "IStartrailValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 307,
              "src": "636:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailValidator_$307",
                "typeString": "contract IStartrailValidator"
              }
            },
            "id": 581,
            "nodeType": "InheritanceSpecifier",
            "src": "636:19:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 582,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "659:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$377",
                "typeString": "contract Contracts"
              }
            },
            "id": 583,
            "nodeType": "InheritanceSpecifier",
            "src": "659:9:8"
          }
        ],
        "contractDependencies": [
          251,
          307,
          377,
          846,
          921,
          1051,
          1126,
          1138,
          2312,
          2420,
          2448,
          2472
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 801,
        "linearizedBaseContracts": [
          801,
          377,
          307,
          251,
          2312,
          2448,
          2472,
          2420,
          1126,
          1138,
          1051,
          846,
          921
        ],
        "name": "StartrailRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 585,
            "mutability": "mutable",
            "name": "idNonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "705:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "705:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 587,
            "mutability": "mutable",
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "757:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 586,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "757:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "852:30:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 592,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "865:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "858:19:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7a6ce2e1",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMsgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 596,
                  "src": "843:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "842:9:8"
            },
            "scope": 801,
            "src": "798:84:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1199:155:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1205:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "1228:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1205:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1256:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1246:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:11:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1295:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1301:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1263:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__ERC721_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1435,
                      "src": "1263:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:45:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "OwnableUpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "1314:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeSafe_$1051_$",
                          "typeString": "type(contract OwnableUpgradeSafe)"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__Ownable_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "1314:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:35:8"
                }
              ]
            },
            "documentation": {
              "id": 597,
              "nodeType": "StructuredDocumentation",
              "src": "886:191:8",
              "text": " @dev Initializes the StartrailRegistry\n @param name string of the name\n @param symbol string of the symbol\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "077f224a",
            "id": 629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 605,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 894,
                  "src": "1187:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:11:8"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1105:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1129:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1155:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:80:8"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:8"
            },
            "scope": 801,
            "src": "1080:274:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              234
            ],
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1580:216:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 642,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1586:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1597:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1586:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:12:8"
                },
                {
                  "assignments": [
                    647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 671,
                      "src": "1604:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:15:8"
                },
                {
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "1628:54:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 649,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "1636:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 652,
                                "name": "idNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "1667:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "IDGenerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "1646:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDGenerator_$339_$",
                                  "typeString": "type(library IDGenerator)"
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "generate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 338,
                              "src": "1646:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1646:29:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1636:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1636:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1716:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1690:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "1690:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 661,
                  "nodeType": "DoWhileStatement",
                  "src": "1625:101:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "1755:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1763:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1731:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2026,
                      "src": "1731:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:40:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "1784:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 670,
                  "nodeType": "Return",
                  "src": "1777:14:8"
                }
              ]
            },
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "1358:100:8",
              "text": " @dev Creates a new StartrailRegistryRecordID\n @param sender address of the sender"
            },
            "functionSelector": "6a627842",
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 636,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "1535:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "1521:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1521:34:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 634,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1508:8:8"
            },
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1475:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:16:8"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1569:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1568:9:8"
            },
            "scope": 801,
            "src": "1461:335:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              243
            ],
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "2175:296:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "2222:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "ERC721UpgradeSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "2196:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                              "typeString": "type(contract ERC721UpgradeSafe)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1883,
                          "src": "2196:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2196:34:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2238:46:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2181:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:109:8"
                },
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 717,
                      "src": "2296:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2338:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2312:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "2312:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2296:50:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "2360:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "2368:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2360:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:38:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        },
                        "value": "ERC721: transfer caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2352:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:62:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 712,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2448:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "2454:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2458:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2420:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2165,
                      "src": "2420:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:46:8"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "1800:235:8",
              "text": " @dev Transfers the ownership of a given SRR ID to another address.\n @param from address of the current owner\n @param to address to receive the ownership\n @param tokenId uint256 ID of the SRR to be transferred"
            },
            "functionSelector": "109a037a",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 683,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2154:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 685,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 682,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "2140:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:34:8"
              }
            ],
            "name": "transferSRRFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 681,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2131:8:8"
            },
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2068:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2086:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2102:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:59:8"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2175:0:8"
            },
            "scope": 801,
            "src": "2038:433:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "2669:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "2675:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 727,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "2698:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2675:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:35:8"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "2475:127:8",
              "text": " @dev Sets the address of the NameRegistry contract\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "ddb8e350",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 723,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 996,
                  "src": "2659:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2659:9:8"
              }
            ],
            "name": "setNameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "2630:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2629:22:8"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:8"
            },
            "scope": 801,
            "src": "2605:110:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "2882:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 737,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2895:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 736,
                  "id": 739,
                  "nodeType": "Return",
                  "src": "2888:26:8"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "2719:99:8",
              "text": " @dev Gets the endpoint address of the RootLogic\n @return RootLogic proxy address"
            },
            "functionSelector": "0bdd4f50",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2849:2:8"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 741,
                  "src": "2873:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2872:9:8"
            },
            "scope": 801,
            "src": "2821:98:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "3091:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 747,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "3104:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 748,
                  "nodeType": "Return",
                  "src": "3097:27:8"
                }
              ]
            },
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "2923:101:8",
              "text": " @dev Gets the endpoint address of NameRegistry\n @return NameRegistry proxy address"
            },
            "functionSelector": "62b9bdc2",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:8"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 750,
                  "src": "3082:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:9:8"
            },
            "scope": 801,
            "src": "3027:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              250
            ],
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "3355:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 761,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "3394:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "3368:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "3368:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "3361:41:8"
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "3133:122:8",
              "text": " @dev Gets the owner address of the SRR\n @param tokenId uint256 of the SRR ID\n @return owner address"
            },
            "functionSelector": "5f915423",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSRROwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3313:8:8"
            },
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3279:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:17:8"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3344:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3343:9:8"
            },
            "scope": 801,
            "src": "3258:149:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "3551:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 771,
                    "name": "idNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "3564:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 770,
                  "id": 772,
                  "nodeType": "Return",
                  "src": "3557:14:8"
                }
              ]
            },
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "3411:85:8",
              "text": " @dev Gets the nonce from the storage\n @return idNonce from storage"
            },
            "functionSelector": "e36a3509",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdNonce",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:2:8"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 774,
                  "src": "3542:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3541:9:8"
            },
            "scope": 801,
            "src": "3499:77:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "3641:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3667:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 779,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "3654:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$504_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 782,
                  "nodeType": "Return",
                  "src": "3647:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3602:2:8"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 784,
                  "src": "3627:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$504",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 776,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 504,
                    "src": "3627:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:14:8"
            },
            "scope": 801,
            "src": "3580:113:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "3757:98:8",
              "statements": [
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 799,
                      "src": "3763:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3763:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3810:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 791,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "3790:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$504_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$504",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 454,
                      "src": "3790:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint8_$returns$_t_address_$",
                        "typeString": "function (uint8) view external returns (address)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 797,
                    "name": "rootLogicAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 790,
                    "src": "3834:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "3827:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:8"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 800,
                  "src": "3748:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3747:9:8"
            },
            "scope": 801,
            "src": "3697:158:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 802,
        "src": "539:4670:8"
      }
    ],
    "src": "0:5210:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.11+commit.5ef660b1.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {
        "IDGenerator": "0xa52Ef8B88162B813A897ee33a5afe5a2D5CB0015"
      },
      "address": "0x8294d829058947d14146B449BE0910C7063390C8",
      "transactionHash": "0x45925f08d53cce5b7c3259665724652fb34850278e210fc93faa8f728ea448ba"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-23T04:48:20.306Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "getIdNonce()": {
        "details": "Gets the nonce from the storage",
        "returns": {
          "_0": "idNonce from storage"
        }
      },
      "getNameRegistryAddress()": {
        "details": "Gets the endpoint address of NameRegistry",
        "returns": {
          "_0": "NameRegistry proxy address"
        }
      },
      "getRootLogicAddress()": {
        "details": "Gets the endpoint address of the RootLogic",
        "returns": {
          "_0": "RootLogic proxy address"
        }
      },
      "getSRROwner(uint256)": {
        "details": "Gets the owner address of the SRR",
        "params": {
          "tokenId": "uint256 of the SRR ID"
        },
        "returns": {
          "_0": "owner address"
        }
      },
      "initialize(string,string,address)": {
        "details": "Initializes the StartrailRegistry",
        "params": {
          "name": "string of the name",
          "nameRegistry": "address of the NameRegistry contract",
          "symbol": "string of the symbol"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "mint(address)": {
        "details": "Creates a new StartrailRegistryRecordID",
        "params": {
          "sender": "address of the sender"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "setNameRegistry(address)": {
        "details": "Sets the address of the NameRegistry contract",
        "params": {
          "nameRegistry": "address of the NameRegistry contract"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |=== Requirements: - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferSRRFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given SRR ID to another address.",
        "params": {
          "from": "address of the current owner",
          "to": "address to receive the ownership",
          "tokenId": "uint256 ID of the SRR to be transferred"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}