{
  "contractName": "StartrailRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_PROXY",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "BULK_ISSUE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "LICENSED_USER_EVENT",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "LICENSED_USER_LOGIC",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "LICENSED_USER_WALLET_FACTORY",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ROOT_LOGIC",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "STARTRAIL_REGISTRY",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMsgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferSRRFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "setNameRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootLogicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getNameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSRROwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getIdNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_PROXY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BULK_ISSUE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LICENSED_USER_EVENT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LICENSED_USER_LOGIC\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LICENSED_USER_WALLET_FACTORY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_LOGIC\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STARTRAIL_REGISTRY\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIdNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMsgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootLogicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSRROwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"setNameRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferSRRFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"getIdNonce()\":{\"details\":\"Gets the nonce from the storage\",\"returns\":{\"_0\":\"idNonce from storage\"}},\"getNameRegistryAddress()\":{\"details\":\"Gets the endpoint address of NameRegistry\",\"returns\":{\"_0\":\"NameRegistry proxy address\"}},\"getRootLogicAddress()\":{\"details\":\"Gets the endpoint address of the RootLogic\",\"returns\":{\"_0\":\"RootLogic proxy address\"}},\"getSRROwner(uint256)\":{\"details\":\"Gets the owner address of the SRR\",\"params\":{\"tokenId\":\"uint256 of the SRR ID\"},\"returns\":{\"_0\":\"owner address\"}},\"initialize(string,string,address)\":{\"details\":\"Initializes the StartrailRegistry\",\"params\":{\"name\":\"string of the name\",\"nameRegistry\":\"address of the NameRegistry contract\",\"symbol\":\"string of the symbol\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"mint(address)\":{\"details\":\"Creates a new StartrailRegistryRecordID\",\"params\":{\"sender\":\"address of the sender\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"setNameRegistry(address)\":{\"details\":\"Sets the address of the NameRegistry contract\",\"params\":{\"nameRegistry\":\"address of the NameRegistry contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |=== Requirements: - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferSRRFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given SRR ID to another address.\",\"params\":{\"from\":\"address of the current owner\",\"to\":\"address to receive the ownership\",\"tokenId\":\"uint256 ID of the SRR to be transferred\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/hasnaeen/startbahn/dev/startrail/app/token/contracts/StartrailRegistry.sol\":\"StartrailRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hasnaeen/startbahn/dev/startrail/app/common/IRootLogic.sol\":{\"keccak256\":\"0x03a5ea72ab3345ef72d6afcdc625f38f9a75917cfdc0c1519863b80550891b9c\",\"urls\":[\"bzz-raw://2cecaa7596ac28de297ab83281460aef24d7900b8d0a33ad9e6b2ed671793944\",\"dweb:/ipfs/QmaPn1pzKwhYh8F1xxWagkH5myPekCp4mXAxaL3gN7mtw4\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/common/IStartrailRegistry.sol\":{\"keccak256\":\"0x610ac64dd93305b4b331d14f2fbd0e47777a65a8f61268bfce43aa3c1547b1f7\",\"urls\":[\"bzz-raw://e68e4b11202b6c6cd39278c6002d183acc61ef5f44aeaafe2eb163a246b4ff9c\",\"dweb:/ipfs/Qmf6jEktqgEz5xrm1qJso9Q7ucHxjQwb3inzeqVkDMactC\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/common/IStartrailValidator.sol\":{\"keccak256\":\"0xbb0549391f14b502243ba17136ab8fec3cddb96f967beb2f26e9bd4cf3ef1c19\",\"urls\":[\"bzz-raw://910d776ed901f44f7973001d84e30ff6f0eb0df289f3f68f481774d28b39336d\",\"dweb:/ipfs/QmdHATXy8V5fJC4M2oSojLsqdauDJkrGhNh1xFZG7kfsLm\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/lib/contracts/IDGenerator.sol\":{\"keccak256\":\"0xec92d387ada7bb34e0bf804961d2b5df52cbd25c3a53182cc5345b89b25333ee\",\"urls\":[\"bzz-raw://7829677a43aa2e34a6eb3243d38d4c5bfe7b343e9d7920eb0bc4a598c5cbb735\",\"dweb:/ipfs/QmZRREFQA5y9ReHM2b5ZkpE2dXS7oYWZ7m6kpC2R1VB4Wk\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/lib/contracts/Signature.sol\":{\"keccak256\":\"0xadccb0f6488359996554a1c5ea36b6323b9b72891dc3466751ad31e505d3a169\",\"urls\":[\"bzz-raw://f0462fab2c3ef530ad2f05b00d699800bff3f1f71c2d6e6421e21f9d865db1f1\",\"dweb:/ipfs/Qmd4dBNXNdLd2XcrEYDB2RvWC57R1RbyXK7PWvp3Vo5k4r\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/name/contracts/Contracts.sol\":{\"keccak256\":\"0xaa70fda1f470c6579ce57fc393d769a947a11e73998dccccc99a30ce5e50dfc0\",\"urls\":[\"bzz-raw://56289e068af8f3b369bc896d6e24fd018b29b03a55a339d463cf375d77ec88a9\",\"dweb:/ipfs/QmNzX5N5CbqkNcF28nGoC6gySsznYpHggtyk2omqWJCNKX\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/name/contracts/NameRegistry.sol\":{\"keccak256\":\"0x3a37cc9826cb8f421d673ff6c0b1f056b49fc0f8880be5e4e0be45c7b41b0198\",\"urls\":[\"bzz-raw://98538f09427a0685d718317f7634903f6cf4bf450f98b60091ba4f6742067304\",\"dweb:/ipfs/QmZt5kHh4DoCtbYpw7xQm7ar4Q5EZpzew5WnGjUfACWg3X\"]},\"/Users/hasnaeen/startbahn/dev/startrail/app/token/contracts/StartrailRegistry.sol\":{\"keccak256\":\"0x40235bd4cee62336999949f2e4a2262e433fb1b024895d9d2567447f6367e429\",\"urls\":[\"bzz-raw://e529d941c11c031c649518df7b66255244b2a897260e6ac2c43088d745b2c7d7\",\"dweb:/ipfs/QmcVLJjj36mWwq5hYmVb6FMb3gGn3LnvSEj7PTHDps1ju6\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xe81686511d62f18b2d9c693c2c94c0a789c690de63aa90e15451ebf65c5bfd3e\",\"urls\":[\"bzz-raw://1332ee1d2b096456bf2e5795b5871d0fed47be6a31c9a2f2cef9206a299565ea\",\"dweb:/ipfs/Qmdu1847Y4UL3gTjbLUManMGfxYEoyGPSodM3Br89SKzwx\"]},\"@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\":{\"keccak256\":\"0x04a69a78363214b4e3055db8e620bed222349f0c81e9d1cbe769eb849b69b73f\",\"urls\":[\"bzz-raw://b3115459376196d6c2c3817439c169d9b052b27b70e8ee2e28963cda760736da\",\"dweb:/ipfs/QmXaNF5rmcDSAzBiFMQjf979qb9xNXqD9eZtgo4uM9VEis\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd1778eb2a00f482020d0298305421371eb6487ca0d7d05d9e2b91c353e53f47f\",\"urls\":[\"bzz-raw://1d8c81a9961cf1c95a3bca7ae896c8446f8627bfff1f0caf32254d75d3e03c07\",\"dweb:/ipfs/QmeRL8Se6J1rTnwtZpgn3LcA1jQ7gr4td7YmgdaWZH5oxD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5b08ef130698e8270f01c481f687a470e436080bafdbfa33abbf6467c1adb619\",\"urls\":[\"bzz-raw://1f2c7f80b2f7038c3a90808883871a1d424c4ea725fc4e61aaf9cbcb2a7656fb\",\"dweb:/ipfs/QmZZ17KkLWGz5BsjZwakC6mG2Y4Lnn5pGxjzPvYceoYVeg\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x734b5bedb78074a59bca6aff9e5a1801c9c7e9c5314daf32e14857161fb36932\",\"urls\":[\"bzz-raw://4574e71185f6693eb5cdf7a5126fba97caf0ec0366b08290dd361af44b3414d3\",\"dweb:/ipfs/QmTPBh1R3EU973H7h6D1kQ1XBA1oX2QdSHZACyytWUYKsn\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa0237f846362c88efa0b2a5815e5cf95cf58c1f9acf654fa6e57f62090fdc92d\",\"urls\":[\"bzz-raw://ed15922f47d283422ed74b3ed7ff4c8df4831d7611953b5c970f460bf2215e3c\",\"dweb:/ipfs/QmaNLi68QwwZhENcbM6D5GP6Yp3xC8fQY7gEMXvWES92uK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfd5cf8319cb84ca04ea407d6fba686d53ad7f5d2bf476f41678f5a751d12a7ea\",\"urls\":[\"bzz-raw://45b75b553c4a9053429609b1c3db481f1728ca00448f01acc4065249bbf87adc\",\"dweb:/ipfs/QmRZH6QM32mJn1GZCAPXUQtBz65H4kk6DsGQbGNo4ZNPy9\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd1d78b1c8534fbcf8fdc8fbfec9133df142ef8cae9ae820929dfe6d80d2c790a\",\"urls\":[\"bzz-raw://193a827fbe83fa83c4cabb172dc438dd45c50253858a1f2bf56e8f9a2d548386\",\"dweb:/ipfs/QmbWBHwHv7CyHSZY6jxnaDiHWGEEyVb8LeGdRpWXUjaiBr\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x1efcb1ccef6b3bce65467c4b704cec8d0582e35ff48352269ba8cda4b54ae3da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40d4c72c7f8dfdfb9fd048de5d3ece0020dfcd057b29f0630fd703e7fbe7301\",\"dweb:/ipfs/QmSw7Q9JVVbVDWwVbaJjHhkPmTm8GF3nwVTZUfnmPqTdNm\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614615806100206000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c8063616412f8116101255780638da5cb5b116100ad578063c87b56dd1161007c578063c87b56dd14610631578063ddb8e35014610661578063e36a35091461067d578063e985e9c51461069b578063f2fde38b146106cb5761021c565b80638da5cb5b146105bd57806395d89b41146105db578063a22cb465146105f9578063b88d4fde146106155761021c565b80636c0360eb116100f45780636c0360eb146105295780636d3cb6921461054757806370a0823114610565578063715018a6146105955780637a6ce2e11461059f5761021c565b8063616412f81461048d57806362b9bdc2146104ab5780636352211e146104c95780636a627842146104f95761021c565b80631c21bab0116101a8578063338023e911610177578063338023e9146103d557806342842e0e146103f35780634f6ccce71461040f578063566d68961461043f5780635f9154231461045d5761021c565b80631c21bab01461034d57806323b872dd1461036b5780632f745c5914610387578063326f5948146103b75761021c565b8063095ea7b3116101ef578063095ea7b3146102bb57806309f271b0146102d75780630bdd4f50146102f5578063109a037a1461031357806318160ddd1461032f5761021c565b806301ffc9a71461022157806306fdde0314610251578063077f224a1461026f578063081812fc1461028b575b600080fd5b61023b60048036038101906102369190613574565b6106e7565b6040516102489190614086565b60405180910390f35b61025961074f565b60405161026691906140a1565b60405180910390f35b610289600480360381019061028491906135c6565b6107f1565b005b6102a560048036038101906102a09190613645565b610938565b6040516102b2919061401f565b60405180910390f35b6102d560048036038101906102d09190613538565b6109bd565b005b6102df610ad5565b6040516102ec91906140a1565b60405180910390f35b6102fd610b0e565b60405161030a919061401f565b60405180910390f35b61032d60048036038101906103289190613432565b610b1d565b005b610337610c68565b604051610344919061437e565b60405180910390f35b610355610c79565b60405161036291906140a1565b60405180910390f35b61038560048036038101906103809190613432565b610cb2565b005b6103a1600480360381019061039c9190613538565b610d12565b6040516103ae919061437e565b60405180910390f35b6103bf610d6d565b6040516103cc91906140a1565b60405180910390f35b6103dd610da6565b6040516103ea91906140a1565b60405180910390f35b61040d60048036038101906104089190613432565b610ddf565b005b61042960048036038101906104249190613645565b610dff565b604051610436919061437e565b60405180910390f35b610447610e22565b60405161045491906140a1565b60405180910390f35b61047760048036038101906104729190613645565b610e5b565b604051610484919061401f565b60405180910390f35b610495610e6d565b6040516104a291906140a1565b60405180910390f35b6104b3610ea6565b6040516104c0919061401f565b60405180910390f35b6104e360048036038101906104de9190613645565b610ed0565b6040516104f0919061401f565b60405180910390f35b610513600480360381019061050e91906133a4565b610f07565b604051610520919061437e565b60405180910390f35b61053161103f565b60405161053e91906140a1565b60405180910390f35b61054f6110e1565b60405161055c91906140a1565b60405180910390f35b61057f600480360381019061057a91906133a4565b61111a565b60405161058c919061437e565b60405180910390f35b61059d6111d9565b005b6105a7611331565b6040516105b4919061401f565b60405180910390f35b6105c5611340565b6040516105d2919061401f565b60405180910390f35b6105e361136a565b6040516105f091906140a1565b60405180910390f35b610613600480360381019061060e91906134fc565b61140c565b005b61062f600480360381019061062a9190613481565b61158d565b005b61064b60048036038101906106469190613645565b6115ef565b60405161065891906140a1565b60405180910390f35b61067b600480360381019061067691906133a4565b61177a565b005b610685611855565b604051610692919061437e565b60405180910390f35b6106b560048036038101906106b091906133f6565b61185f565b6040516106c29190614086565b60405180910390f35b6106e560048036038101906106e091906133a4565b6118f3565b005b600060976000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060ce8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050905090565b600060019054906101000a900460ff1680610810575061080f611aba565b5b8061082757506000809054906101000a900460ff16155b610866576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085d90614283565b60405180910390fd5b60008060019054906101000a900460ff1615905080156108b6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8160fc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160fb819055506109098484611ad1565b610911611bd6565b80156109325760008060016101000a81548160ff0219169083151502179055505b50505050565b600061094382611ccf565b610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990614243565b60405180910390fd5b60cc600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006109c882610ed0565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a30906142e3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610a58611cec565b73ffffffffffffffffffffffffffffffffffffffff161480610a875750610a8681610a81611cec565b61185f565b5b610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd906141c3565b60405180910390fd5b610ad08383611cf4565b505050565b6040518060400160405280601281526020017f53544152545241494c5f5245474953545259000000000000000000000000000081525081565b6000610b18611dad565b905090565b610b25611dad565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90614343565b60405180910390fd5b610b9c82611ccf565b610bdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd2906141a3565b60405180910390fd5b6000610be683610ed0565b90508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90614323565b60405180910390fd5b610c61858585611e7e565b5050505050565b6000610c7460ca612095565b905090565b6040518060400160405280601c81526020017f4c4943454e5345445f555345525f57414c4c45545f464143544f52590000000081525081565b610cc3610cbd611cec565b826120aa565b610d02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf990614303565b60405180910390fd5b610d0d838383611e7e565b505050565b6000610d658260c960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061218890919063ffffffff16565b905092915050565b6040518060400160405280600b81526020017f41444d494e5f50524f585900000000000000000000000000000000000000000081525081565b6040518060400160405280600a81526020017f524f4f545f4c4f4749430000000000000000000000000000000000000000000081525081565b610dfa8383836040518060200160405280600081525061158d565b505050565b600080610e168360ca6121a290919063ffffffff16565b50905080915050919050565b6040518060400160405280601381526020017f4c4943454e5345445f555345525f4556454e540000000000000000000000000081525081565b6000610e6682610ed0565b9050919050565b6040518060400160405280600a81526020017f42554c4b5f49535355450000000000000000000000000000000000000000000081525081565b600060fc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610f00826040518060600160405280602981526020016145b76029913960ca6121d19092919063ffffffff16565b9050919050565b6000610f11611dad565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7690614343565b60405180910390fd5b600160fb6000828254019250508190555060005b73__IDGenerator___________________________634a7dd52360fb546040518263ffffffff1660e01b8152600401610fcc9190614363565b60206040518083038186803b158015610fe457600080fd5b505af4158015610ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101c919061366e565b905061102781611ccf565b610f935761103584826121f0565b8092505050919050565b606060d18054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110d75780601f106110ac576101008083540402835291602001916110d7565b820191906000526020600020905b8154815290600101906020018083116110ba57829003601f168201915b5050505050905090565b6040518060400160405280601381526020017f4c4943454e5345445f555345525f4c4f4749430000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561118b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611182906141e3565b60405180910390fd5b6111d260c960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061237e565b9050919050565b6111e1611cec565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611270576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126790614263565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061133b611cec565b905090565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060cf8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114025780601f106113d757610100808354040283529160200191611402565b820191906000526020600020905b8154815290600101906020018083116113e557829003601f168201915b5050505050905090565b611414611cec565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147990614183565b60405180910390fd5b8060cd600061148f611cec565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff1661153c611cec565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115819190614086565b60405180910390a35050565b61159e611598611cec565b836120aa565b6115dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d490614303565b60405180910390fd5b6115e984848484612393565b50505050565b60606115fa82611ccf565b611639576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611630906142c3565b60405180910390fd5b606060d060008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116e25780601f106116b7576101008083540402835291602001916116e2565b820191906000526020600020905b8154815290600101906020018083116116c557829003601f168201915b50505050509050600060d180546001816001161561010002031660029004905014156117115780915050611775565b6000815111156117465760d18160405160200161172f929190613ffb565b604051602081830303815290604052915050611775565b60d1611751846123ef565b604051602001611762929190613ffb565b6040516020818303038152906040529150505b919050565b611782611cec565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180890614263565b60405180910390fd5b8060fc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060fb54905090565b600060cd60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6118fb611cec565b73ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461198a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198190614263565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f190614103565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff1680611af05750611aef611aba565b5b80611b0757506000809054906101000a900460ff16155b611b46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3d90614283565b60405180910390fd5b60008060019054906101000a900460ff161590508015611b96576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611b9e612536565b611ba661261f565b611bb08383612718565b8015611bd15760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680611bf55750611bf4611aba565b5b80611c0c57506000809054906101000a900460ff16155b611c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c4290614283565b60405180910390fd5b60008060019054906101000a900460ff161590508015611c9b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611ca3612536565b611cab612861565b8015611ccc5760008060016101000a81548160ff0219169083151502179055505b50565b6000611ce58260ca6129f390919063ffffffff16565b9050919050565b600033905090565b8160cc600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16611d6783610ed0565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611db8612a0d565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280600a81526020017f524f4f545f4c4f474943000000000000000000000000000000000000000000008152506040518263ffffffff1660e01b8152600401611e2591906140a1565b60206040518083038186803b158015611e3d57600080fd5b505afa158015611e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7591906133cd565b90508091505090565b8273ffffffffffffffffffffffffffffffffffffffff16611e9e82610ed0565b73ffffffffffffffffffffffffffffffffffffffff1614611ef4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eeb906142a3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5b90614163565b60405180910390fd5b611f6f838383612a37565b611f7a600082611cf4565b611fcb8160c960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a3c90919063ffffffff16565b5061201d8160c960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a5690919063ffffffff16565b50612034818360ca612a709092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006120a382600001612aa5565b9050919050565b60006120b582611ccf565b6120f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120eb906141a3565b60405180910390fd5b60006120ff83610ed0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061216e57508373ffffffffffffffffffffffffffffffffffffffff1661215684610938565b73ffffffffffffffffffffffffffffffffffffffff16145b8061217f575061217e818561185f565b5b91505092915050565b60006121978360000183612ab6565b60001c905092915050565b6000806000806121b58660000186612b23565b915091508160001c8160001c8090509350935050509250929050565b60006121e4846000018460001b84612ba6565b60001c90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161225790614223565b60405180910390fd5b61226981611ccf565b156122a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a090614143565b60405180910390fd5b6122b560008383612a37565b6123068160c960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a5690919063ffffffff16565b5061231d818360ca612a709092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600061238c82600001612c37565b9050919050565b61239e848484611e7e565b6123aa84848484612c48565b6123e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123e0906140e3565b60405180910390fd5b50505050565b60606000821415612437576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612531565b600082905060005b60008214612461578080600101915050600a828161245957fe5b04915061243f565b60608167ffffffffffffffff8111801561247a57600080fd5b506040519080825280601f01601f1916602001820160405280156124ad5781602001600182028036833780820191505090505b50905060006001830390508593505b6000841461252957600a84816124ce57fe5b0660300160f81b828280600190039350815181106124e857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a848161252157fe5b0493506124bc565b819450505050505b919050565b600060019054906101000a900460ff16806125555750612554611aba565b5b8061256c57506000809054906101000a900460ff16155b6125ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125a290614283565b60405180910390fd5b60008060019054906101000a900460ff1615905080156125fb576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561261c5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061263e575061263d611aba565b5b8061265557506000809054906101000a900460ff16155b612694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268b90614283565b60405180910390fd5b60008060019054906101000a900460ff1615905080156126e4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6126f46301ffc9a760e01b612e29565b80156127155760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806127375750612736611aba565b5b8061274e57506000809054906101000a900460ff16155b61278d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161278490614283565b60405180910390fd5b60008060019054906101000a900460ff1615905080156127dd576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8260ce90805190602001906127f39291906131c4565b508160cf908051906020019061280a9291906131c4565b5061281b6380ac58cd60e01b612e29565b61282b635b5e139f60e01b612e29565b61283b63780e9d6360e01b612e29565b801561285c5760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680612880575061287f611aba565b5b8061289757506000809054906101000a900460ff16155b6128d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128cd90614283565b60405180910390fd5b60008060019054906101000a900460ff161590508015612926576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000612930611cec565b905080606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080156129f05760008060016101000a81548160ff0219169083151502179055505b50565b6000612a05836000018360001b612eff565b905092915050565b600060fc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b505050565b6000612a4e836000018360001b612f22565b905092915050565b6000612a68836000018360001b61300a565b905092915050565b6000612a9c846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b61307a565b90509392505050565b600081600001805490509050919050565b600081836000018054905011612b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612af8906140c3565b60405180910390fd5b826000018281548110612b1057fe5b9060005260206000200154905092915050565b60008082846000018054905011612b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b6690614203565b60405180910390fd5b6000846000018481548110612b8057fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390612c08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bff91906140a1565b60405180910390fd5b50846000016001820381548110612c1b57fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000612c698473ffffffffffffffffffffffffffffffffffffffff16613156565b612c765760019050612e21565b600060608573ffffffffffffffffffffffffffffffffffffffff1663150b7a0260e01b612ca1611cec565b898888604051602401612cb7949392919061403a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051612d219190613fe4565b6000604051808303816000865af19150503d8060008114612d5e576040519150601f19603f3d011682016040523d82523d6000602084013e612d63565b606091505b509150915081612dbb57600081511115612d805780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db2906140e3565b60405180910390fd5b600081806020019051810190612dd1919061359d565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161493505050505b949350505050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415612e92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e8990614123565b60405180910390fd5b600160976000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114612ffe5760006001820390506000600186600001805490500390506000866000018281548110612f6d57fe5b9060005260206000200154905080876000018481548110612f8a57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480612fc257fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050613004565b60009150505b92915050565b600061301683836131a1565b61306f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050613074565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156131215784600001604051806040016040528086815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050846000018054905085600101600086815260200190815260200160002081905550600191505061314f565b8285600001600183038154811061313457fe5b90600052602060002090600202016001018190555060009150505b9392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561319857506000801b8214155b92505050919050565b600080836001016000848152602001908152602001600020541415905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061320557805160ff1916838001178555613233565b82800160010185558215613233579182015b82811115613232578251825591602001919060010190613217565b5b5090506132409190613244565b5090565b61326691905b8082111561326257600081600090555060010161324a565b5090565b90565b6000813590506132788161455a565b92915050565b60008151905061328d8161455a565b92915050565b6000813590506132a281614571565b92915050565b6000813590506132b781614588565b92915050565b6000815190506132cc81614588565b92915050565b600082601f8301126132e357600080fd5b81356132f66132f1826143c6565b614399565b9150808252602083016020830185838301111561331257600080fd5b61331d838284614507565b50505092915050565b600082601f83011261333757600080fd5b813561334a613345826143f2565b614399565b9150808252602083016020830185838301111561336657600080fd5b613371838284614507565b50505092915050565b6000813590506133898161459f565b92915050565b60008151905061339e8161459f565b92915050565b6000602082840312156133b657600080fd5b60006133c484828501613269565b91505092915050565b6000602082840312156133df57600080fd5b60006133ed8482850161327e565b91505092915050565b6000806040838503121561340957600080fd5b600061341785828601613269565b925050602061342885828601613269565b9150509250929050565b60008060006060848603121561344757600080fd5b600061345586828701613269565b935050602061346686828701613269565b92505060406134778682870161337a565b9150509250925092565b6000806000806080858703121561349757600080fd5b60006134a587828801613269565b94505060206134b687828801613269565b93505060406134c78782880161337a565b925050606085013567ffffffffffffffff8111156134e457600080fd5b6134f0878288016132d2565b91505092959194509250565b6000806040838503121561350f57600080fd5b600061351d85828601613269565b925050602061352e85828601613293565b9150509250929050565b6000806040838503121561354b57600080fd5b600061355985828601613269565b925050602061356a8582860161337a565b9150509250929050565b60006020828403121561358657600080fd5b6000613594848285016132a8565b91505092915050565b6000602082840312156135af57600080fd5b60006135bd848285016132bd565b91505092915050565b6000806000606084860312156135db57600080fd5b600084013567ffffffffffffffff8111156135f557600080fd5b61360186828701613326565b935050602084013567ffffffffffffffff81111561361e57600080fd5b61362a86828701613326565b925050604061363b86828701613269565b9150509250925092565b60006020828403121561365757600080fd5b60006136658482850161337a565b91505092915050565b60006020828403121561368057600080fd5b600061368e8482850161338f565b91505092915050565b6136a081614493565b82525050565b6136af81614481565b82525050565b6136be816144a5565b82525050565b60006136cf82614433565b6136d98185614449565b93506136e9818560208601614516565b6136f281614549565b840191505092915050565b600061370882614433565b613712818561445a565b9350613722818560208601614516565b80840191505092915050565b60006137398261443e565b6137438185614465565b9350613753818560208601614516565b61375c81614549565b840191505092915050565b60006137728261443e565b61377c8185614476565b935061378c818560208601614516565b80840191505092915050565b6000815460018116600081146137b557600181146137da5761381e565b607f60028304166137c68187614476565b955060ff198316865280860193505061381e565b600282046137e88187614476565b95506137f38561441e565b60005b82811015613815578154818901526001820191506020810190506137f6565b82880195505050505b505092915050565b6000613833602283614465565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613899603283614465565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b60006138ff602683614465565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613965601c83614465565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006139a5601c83614465565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b60006139e5602483614465565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a4b601983614465565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000613a8b602c83614465565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000613af1603883614465565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613b57602a83614465565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613bbd602283614465565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613c23602083614465565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000613c63602c83614465565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000613cc9602083614465565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000613d09602e83614465565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6000613d6f602983614465565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613dd5602f83614465565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613e3b602183614465565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613ea1603183614465565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613f07602483614465565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613f6d602883614465565b91507f5468652073656e646572206973206e6f742074686520526f6f744c6f6769632060008301527f636f6e74726163740000000000000000000000000000000000000000000000006020830152604082019050919050565b613fcf816144fd565b82525050565b613fde816144fd565b82525050565b6000613ff082846136fd565b915081905092915050565b60006140078285613798565b91506140138284613767565b91508190509392505050565b600060208201905061403460008301846136a6565b92915050565b600060808201905061404f6000830187613697565b61405c60208301866136a6565b6140696040830185613fc6565b818103606083015261407b81846136c4565b905095945050505050565b600060208201905061409b60008301846136b5565b92915050565b600060208201905081810360008301526140bb818461372e565b905092915050565b600060208201905081810360008301526140dc81613826565b9050919050565b600060208201905081810360008301526140fc8161388c565b9050919050565b6000602082019050818103600083015261411c816138f2565b9050919050565b6000602082019050818103600083015261413c81613958565b9050919050565b6000602082019050818103600083015261415c81613998565b9050919050565b6000602082019050818103600083015261417c816139d8565b9050919050565b6000602082019050818103600083015261419c81613a3e565b9050919050565b600060208201905081810360008301526141bc81613a7e565b9050919050565b600060208201905081810360008301526141dc81613ae4565b9050919050565b600060208201905081810360008301526141fc81613b4a565b9050919050565b6000602082019050818103600083015261421c81613bb0565b9050919050565b6000602082019050818103600083015261423c81613c16565b9050919050565b6000602082019050818103600083015261425c81613c56565b9050919050565b6000602082019050818103600083015261427c81613cbc565b9050919050565b6000602082019050818103600083015261429c81613cfc565b9050919050565b600060208201905081810360008301526142bc81613d62565b9050919050565b600060208201905081810360008301526142dc81613dc8565b9050919050565b600060208201905081810360008301526142fc81613e2e565b9050919050565b6000602082019050818103600083015261431c81613e94565b9050919050565b6000602082019050818103600083015261433c81613efa565b9050919050565b6000602082019050818103600083015261435c81613f60565b9050919050565b60006020820190506143786000830184613fd5565b92915050565b60006020820190506143936000830184613fc6565b92915050565b6000604051905081810181811067ffffffffffffffff821117156143bc57600080fd5b8060405250919050565b600067ffffffffffffffff8211156143dd57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561440957600080fd5b601f19601f8301169050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061448c826144dd565b9050919050565b600061449e826144dd565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015614534578082015181840152602081019050614519565b83811115614543576000848401525b50505050565b6000601f19601f8301169050919050565b61456381614481565b811461456e57600080fd5b50565b61457a816144a5565b811461458557600080fd5b50565b614591816144b1565b811461459c57600080fd5b50565b6145a8816144fd565b81146145b357600080fd5b5056fe4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220aa6e0d5103d264828b1323039f29c15c5f784f4b99483c3a77de213116378cb664736f6c634300060b0033",
  "deployedBytecode": "",
  "sourceMap": "539:4670:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "539:4670:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1103:140:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5028:90:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1080:274:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9688:209:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9022:381;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;153:64:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2821:98:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2038:433;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7902:200:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;345:84:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11399:300:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7597:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:50:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12348:149:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8440:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:66:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3258:149:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;101:48:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3027:102:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4756:167:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1461:335:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7136:87:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;275:66:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4326:211:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1894:145:11;;;:::i;:::-;;798:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1271:77:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5227:94:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10196:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13220:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6164:740;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2605:110:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3499:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10808:154:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2188:240:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1103:140:12;1180:4;1203:20;:33;1224:11;1203:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:40;;1103:140;;;:::o;5028:90:15:-;5074:13;5106:5;5099:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5028:90;:::o;1080:274:8:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1228:12:8::1;1205:20;;:35;;;;;;;;;;;;;;;;;;1256:1;1246:7;:11;;;;1263:45;1295:4;1301:6;1263:31;:45::i;:::-;1314:35;:33;:35::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1080:274:8;;;;:::o;9688:209:15:-;9756:7;9783:16;9791:7;9783;:16::i;:::-;9775:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;9866:15;:24;9882:7;9866:24;;;;;;;;;;;;;;;;;;;;;9859:31;;9688:209;;;:::o;9022:381::-;9102:13;9118:16;9126:7;9118;:16::i;:::-;9102:32;;9158:5;9152:11;;:2;:11;;;;9144:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;9236:5;9220:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;9245:37;9262:5;9269:12;:10;:12::i;:::-;9245:16;:37::i;:::-;9220:62;9212:152;;;;;;;;;;;;:::i;:::-;;;;;;;;;9375:21;9384:2;9388:7;9375:8;:21::i;:::-;9022:381;;;:::o;153:64:5:-;;;;;;;;;;;;;;;;;;;:::o;2821:98:8:-;2873:7;2895:19;:17;:19::i;:::-;2888:26;;2821:98;:::o;2038:433::-;2154:19;:17;:19::i;:::-;564:9:2;550:23;;:10;:23;;;535:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2196:34:8::1;2222:7;2196:25;:34::i;:::-;2181:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;2296:13;2312:34;2338:7;2312:25;:34::i;:::-;2296:50;;2368:5;2360:13;;:4;:13;;;2352:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2420:46;2448:4;2454:2;2458:7;2420:27;:46::i;:::-;635:1:2;2038:433:8::0;;;;:::o;7902:200:15:-;7955:7;8074:21;:12;:19;:21::i;:::-;8067:28;;7902:200;:::o;345:84:5:-;;;;;;;;;;;;;;;;;;;:::o;11399:300:15:-;11558:41;11577:12;:10;:12::i;:::-;11591:7;11558:18;:41::i;:::-;11550:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;11664:28;11674:4;11680:2;11684:7;11664:9;:28::i;:::-;11399:300;;;:::o;7597:152::-;7686:7;7712:30;7736:5;7712:13;:20;7726:5;7712:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;7705:37;;7597:152;;;;:::o;221:50:5:-;;;;;;;;;;;;;;;;;;;:::o;49:48::-;;;;;;;;;;;;;;;;;;;:::o;12348:149:15:-;12451:39;12468:4;12474:2;12478:7;12451:39;;;;;;;;;;;;:16;:39::i;:::-;12348:149;;;:::o;8440:161::-;8507:7;8527:15;8548:22;8564:5;8548:12;:15;;:22;;;;:::i;:::-;8526:44;;;8587:7;8580:14;;;8440:161;;;:::o;433:66:5:-;;;;;;;;;;;;;;;;;;;:::o;3258:149:8:-;3344:7;3368:34;3394:7;3368:25;:34::i;:::-;3361:41;;3258:149;;;:::o;101:48:5:-;;;;;;;;;;;;;;;;;;;:::o;3027:102:8:-;3082:7;3104:20;;;;;;;;;;;3097:27;;3027:102;:::o;4756:167:15:-;4820:7;4846:70;4863:7;4846:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4839:77;;4756:167;;;:::o;1461:335:8:-;1569:7;1535:19;:17;:19::i;:::-;564:9:2;550:23;;:10;:23;;;535:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;1597:1:8::1;1586:7;;:12;;;;;;;;;;;1604:15;1625:101;1646:11;:20;1667:7;;1646:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1636:39;;1690:34;1716:7;1690:25;:34::i;:::-;1625:101;;1731:40;1755:6;1763:7;1731:23;:40::i;:::-;1784:7;1777:14;;;1461:335:::0;;;;:::o;7136:87:15:-;7176:13;7208:8;7201:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7136:87;:::o;275:66:5:-;;;;;;;;;;;;;;;;;;;:::o;4326:211:15:-;4390:7;4434:1;4417:19;;:5;:19;;;;4409:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4501:29;:13;:20;4515:5;4501:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4494:36;;4326:211;;;:::o;1894:145:11:-;1485:12;:10;:12::i;:::-;1475:22;;:6;;;;;;;;;;;:22;;;1467:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2000:1:::1;1963:40;;1984:6;;;;;;;;;;;1963:40;;;;;;;;;;;;2030:1;2013:6;;:19;;;;;;;;;;;;;;;;;;1894:145::o:0;798:84:8:-;843:7;865:12;:10;:12::i;:::-;858:19;;798:84;:::o;1271:77:11:-;1309:7;1335:6;;;;;;;;;;;1328:13;;1271:77;:::o;5227:94:15:-;5275:13;5307:7;5300:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5227:94;:::o;10196:290::-;10310:12;:10;:12::i;:::-;10298:24;;:8;:24;;;;10290:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;10408:8;10363:18;:32;10382:12;:10;:12::i;:::-;10363:32;;;;;;;;;;;;;;;:42;10396:8;10363:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;10460:8;10431:48;;10446:12;:10;:12::i;:::-;10431:48;;;10470:8;10431:48;;;;;;:::i;:::-;;;;;;;;10196:290;;:::o;13220:282::-;13351:41;13370:12;:10;:12::i;:::-;13384:7;13351:18;:41::i;:::-;13343:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;13456:39;13470:4;13476:2;13480:7;13489:5;13456:13;:39::i;:::-;13220:282;;;;:::o;6164:740::-;6229:13;6262:16;6270:7;6262;:16::i;:::-;6254:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;6341:23;6367:10;:19;6378:7;6367:19;;;;;;;;;;;6341:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6485:1;6465:8;6459:22;;;;;;;;;;;;;;;;:27;6455:74;;;6509:9;6502:16;;;;;6455:74;6657:1;6637:9;6631:23;:27;6627:110;;;6705:8;6715:9;6688:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6674:52;;;;;6627:110;6867:8;6877:18;:7;:16;:18::i;:::-;6850:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6836:61;;;6164:740;;;;:::o;2605:110:8:-;1485:12:11;:10;:12::i;:::-;1475:22;;:6;;;;;;;;;;;:22;;;1467:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2698:12:8::1;2675:20;;:35;;;;;;;;;;;;;;;;;;2605:110:::0;:::o;3499:77::-;3542:7;3564;;3557:14;;3499:77;:::o;10808:154:15:-;10897:4;10920:18;:25;10939:5;10920:25;;;;;;;;;;;;;;;:35;10946:8;10920:35;;;;;;;;;;;;;;;;;;;;;;;;;10913:42;;10808:154;;;;:::o;2188:240:11:-;1485:12;:10;:12::i;:::-;1475:22;;:6;;;;;;;;;;;:22;;;1467:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2296:1:::1;2276:22;;:8;:22;;;;2268:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2385:8;2356:38;;2377:6;;;;;;;;;;;2356:38;;;;;;;;;;;;2413:8;2404:6;;:17;;;;;;;;;;;;;;;;;;2188:240:::0;:::o;1409:498:10:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;3502:211:15:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;3598:26:15::1;:24;:26::i;:::-;3634:25;:23;:25::i;:::-;3669:37;3693:4;3699:6;3669:23;:37::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;3502:211:15;;;:::o;867:126:11:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;924:26:11::1;:24;:26::i;:::-;960;:24;:26::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;867:126:11;:::o;14671:117:15:-;14728:4;14751:30;14773:7;14751:12;:21;;:30;;;;:::i;:::-;14744:37;;14671:117;;;:::o;931:104:9:-;984:15;1018:10;1011:17;;931:104;:::o;21695:155:15:-;21787:2;21760:15;:24;21776:7;21760:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;21835:7;21831:2;21804:39;;21813:16;21821:7;21813;:16::i;:::-;21804:39;;;;;;;;;;;;21695:155;;:::o;3697:158:8:-;3748:7;3763:24;3790:15;:13;:15::i;:::-;:19;;;3810:10;;;;;;;;;;;;;;;;;3790:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3763:58;;3834:16;3827:23;;;3697:158;:::o;18661:559:15:-;18778:4;18758:24;;:16;18766:7;18758;:16::i;:::-;:24;;;18750:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;18860:1;18846:16;;:2;:16;;;;18838:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;18914:39;18935:4;18941:2;18945:7;18914:20;:39::i;:::-;19015:29;19032:1;19036:7;19015:8;:29::i;:::-;19055:35;19082:7;19055:13;:19;19069:4;19055:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;19100:30;19122:7;19100:13;:17;19114:2;19100:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;19141:29;19158:7;19167:2;19141:12;:16;;:29;;;;;:::i;:::-;;19205:7;19201:2;19186:27;;19195:4;19186:27;;;;;;;;;;;;18661:559;;;:::o;6990:121:21:-;7059:7;7085:19;7093:3;:10;;7085:7;:19::i;:::-;7078:26;;6990:121;;;:::o;15149:329:15:-;15234:4;15258:16;15266:7;15258;:16::i;:::-;15250:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;15333:13;15349:16;15357:7;15349;:16::i;:::-;15333:32;;15394:5;15383:16;;:7;:16;;;:51;;;;15427:7;15403:31;;:20;15415:7;15403:11;:20::i;:::-;:31;;;15383:51;:87;;;;15438:32;15455:5;15462:7;15438:16;:32::i;:::-;15383:87;15375:96;;;15149:329;;;;:::o;7616:135:22:-;7687:7;7721:22;7725:3;:10;;7737:5;7721:3;:22::i;:::-;7713:31;;7706:38;;7616:135;;;;:::o;7439:224:21:-;7519:7;7528;7548:11;7561:13;7578:22;7582:3;:10;;7594:5;7578:3;:22::i;:::-;7547:53;;;;7626:3;7618:12;;7648:5;7640:14;;7610:46;;;;;;;;;7439:224;;;;;:::o;8082:202::-;8189:7;8231:44;8236:3;:10;;8256:3;8248:12;;8262;8231:4;:44::i;:::-;8223:53;;8208:69;;8082:202;;;;;:::o;17208:393:15:-;17301:1;17287:16;;:2;:16;;;;17279:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;17359:16;17367:7;17359;:16::i;:::-;17358:17;17350:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;17419:45;17448:1;17452:2;17456:7;17419:20;:45::i;:::-;17475:30;17497:7;17475:13;:17;17489:2;17475:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;17516:29;17533:7;17542:2;17516:12;:16;;:29;;;;;:::i;:::-;;17586:7;17582:2;17561:33;;17578:1;17561:33;;;;;;;;;;;;17208:393;;:::o;7172:112:22:-;7232:7;7258:19;7266:3;:10;;7258:7;:19::i;:::-;7251:26;;7172:112;;;:::o;14207:269:15:-;14320:28;14330:4;14336:2;14340:7;14320:9;:28::i;:::-;14366:48;14389:4;14395:2;14399:7;14408:5;14366:22;:48::i;:::-;14358:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;14207:269;;;;:::o;169:723:23:-;225:13;451:1;442:5;:10;438:51;;;468:10;;;;;;;;;;;;;;;;;;;;;438:51;498:12;513:5;498:20;;528:14;552:75;567:1;559:4;:9;552:75;;584:8;;;;;;;614:2;606:10;;;;;;;;;552:75;;;636:19;668:6;658:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:39;;685:13;710:1;701:6;:10;685:26;;728:5;721:12;;743:112;758:1;750:4;:9;743:112;;816:2;809:4;:9;;;;;;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;;;;;;;;;;;842:2;834:10;;;;;;;;;743:112;;;878:6;864:21;;;;;;169:723;;;;:::o;858:66:9:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1268:14;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;858:66:9;:::o;700:252:12:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;904:40:12::1;442:10;923:20;;904:18;:40::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;700:252:12;:::o;3719:402:15:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;3835:4:15::1;3827:5;:12;;;;;;;;;;;;:::i;:::-;;3859:6;3849:7;:16;;;;;;;;;;;;:::i;:::-;;3953:40;2779:10;3972:20;;3953:18;:40::i;:::-;4003:49;3111:10;4022:29;;4003:18;:49::i;:::-;4062:51;3484:10;4081:31;;4062:18;:51::i;:::-;1268:14:10::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;3719:402:15;;;:::o;999:195:11:-;1024:12:10;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1068:17:11::1;1088:12;:10;:12::i;:::-;1068:32;;1119:9;1110:6;;:18;;;;;;;;;;;;;;;;;;1176:9;1143:43;;1172:1;1143:43;;;;;;;;;;;;1256:1:10;1268:14:::0;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;999:195:11;:::o;6758:149:21:-;6842:4;6865:35;6875:3;:10;;6895:3;6887:12;;6865:9;:35::i;:::-;6858:42;;6758:149;;;;:::o;3580:113:8:-;3627:12;3667:20;;;;;;;;;;;3647:41;;3580:113;:::o;22406:93:15:-;;;;:::o;6731:135:22:-;6801:4;6824:35;6832:3;:10;;6852:5;6844:14;;6824:7;:35::i;:::-;6817:42;;6731:135;;;;:::o;6434:129::-;6501:4;6524:32;6529:3;:10;;6549:5;6541:14;;6524:4;:32::i;:::-;6517:39;;6434:129;;;;:::o;6206:174:21:-;6295:4;6318:55;6323:3;:10;;6343:3;6335:12;;6365:5;6357:14;;6349:23;;6318:4;:55::i;:::-;6311:62;;6206:174;;;;;:::o;4450:108::-;4506:7;4532:3;:12;;:19;;;;4525:26;;4450:108;;;:::o;4390:201:22:-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;4901:274:21:-;4968:7;4977;5026:5;5004:3;:12;;:19;;;;:27;4996:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;5582:315::-;5676:7;5695:16;5714:3;:12;;:17;5727:3;5714:17;;;;;;;;;;;;5695:36;;5761:1;5749:8;:13;;5764:12;5741:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;3951:107:22:-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;20639:1050:15:-;20759:4;20784:15;:2;:13;;;:15::i;:::-;20779:58;;20822:4;20815:11;;;;20779:58;20906:12;20920:23;20947:2;:7;;20991:45;;;21050:12;:10;:12::i;:::-;21076:4;21094:7;21115:5;20955:175;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20947:184;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20905:226;;;;21146:7;21141:542;;21193:1;21173:10;:17;:21;21169:376;;;21338:10;21332:17;21398:15;21385:10;21381:2;21377:19;21370:44;21287:145;21470:60;;;;;;;;;;:::i;:::-;;;;;;;;21141:542;21575:13;21602:10;21591:32;;;;;;;;;;;;:::i;:::-;21575:48;;1117:10;21655:16;;21645:26;;;:6;:26;;;;21637:35;;;;;20639:1050;;;;;;;:::o;1637:198:12:-;1735:10;1720:25;;:11;:25;;;;;1712:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1824:4;1788:20;:33;1809:11;1788:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1637:198;:::o;4237:123:21:-;4308:4;4352:1;4331:3;:12;;:17;4344:3;4331:17;;;;;;;;;;;;:22;;4324:29;;4237:123;;;;:::o;2150:1512:22:-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;1795:678:21:-;1871:4;1985:16;2004:3;:12;;:17;2017:3;2004:17;;;;;;;;;;;;1985:36;;2048:1;2036:8;:13;2032:435;;;2102:3;:12;;2120:38;;;;;;;;2137:3;2120:38;;;;2150:5;2120:38;;;2102:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:3;:12;;:19;;;;2294:3;:12;;:17;2307:3;2294:17;;;;;;;;;;;:39;;;;2354:4;2347:11;;;;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;1795:678;;;;;;:::o;685:610:20:-;745:4;1003:16;1029:19;1051:66;1029:88;;;;1218:7;1206:20;1194:32;;1257:11;1245:8;:23;;:42;;;;;1284:3;1272:15;;:8;:15;;1245:42;1237:51;;;;685:610;;;:::o;3743:127:22:-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:134::-;;226:6;220:13;211:22;;238:33;265:5;238:33;:::i;:::-;205:71;;;;:::o;283:124::-;;360:6;347:20;338:29;;372:30;396:5;372:30;:::i;:::-;332:75;;;;:::o;414:128::-;;493:6;480:20;471:29;;505:32;531:5;505:32;:::i;:::-;465:77;;;;:::o;549:132::-;;632:6;626:13;617:22;;644:32;670:5;644:32;:::i;:::-;611:70;;;;:::o;689:440::-;;790:3;783:4;775:6;771:17;767:27;757:2;;808:1;805;798:12;757:2;845:6;832:20;867:64;882:48;923:6;882:48;:::i;:::-;867:64;:::i;:::-;858:73;;951:6;944:5;937:21;987:4;979:6;975:17;1020:4;1013:5;1009:16;1055:3;1046:6;1041:3;1037:16;1034:25;1031:2;;;1072:1;1069;1062:12;1031:2;1082:41;1116:6;1111:3;1106;1082:41;:::i;:::-;750:379;;;;;;;:::o;1138:442::-;;1240:3;1233:4;1225:6;1221:17;1217:27;1207:2;;1258:1;1255;1248:12;1207:2;1295:6;1282:20;1317:65;1332:49;1374:6;1332:49;:::i;:::-;1317:65;:::i;:::-;1308:74;;1402:6;1395:5;1388:21;1438:4;1430:6;1426:17;1471:4;1464:5;1460:16;1506:3;1497:6;1492:3;1488:16;1485:25;1482:2;;;1523:1;1520;1513:12;1482:2;1533:41;1567:6;1562:3;1557;1533:41;:::i;:::-;1200:380;;;;;;;:::o;1588:130::-;;1668:6;1655:20;1646:29;;1680:33;1707:5;1680:33;:::i;:::-;1640:78;;;;:::o;1725:134::-;;1809:6;1803:13;1794:22;;1821:33;1848:5;1821:33;:::i;:::-;1788:71;;;;:::o;1866:241::-;;1970:2;1958:9;1949:7;1945:23;1941:32;1938:2;;;1986:1;1983;1976:12;1938:2;2021:1;2038:53;2083:7;2074:6;2063:9;2059:22;2038:53;:::i;:::-;2028:63;;2000:97;1932:175;;;;:::o;2114:263::-;;2229:2;2217:9;2208:7;2204:23;2200:32;2197:2;;;2245:1;2242;2235:12;2197:2;2280:1;2297:64;2353:7;2344:6;2333:9;2329:22;2297:64;:::i;:::-;2287:74;;2259:108;2191:186;;;;:::o;2384:366::-;;;2505:2;2493:9;2484:7;2480:23;2476:32;2473:2;;;2521:1;2518;2511:12;2473:2;2556:1;2573:53;2618:7;2609:6;2598:9;2594:22;2573:53;:::i;:::-;2563:63;;2535:97;2663:2;2681:53;2726:7;2717:6;2706:9;2702:22;2681:53;:::i;:::-;2671:63;;2642:98;2467:283;;;;;:::o;2757:491::-;;;;2895:2;2883:9;2874:7;2870:23;2866:32;2863:2;;;2911:1;2908;2901:12;2863:2;2946:1;2963:53;3008:7;2999:6;2988:9;2984:22;2963:53;:::i;:::-;2953:63;;2925:97;3053:2;3071:53;3116:7;3107:6;3096:9;3092:22;3071:53;:::i;:::-;3061:63;;3032:98;3161:2;3179:53;3224:7;3215:6;3204:9;3200:22;3179:53;:::i;:::-;3169:63;;3140:98;2857:391;;;;;:::o;3255:721::-;;;;;3419:3;3407:9;3398:7;3394:23;3390:33;3387:2;;;3436:1;3433;3426:12;3387:2;3471:1;3488:53;3533:7;3524:6;3513:9;3509:22;3488:53;:::i;:::-;3478:63;;3450:97;3578:2;3596:53;3641:7;3632:6;3621:9;3617:22;3596:53;:::i;:::-;3586:63;;3557:98;3686:2;3704:53;3749:7;3740:6;3729:9;3725:22;3704:53;:::i;:::-;3694:63;;3665:98;3822:2;3811:9;3807:18;3794:32;3846:18;3838:6;3835:30;3832:2;;;3878:1;3875;3868:12;3832:2;3898:62;3952:7;3943:6;3932:9;3928:22;3898:62;:::i;:::-;3888:72;;3773:193;3381:595;;;;;;;:::o;3983:360::-;;;4101:2;4089:9;4080:7;4076:23;4072:32;4069:2;;;4117:1;4114;4107:12;4069:2;4152:1;4169:53;4214:7;4205:6;4194:9;4190:22;4169:53;:::i;:::-;4159:63;;4131:97;4259:2;4277:50;4319:7;4310:6;4299:9;4295:22;4277:50;:::i;:::-;4267:60;;4238:95;4063:280;;;;;:::o;4350:366::-;;;4471:2;4459:9;4450:7;4446:23;4442:32;4439:2;;;4487:1;4484;4477:12;4439:2;4522:1;4539:53;4584:7;4575:6;4564:9;4560:22;4539:53;:::i;:::-;4529:63;;4501:97;4629:2;4647:53;4692:7;4683:6;4672:9;4668:22;4647:53;:::i;:::-;4637:63;;4608:98;4433:283;;;;;:::o;4723:239::-;;4826:2;4814:9;4805:7;4801:23;4797:32;4794:2;;;4842:1;4839;4832:12;4794:2;4877:1;4894:52;4938:7;4929:6;4918:9;4914:22;4894:52;:::i;:::-;4884:62;;4856:96;4788:174;;;;:::o;4969:261::-;;5083:2;5071:9;5062:7;5058:23;5054:32;5051:2;;;5099:1;5096;5089:12;5051:2;5134:1;5151:63;5206:7;5197:6;5186:9;5182:22;5151:63;:::i;:::-;5141:73;;5113:107;5045:185;;;;:::o;5237:703::-;;;;5395:2;5383:9;5374:7;5370:23;5366:32;5363:2;;;5411:1;5408;5401:12;5363:2;5474:1;5463:9;5459:17;5446:31;5497:18;5489:6;5486:30;5483:2;;;5529:1;5526;5519:12;5483:2;5549:63;5604:7;5595:6;5584:9;5580:22;5549:63;:::i;:::-;5539:73;;5425:193;5677:2;5666:9;5662:18;5649:32;5701:18;5693:6;5690:30;5687:2;;;5733:1;5730;5723:12;5687:2;5753:63;5808:7;5799:6;5788:9;5784:22;5753:63;:::i;:::-;5743:73;;5628:194;5853:2;5871:53;5916:7;5907:6;5896:9;5892:22;5871:53;:::i;:::-;5861:63;;5832:98;5357:583;;;;;:::o;5947:241::-;;6051:2;6039:9;6030:7;6026:23;6022:32;6019:2;;;6067:1;6064;6057:12;6019:2;6102:1;6119:53;6164:7;6155:6;6144:9;6140:22;6119:53;:::i;:::-;6109:63;;6081:97;6013:175;;;;:::o;6195:263::-;;6310:2;6298:9;6289:7;6285:23;6281:32;6278:2;;;6326:1;6323;6316:12;6278:2;6361:1;6378:64;6434:7;6425:6;6414:9;6410:22;6378:64;:::i;:::-;6368:74;;6340:108;6272:186;;;;:::o;6465:137::-;6564:32;6590:5;6564:32;:::i;:::-;6559:3;6552:45;6546:56;;:::o;6609:113::-;6692:24;6710:5;6692:24;:::i;:::-;6687:3;6680:37;6674:48;;:::o;6729:104::-;6806:21;6821:5;6806:21;:::i;:::-;6801:3;6794:34;6788:45;;:::o;6840:343::-;;6950:38;6982:5;6950:38;:::i;:::-;7000:70;7063:6;7058:3;7000:70;:::i;:::-;6993:77;;7075:52;7120:6;7115:3;7108:4;7101:5;7097:16;7075:52;:::i;:::-;7148:29;7170:6;7148:29;:::i;:::-;7143:3;7139:39;7132:46;;6930:253;;;;;:::o;7190:356::-;;7318:38;7350:5;7318:38;:::i;:::-;7368:88;7449:6;7444:3;7368:88;:::i;:::-;7361:95;;7461:52;7506:6;7501:3;7494:4;7487:5;7483:16;7461:52;:::i;:::-;7534:6;7529:3;7525:16;7518:23;;7298:248;;;;;:::o;7553:347::-;;7665:39;7698:5;7665:39;:::i;:::-;7716:71;7780:6;7775:3;7716:71;:::i;:::-;7709:78;;7792:52;7837:6;7832:3;7825:4;7818:5;7814:16;7792:52;:::i;:::-;7865:29;7887:6;7865:29;:::i;:::-;7860:3;7856:39;7849:46;;7645:255;;;;;:::o;7907:360::-;;8037:39;8070:5;8037:39;:::i;:::-;8088:89;8170:6;8165:3;8088:89;:::i;:::-;8081:96;;8182:52;8227:6;8222:3;8215:4;8208:5;8204:16;8182:52;:::i;:::-;8255:6;8250:3;8246:16;8239:23;;8017:250;;;;;:::o;8299:884::-;;8436:5;8430:12;8470:1;8459:9;8455:17;8483:1;8478:268;;;;8757:1;8752:425;;;;8448:729;;8478:268;8556:4;8552:1;8541:9;8537:17;8533:28;8575:89;8657:6;8652:3;8575:89;:::i;:::-;8568:96;;8702:4;8698:9;8687;8683:25;8678:3;8671:38;8732:6;8727:3;8723:16;8716:23;;8485:261;8478:268;;8752:425;8821:1;8810:9;8806:17;8837:89;8919:6;8914:3;8837:89;:::i;:::-;8830:96;;8948:38;8980:5;8948:38;:::i;:::-;9002:1;9010:130;9024:6;9021:1;9018:13;9010:130;;;9089:7;9083:14;9079:1;9074:3;9070:11;9063:35;9130:1;9121:7;9117:15;9106:26;;9046:4;9043:1;9039:12;9034:17;;9010:130;;;9163:6;9158:3;9154:16;9147:23;;8759:418;;;8448:729;;8406:777;;;;;:::o;9192:371::-;;9352:67;9416:2;9411:3;9352:67;:::i;:::-;9345:74;;9452:34;9448:1;9443:3;9439:11;9432:55;9521:4;9516:2;9511:3;9507:12;9500:26;9554:2;9549:3;9545:12;9538:19;;9338:225;;;:::o;9572:387::-;;9732:67;9796:2;9791:3;9732:67;:::i;:::-;9725:74;;9832:34;9828:1;9823:3;9819:11;9812:55;9901:20;9896:2;9891:3;9887:12;9880:42;9950:2;9945:3;9941:12;9934:19;;9718:241;;;:::o;9968:375::-;;10128:67;10192:2;10187:3;10128:67;:::i;:::-;10121:74;;10228:34;10224:1;10219:3;10215:11;10208:55;10297:8;10292:2;10287:3;10283:12;10276:30;10334:2;10329:3;10325:12;10318:19;;10114:229;;;:::o;10352:328::-;;10512:67;10576:2;10571:3;10512:67;:::i;:::-;10505:74;;10612:30;10608:1;10603:3;10599:11;10592:51;10671:2;10666:3;10662:12;10655:19;;10498:182;;;:::o;10689:328::-;;10849:67;10913:2;10908:3;10849:67;:::i;:::-;10842:74;;10949:30;10945:1;10940:3;10936:11;10929:51;11008:2;11003:3;10999:12;10992:19;;10835:182;;;:::o;11026:373::-;;11186:67;11250:2;11245:3;11186:67;:::i;:::-;11179:74;;11286:34;11282:1;11277:3;11273:11;11266:55;11355:6;11350:2;11345:3;11341:12;11334:28;11390:2;11385:3;11381:12;11374:19;;11172:227;;;:::o;11408:325::-;;11568:67;11632:2;11627:3;11568:67;:::i;:::-;11561:74;;11668:27;11664:1;11659:3;11655:11;11648:48;11724:2;11719:3;11715:12;11708:19;;11554:179;;;:::o;11742:381::-;;11902:67;11966:2;11961:3;11902:67;:::i;:::-;11895:74;;12002:34;11998:1;11993:3;11989:11;11982:55;12071:14;12066:2;12061:3;12057:12;12050:36;12114:2;12109:3;12105:12;12098:19;;11888:235;;;:::o;12132:393::-;;12292:67;12356:2;12351:3;12292:67;:::i;:::-;12285:74;;12392:34;12388:1;12383:3;12379:11;12372:55;12461:26;12456:2;12451:3;12447:12;12440:48;12516:2;12511:3;12507:12;12500:19;;12278:247;;;:::o;12534:379::-;;12694:67;12758:2;12753:3;12694:67;:::i;:::-;12687:74;;12794:34;12790:1;12785:3;12781:11;12774:55;12863:12;12858:2;12853:3;12849:12;12842:34;12904:2;12899:3;12895:12;12888:19;;12680:233;;;:::o;12922:371::-;;13082:67;13146:2;13141:3;13082:67;:::i;:::-;13075:74;;13182:34;13178:1;13173:3;13169:11;13162:55;13251:4;13246:2;13241:3;13237:12;13230:26;13284:2;13279:3;13275:12;13268:19;;13068:225;;;:::o;13302:332::-;;13462:67;13526:2;13521:3;13462:67;:::i;:::-;13455:74;;13562:34;13558:1;13553:3;13549:11;13542:55;13625:2;13620:3;13616:12;13609:19;;13448:186;;;:::o;13643:381::-;;13803:67;13867:2;13862:3;13803:67;:::i;:::-;13796:74;;13903:34;13899:1;13894:3;13890:11;13883:55;13972:14;13967:2;13962:3;13958:12;13951:36;14015:2;14010:3;14006:12;13999:19;;13789:235;;;:::o;14033:332::-;;14193:67;14257:2;14252:3;14193:67;:::i;:::-;14186:74;;14293:34;14289:1;14284:3;14280:11;14273:55;14356:2;14351:3;14347:12;14340:19;;14179:186;;;:::o;14374:383::-;;14534:67;14598:2;14593:3;14534:67;:::i;:::-;14527:74;;14634:34;14630:1;14625:3;14621:11;14614:55;14703:16;14698:2;14693:3;14689:12;14682:38;14748:2;14743:3;14739:12;14732:19;;14520:237;;;:::o;14766:378::-;;14926:67;14990:2;14985:3;14926:67;:::i;:::-;14919:74;;15026:34;15022:1;15017:3;15013:11;15006:55;15095:11;15090:2;15085:3;15081:12;15074:33;15135:2;15130:3;15126:12;15119:19;;14912:232;;;:::o;15153:384::-;;15313:67;15377:2;15372:3;15313:67;:::i;:::-;15306:74;;15413:34;15409:1;15404:3;15400:11;15393:55;15482:17;15477:2;15472:3;15468:12;15461:39;15528:2;15523:3;15519:12;15512:19;;15299:238;;;:::o;15546:370::-;;15706:67;15770:2;15765:3;15706:67;:::i;:::-;15699:74;;15806:34;15802:1;15797:3;15793:11;15786:55;15875:3;15870:2;15865:3;15861:12;15854:25;15907:2;15902:3;15898:12;15891:19;;15692:224;;;:::o;15925:386::-;;16085:67;16149:2;16144:3;16085:67;:::i;:::-;16078:74;;16185:34;16181:1;16176:3;16172:11;16165:55;16254:19;16249:2;16244:3;16240:12;16233:41;16302:2;16297:3;16293:12;16286:19;;16071:240;;;:::o;16320:373::-;;16480:67;16544:2;16539:3;16480:67;:::i;:::-;16473:74;;16580:34;16576:1;16571:3;16567:11;16560:55;16649:6;16644:2;16639:3;16635:12;16628:28;16684:2;16679:3;16675:12;16668:19;;16466:227;;;:::o;16702:377::-;;16862:67;16926:2;16921:3;16862:67;:::i;:::-;16855:74;;16962:34;16958:1;16953:3;16949:11;16942:55;17031:10;17026:2;17021:3;17017:12;17010:32;17070:2;17065:3;17061:12;17054:19;;16848:231;;;:::o;17087:113::-;17170:24;17188:5;17170:24;:::i;:::-;17165:3;17158:37;17152:48;;:::o;17207:121::-;17298:24;17316:5;17298:24;:::i;:::-;17293:3;17286:37;17280:48;;:::o;17335:271::-;;17488:93;17577:3;17568:6;17488:93;:::i;:::-;17481:100;;17598:3;17591:10;;17469:137;;;;:::o;17613:430::-;;17813:92;17901:3;17892:6;17813:92;:::i;:::-;17806:99;;17923:95;18014:3;18005:6;17923:95;:::i;:::-;17916:102;;18035:3;18028:10;;17794:249;;;;;:::o;18050:222::-;;18177:2;18166:9;18162:18;18154:26;;18191:71;18259:1;18248:9;18244:17;18235:6;18191:71;:::i;:::-;18148:124;;;;:::o;18279:672::-;;18524:3;18513:9;18509:19;18501:27;;18539:87;18623:1;18612:9;18608:17;18599:6;18539:87;:::i;:::-;18637:72;18705:2;18694:9;18690:18;18681:6;18637:72;:::i;:::-;18720;18788:2;18777:9;18773:18;18764:6;18720:72;:::i;:::-;18840:9;18834:4;18830:20;18825:2;18814:9;18810:18;18803:48;18865:76;18936:4;18927:6;18865:76;:::i;:::-;18857:84;;18495:456;;;;;;;:::o;18958:210::-;;19079:2;19068:9;19064:18;19056:26;;19093:65;19155:1;19144:9;19140:17;19131:6;19093:65;:::i;:::-;19050:118;;;;:::o;19175:310::-;;19322:2;19311:9;19307:18;19299:26;;19372:9;19366:4;19362:20;19358:1;19347:9;19343:17;19336:47;19397:78;19470:4;19461:6;19397:78;:::i;:::-;19389:86;;19293:192;;;;:::o;19492:416::-;;19692:2;19681:9;19677:18;19669:26;;19742:9;19736:4;19732:20;19728:1;19717:9;19713:17;19706:47;19767:131;19893:4;19767:131;:::i;:::-;19759:139;;19663:245;;;:::o;19915:416::-;;20115:2;20104:9;20100:18;20092:26;;20165:9;20159:4;20155:20;20151:1;20140:9;20136:17;20129:47;20190:131;20316:4;20190:131;:::i;:::-;20182:139;;20086:245;;;:::o;20338:416::-;;20538:2;20527:9;20523:18;20515:26;;20588:9;20582:4;20578:20;20574:1;20563:9;20559:17;20552:47;20613:131;20739:4;20613:131;:::i;:::-;20605:139;;20509:245;;;:::o;20761:416::-;;20961:2;20950:9;20946:18;20938:26;;21011:9;21005:4;21001:20;20997:1;20986:9;20982:17;20975:47;21036:131;21162:4;21036:131;:::i;:::-;21028:139;;20932:245;;;:::o;21184:416::-;;21384:2;21373:9;21369:18;21361:26;;21434:9;21428:4;21424:20;21420:1;21409:9;21405:17;21398:47;21459:131;21585:4;21459:131;:::i;:::-;21451:139;;21355:245;;;:::o;21607:416::-;;21807:2;21796:9;21792:18;21784:26;;21857:9;21851:4;21847:20;21843:1;21832:9;21828:17;21821:47;21882:131;22008:4;21882:131;:::i;:::-;21874:139;;21778:245;;;:::o;22030:416::-;;22230:2;22219:9;22215:18;22207:26;;22280:9;22274:4;22270:20;22266:1;22255:9;22251:17;22244:47;22305:131;22431:4;22305:131;:::i;:::-;22297:139;;22201:245;;;:::o;22453:416::-;;22653:2;22642:9;22638:18;22630:26;;22703:9;22697:4;22693:20;22689:1;22678:9;22674:17;22667:47;22728:131;22854:4;22728:131;:::i;:::-;22720:139;;22624:245;;;:::o;22876:416::-;;23076:2;23065:9;23061:18;23053:26;;23126:9;23120:4;23116:20;23112:1;23101:9;23097:17;23090:47;23151:131;23277:4;23151:131;:::i;:::-;23143:139;;23047:245;;;:::o;23299:416::-;;23499:2;23488:9;23484:18;23476:26;;23549:9;23543:4;23539:20;23535:1;23524:9;23520:17;23513:47;23574:131;23700:4;23574:131;:::i;:::-;23566:139;;23470:245;;;:::o;23722:416::-;;23922:2;23911:9;23907:18;23899:26;;23972:9;23966:4;23962:20;23958:1;23947:9;23943:17;23936:47;23997:131;24123:4;23997:131;:::i;:::-;23989:139;;23893:245;;;:::o;24145:416::-;;24345:2;24334:9;24330:18;24322:26;;24395:9;24389:4;24385:20;24381:1;24370:9;24366:17;24359:47;24420:131;24546:4;24420:131;:::i;:::-;24412:139;;24316:245;;;:::o;24568:416::-;;24768:2;24757:9;24753:18;24745:26;;24818:9;24812:4;24808:20;24804:1;24793:9;24789:17;24782:47;24843:131;24969:4;24843:131;:::i;:::-;24835:139;;24739:245;;;:::o;24991:416::-;;25191:2;25180:9;25176:18;25168:26;;25241:9;25235:4;25231:20;25227:1;25216:9;25212:17;25205:47;25266:131;25392:4;25266:131;:::i;:::-;25258:139;;25162:245;;;:::o;25414:416::-;;25614:2;25603:9;25599:18;25591:26;;25664:9;25658:4;25654:20;25650:1;25639:9;25635:17;25628:47;25689:131;25815:4;25689:131;:::i;:::-;25681:139;;25585:245;;;:::o;25837:416::-;;26037:2;26026:9;26022:18;26014:26;;26087:9;26081:4;26077:20;26073:1;26062:9;26058:17;26051:47;26112:131;26238:4;26112:131;:::i;:::-;26104:139;;26008:245;;;:::o;26260:416::-;;26460:2;26449:9;26445:18;26437:26;;26510:9;26504:4;26500:20;26496:1;26485:9;26481:17;26474:47;26535:131;26661:4;26535:131;:::i;:::-;26527:139;;26431:245;;;:::o;26683:416::-;;26883:2;26872:9;26868:18;26860:26;;26933:9;26927:4;26923:20;26919:1;26908:9;26904:17;26897:47;26958:131;27084:4;26958:131;:::i;:::-;26950:139;;26854:245;;;:::o;27106:416::-;;27306:2;27295:9;27291:18;27283:26;;27356:9;27350:4;27346:20;27342:1;27331:9;27327:17;27320:47;27381:131;27507:4;27381:131;:::i;:::-;27373:139;;27277:245;;;:::o;27529:416::-;;27729:2;27718:9;27714:18;27706:26;;27779:9;27773:4;27769:20;27765:1;27754:9;27750:17;27743:47;27804:131;27930:4;27804:131;:::i;:::-;27796:139;;27700:245;;;:::o;27952:416::-;;28152:2;28141:9;28137:18;28129:26;;28202:9;28196:4;28192:20;28188:1;28177:9;28173:17;28166:47;28227:131;28353:4;28227:131;:::i;:::-;28219:139;;28123:245;;;:::o;28375:238::-;;28510:2;28499:9;28495:18;28487:26;;28524:79;28600:1;28589:9;28585:17;28576:6;28524:79;:::i;:::-;28481:132;;;;:::o;28620:222::-;;28747:2;28736:9;28732:18;28724:26;;28761:71;28829:1;28818:9;28814:17;28805:6;28761:71;:::i;:::-;28718:124;;;;:::o;28849:256::-;;28911:2;28905:9;28895:19;;28949:4;28941:6;28937:17;29048:6;29036:10;29033:22;29012:18;29000:10;28997:34;28994:62;28991:2;;;29069:1;29066;29059:12;28991:2;29089:10;29085:2;29078:22;28889:216;;;;:::o;29112:321::-;;29255:18;29247:6;29244:30;29241:2;;;29287:1;29284;29277:12;29241:2;29354:4;29350:9;29343:4;29335:6;29331:17;29327:33;29319:41;;29418:4;29412;29408:15;29400:23;;29178:255;;;:::o;29440:322::-;;29584:18;29576:6;29573:30;29570:2;;;29616:1;29613;29606:12;29570:2;29683:4;29679:9;29672:4;29664:6;29660:17;29656:33;29648:41;;29747:4;29741;29737:15;29729:23;;29507:255;;;:::o;29769:158::-;;29837:3;29829:11;;29874:3;29871:1;29864:14;29906:4;29903:1;29893:18;29885:26;;29823:104;;;:::o;29934:121::-;;30027:5;30021:12;30011:22;;29992:63;;;:::o;30062:122::-;;30156:5;30150:12;30140:22;;30121:63;;;:::o;30192:162::-;;30306:6;30301:3;30294:19;30343:4;30338:3;30334:14;30319:29;;30287:67;;;;:::o;30363:144::-;;30498:3;30483:18;;30476:31;;;;:::o;30516:163::-;;30631:6;30626:3;30619:19;30668:4;30663:3;30659:14;30644:29;;30612:67;;;;:::o;30688:145::-;;30824:3;30809:18;;30802:31;;;;:::o;30841:91::-;;30903:24;30921:5;30903:24;:::i;:::-;30892:35;;30886:46;;;:::o;30939:99::-;;31009:24;31027:5;31009:24;:::i;:::-;30998:35;;30992:46;;;:::o;31045:85::-;;31118:5;31111:13;31104:21;31093:32;;31087:43;;;:::o;31137:144::-;;31209:66;31202:5;31198:78;31187:89;;31181:100;;;:::o;31288:121::-;;31361:42;31354:5;31350:54;31339:65;;31333:76;;;:::o;31416:72::-;;31478:5;31467:16;;31461:27;;;:::o;31496:145::-;31577:6;31572:3;31567;31554:30;31633:1;31624:6;31619:3;31615:16;31608:27;31547:94;;;:::o;31650:268::-;31715:1;31722:101;31736:6;31733:1;31730:13;31722:101;;;31812:1;31807:3;31803:11;31797:18;31793:1;31788:3;31784:11;31777:39;31758:2;31755:1;31751:10;31746:15;;31722:101;;;31838:6;31835:1;31832:13;31829:2;;;31903:1;31894:6;31889:3;31885:16;31878:27;31829:2;31699:219;;;;:::o;31926:97::-;;32014:2;32010:7;32005:2;31998:5;31994:14;31990:28;31980:38;;31974:49;;;:::o;32031:117::-;32100:24;32118:5;32100:24;:::i;:::-;32093:5;32090:35;32080:2;;32139:1;32136;32129:12;32080:2;32074:74;:::o;32155:111::-;32221:21;32236:5;32221:21;:::i;:::-;32214:5;32211:32;32201:2;;32257:1;32254;32247:12;32201:2;32195:71;:::o;32273:115::-;32341:23;32358:5;32341:23;:::i;:::-;32334:5;32331:34;32321:2;;32379:1;32376;32369:12;32321:2;32315:73;:::o;32395:117::-;32464:24;32482:5;32464:24;:::i;:::-;32457:5;32454:35;32444:2;;32503:1;32500;32493:12;32444:2;32438:74;:::o",
  "source": "pragma solidity 0.6.11;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol\";\nimport \"../../common/IStartrailRegistry.sol\";\nimport \"../../lib/contracts/IDGenerator.sol\";\nimport \"../../lib/contracts/Signature.sol\";\nimport \"../../common/IRootLogic.sol\";\nimport \"../../common/IStartrailValidator.sol\";\nimport \"../../name/contracts/NameRegistry.sol\";\nimport \"../../name/contracts/Contracts.sol\";\n\ncontract StartrailRegistry is\n  OwnableUpgradeSafe,\n  ERC721UpgradeSafe,\n  IStartrailRegistry,\n  IStartrailValidator,\n  Contracts\n{\n  /*\n   * State variables\n   */\n  uint256 private idNonce;\n\n  /*\n   * Storage\n   */\n  address private _nameRegistryAddress;\n\n  function getMsgSender() public view returns (address) {\n    return _msgSender();\n  }\n\n  /**\n   * @dev Initializes the StartrailRegistry\n   * @param name string of the name\n   * @param symbol string of the symbol\n   * @param nameRegistry address of the NameRegistry contract\n   */\n  function initialize(\n    string memory name,\n    string memory symbol,\n    address nameRegistry\n  ) public initializer {\n    _nameRegistryAddress = nameRegistry;\n    idNonce = 1;\n    ERC721UpgradeSafe.__ERC721_init(name, symbol);\n    OwnableUpgradeSafe.__Ownable_init();\n  }\n\n  /**\n   * @dev Creates a new StartrailRegistryRecordID\n   * @param sender address of the sender\n   */\n  function mint(address sender)\n    external\n    override\n    onlyRootLogic(_rootLogicAddress())\n    returns (uint256)\n  {\n    idNonce += 1;\n    uint256 tokenId;\n    do {\n      tokenId = IDGenerator.generate(idNonce);\n    } while (ERC721UpgradeSafe._exists(tokenId));\n    ERC721UpgradeSafe._mint(sender, tokenId);\n    return tokenId;\n  }\n\n  /**\n   * @dev Transfers the ownership of a given SRR ID to another address.\n   * @param from address of the current owner\n   * @param to address to receive the ownership\n   * @param tokenId uint256 ID of the SRR to be transferred\n   */\n  function transferSRRFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) external override onlyRootLogic(_rootLogicAddress()) {\n    require(\n      ERC721UpgradeSafe._exists(tokenId),\n      \"ERC721: operator query for nonexistent token\"\n    );\n    address owner = ERC721UpgradeSafe.ownerOf(tokenId);\n    require(from == owner, \"ERC721: transfer caller is not owner\");\n    ERC721UpgradeSafe._transfer(from, to, tokenId);\n  }\n\n  /**\n   * @dev Sets the address of the NameRegistry contract\n   * @param nameRegistry address of the NameRegistry contract\n   */\n  function setNameRegistry(address nameRegistry) public onlyOwner {\n    _nameRegistryAddress = nameRegistry;\n  }\n\n  /**\n   * @dev Gets the endpoint address of the RootLogic\n   * @return RootLogic proxy address\n   */\n  function getRootLogicAddress() public view returns (address) {\n    return _rootLogicAddress();\n  }\n\n  /**\n   * @dev Gets the endpoint address of NameRegistry\n   * @return NameRegistry proxy address\n   */\n  function getNameRegistryAddress() public view returns (address) {\n    return _nameRegistryAddress;\n  }\n\n  /**\n   * @dev Gets the owner address of the SRR\n   * @param tokenId uint256 of the SRR ID\n   * @return owner address\n   */\n  function getSRROwner(uint256 tokenId)\n    external\n    override\n    view\n    returns (address)\n  {\n    return ERC721UpgradeSafe.ownerOf(tokenId);\n  }\n\n  /**\n   * @dev Gets the nonce from the storage\n   * @return idNonce from storage\n   */\n  function getIdNonce() public view returns (uint256) {\n    return idNonce;\n  }\n\n  function _nameRegistry() private view returns (NameRegistry) {\n    return NameRegistry(_nameRegistryAddress);\n  }\n\n  function _rootLogicAddress() private view returns (address) {\n    address rootLogicAddress = _nameRegistry().get(ROOT_LOGIC);\n    return rootLogicAddress;\n  }\n\n  // **************************\n  // scope out for Day1\n  // **************************\n\n  // /**\n  //  * @dev transfers StartrailRegistry\n  //  * @param to address of the receiver\n  //  * @param tokenId uint256 of StartrailRegistryRecordID\n  //  * @param sig signature\n  //  */\n  // function transferSRRFrom(\n  //   address to,\n  //   uint256 tokenId,\n  //   Signature.Sig memory sig\n  // ) public validSender(sig) {\n  //   address signer = Signature.getAddress(sig);\n  //   require(ownerOf(tokenId) == signer, \"owner and signer do not match\");\n  //   super._transferFrom(signer, to, tokenId);\n\n  //   emit TransferSRRFrom(signer, to, tokenId);\n  // }\n\n  // /**\n  //  * @dev transfers StartrailRegistry\n  //  * @param from address of the current token owner\n  //  * @param to address of the receiver\n  //  * @param tokenId uint256 of StartrailRegistryRecordID\n  //  * @param _data bytes of private metadata\n  //  */\n  // function safeTransferSRRFrom(\n  //   address from,\n  //   address to,\n  //   uint256 tokenId,\n  //   bytes memory _data\n  // ) public {\n  //   super._safeTransferFrom(from, to, tokenId, _data);\n  //   emit SafeTransferSRRFrom(from, to, tokenId, _data);\n  //   address newOnwer = ownerOf(tokenId);\n  //   IRootLogic logic = IRootLogic(_rootLogicContract);\n  //   // logic.historyProvenance(tokenId, newOnwer, from, _data);\n  // }\n}\n",
  "sourcePath": "/Users/hasnaeen/startbahn/dev/startrail/app/token/contracts/StartrailRegistry.sol",
  "ast": {
    "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/token/contracts/StartrailRegistry.sol",
    "exportedSymbols": {
      "StartrailRegistry": [
        801
      ]
    },
    "id": 802,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 563,
        "literals": [
          "solidity",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 564,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 565,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 2313,
        "src": "59:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 566,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 1052,
        "src": "144:79:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/common/IStartrailRegistry.sol",
        "file": "../../common/IStartrailRegistry.sol",
        "id": 567,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 252,
        "src": "224:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/lib/contracts/IDGenerator.sol",
        "file": "../../lib/contracts/IDGenerator.sol",
        "id": 568,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 340,
        "src": "270:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/lib/contracts/Signature.sol",
        "file": "../../lib/contracts/Signature.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 354,
        "src": "316:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/common/IRootLogic.sol",
        "file": "../../common/IRootLogic.sol",
        "id": 570,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 224,
        "src": "360:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/common/IStartrailValidator.sol",
        "file": "../../common/IStartrailValidator.sol",
        "id": 571,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 308,
        "src": "398:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/name/contracts/NameRegistry.sol",
        "file": "../../name/contracts/NameRegistry.sol",
        "id": 572,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 505,
        "src": "445:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 573,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 378,
        "src": "493:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 574,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1051,
              "src": "571:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$1051",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "571:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 576,
              "name": "ERC721UpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2312,
              "src": "593:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721UpgradeSafe_$2312",
                "typeString": "contract ERC721UpgradeSafe"
              }
            },
            "id": 577,
            "nodeType": "InheritanceSpecifier",
            "src": "593:17:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 578,
              "name": "IStartrailRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 251,
              "src": "614:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailRegistry_$251",
                "typeString": "contract IStartrailRegistry"
              }
            },
            "id": 579,
            "nodeType": "InheritanceSpecifier",
            "src": "614:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 580,
              "name": "IStartrailValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 307,
              "src": "636:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailValidator_$307",
                "typeString": "contract IStartrailValidator"
              }
            },
            "id": 581,
            "nodeType": "InheritanceSpecifier",
            "src": "636:19:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 582,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "659:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$377",
                "typeString": "contract Contracts"
              }
            },
            "id": 583,
            "nodeType": "InheritanceSpecifier",
            "src": "659:9:8"
          }
        ],
        "contractDependencies": [
          251,
          307,
          377,
          846,
          921,
          1051,
          1126,
          1138,
          2312,
          2420,
          2448,
          2472
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 801,
        "linearizedBaseContracts": [
          801,
          377,
          307,
          251,
          2312,
          2448,
          2472,
          2420,
          1126,
          1138,
          1051,
          846,
          921
        ],
        "name": "StartrailRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 585,
            "mutability": "mutable",
            "name": "idNonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "705:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "705:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 587,
            "mutability": "mutable",
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "757:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 586,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "757:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "852:30:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 592,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "865:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "858:19:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7a6ce2e1",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMsgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 596,
                  "src": "843:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "842:9:8"
            },
            "scope": 801,
            "src": "798:84:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1199:155:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1205:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "1228:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1205:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1256:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1246:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:11:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1295:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1301:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1263:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__ERC721_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1435,
                      "src": "1263:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:45:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "OwnableUpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "1314:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeSafe_$1051_$",
                          "typeString": "type(contract OwnableUpgradeSafe)"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__Ownable_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "1314:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:35:8"
                }
              ]
            },
            "documentation": {
              "id": 597,
              "nodeType": "StructuredDocumentation",
              "src": "886:191:8",
              "text": " @dev Initializes the StartrailRegistry\n @param name string of the name\n @param symbol string of the symbol\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "077f224a",
            "id": 629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 605,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 894,
                  "src": "1187:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:11:8"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1105:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1129:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1155:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:80:8"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:8"
            },
            "scope": 801,
            "src": "1080:274:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              234
            ],
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1580:216:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 642,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1586:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1597:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1586:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:12:8"
                },
                {
                  "assignments": [
                    647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 671,
                      "src": "1604:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:15:8"
                },
                {
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "1628:54:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 649,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "1636:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 652,
                                "name": "idNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "1667:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "IDGenerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "1646:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDGenerator_$339_$",
                                  "typeString": "type(library IDGenerator)"
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "generate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 338,
                              "src": "1646:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1646:29:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1636:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1636:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1716:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1690:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "1690:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 661,
                  "nodeType": "DoWhileStatement",
                  "src": "1625:101:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "1755:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1763:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1731:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2026,
                      "src": "1731:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:40:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "1784:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 670,
                  "nodeType": "Return",
                  "src": "1777:14:8"
                }
              ]
            },
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "1358:100:8",
              "text": " @dev Creates a new StartrailRegistryRecordID\n @param sender address of the sender"
            },
            "functionSelector": "6a627842",
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 636,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "1535:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "1521:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1521:34:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 634,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1508:8:8"
            },
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1475:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:16:8"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1569:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1568:9:8"
            },
            "scope": 801,
            "src": "1461:335:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              243
            ],
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "2175:296:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "2222:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "ERC721UpgradeSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "2196:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                              "typeString": "type(contract ERC721UpgradeSafe)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1883,
                          "src": "2196:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2196:34:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2238:46:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2181:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:109:8"
                },
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 717,
                      "src": "2296:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2338:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2312:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "2312:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2296:50:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "2360:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "2368:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2360:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:38:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        },
                        "value": "ERC721: transfer caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2352:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:62:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 712,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2448:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "2454:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2458:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2420:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2165,
                      "src": "2420:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:46:8"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "1800:235:8",
              "text": " @dev Transfers the ownership of a given SRR ID to another address.\n @param from address of the current owner\n @param to address to receive the ownership\n @param tokenId uint256 ID of the SRR to be transferred"
            },
            "functionSelector": "109a037a",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 683,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2154:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 685,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 682,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "2140:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:34:8"
              }
            ],
            "name": "transferSRRFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 681,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2131:8:8"
            },
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2068:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2086:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2102:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:59:8"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2175:0:8"
            },
            "scope": 801,
            "src": "2038:433:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "2669:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "2675:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 727,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "2698:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2675:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:35:8"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "2475:127:8",
              "text": " @dev Sets the address of the NameRegistry contract\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "ddb8e350",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 723,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 996,
                  "src": "2659:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2659:9:8"
              }
            ],
            "name": "setNameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "2630:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2629:22:8"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:8"
            },
            "scope": 801,
            "src": "2605:110:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "2882:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 737,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2895:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 736,
                  "id": 739,
                  "nodeType": "Return",
                  "src": "2888:26:8"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "2719:99:8",
              "text": " @dev Gets the endpoint address of the RootLogic\n @return RootLogic proxy address"
            },
            "functionSelector": "0bdd4f50",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2849:2:8"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 741,
                  "src": "2873:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2872:9:8"
            },
            "scope": 801,
            "src": "2821:98:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "3091:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 747,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "3104:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 748,
                  "nodeType": "Return",
                  "src": "3097:27:8"
                }
              ]
            },
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "2923:101:8",
              "text": " @dev Gets the endpoint address of NameRegistry\n @return NameRegistry proxy address"
            },
            "functionSelector": "62b9bdc2",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:8"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 750,
                  "src": "3082:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:9:8"
            },
            "scope": 801,
            "src": "3027:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              250
            ],
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "3355:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 761,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "3394:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "3368:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "3368:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "3361:41:8"
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "3133:122:8",
              "text": " @dev Gets the owner address of the SRR\n @param tokenId uint256 of the SRR ID\n @return owner address"
            },
            "functionSelector": "5f915423",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSRROwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3313:8:8"
            },
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3279:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:17:8"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3344:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3343:9:8"
            },
            "scope": 801,
            "src": "3258:149:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "3551:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 771,
                    "name": "idNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "3564:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 770,
                  "id": 772,
                  "nodeType": "Return",
                  "src": "3557:14:8"
                }
              ]
            },
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "3411:85:8",
              "text": " @dev Gets the nonce from the storage\n @return idNonce from storage"
            },
            "functionSelector": "e36a3509",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdNonce",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:2:8"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 774,
                  "src": "3542:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3541:9:8"
            },
            "scope": 801,
            "src": "3499:77:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "3641:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3667:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 779,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "3654:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$504_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 782,
                  "nodeType": "Return",
                  "src": "3647:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3602:2:8"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 784,
                  "src": "3627:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$504",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 776,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 504,
                    "src": "3627:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:14:8"
            },
            "scope": 801,
            "src": "3580:113:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "3757:98:8",
              "statements": [
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 799,
                      "src": "3763:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3763:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3810:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 791,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "3790:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$504_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$504",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 454,
                      "src": "3790:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 797,
                    "name": "rootLogicAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 790,
                    "src": "3834:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "3827:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:8"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 800,
                  "src": "3748:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3747:9:8"
            },
            "scope": 801,
            "src": "3697:158:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 802,
        "src": "539:4670:8"
      }
    ],
    "src": "0:5210:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/token/contracts/StartrailRegistry.sol",
    "exportedSymbols": {
      "StartrailRegistry": [
        801
      ]
    },
    "id": 802,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 563,
        "literals": [
          "solidity",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 564,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "id": 565,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 2313,
        "src": "59:84:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol",
        "id": 566,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 1052,
        "src": "144:79:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/common/IStartrailRegistry.sol",
        "file": "../../common/IStartrailRegistry.sol",
        "id": 567,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 252,
        "src": "224:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/lib/contracts/IDGenerator.sol",
        "file": "../../lib/contracts/IDGenerator.sol",
        "id": 568,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 340,
        "src": "270:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/lib/contracts/Signature.sol",
        "file": "../../lib/contracts/Signature.sol",
        "id": 569,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 354,
        "src": "316:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/common/IRootLogic.sol",
        "file": "../../common/IRootLogic.sol",
        "id": 570,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 224,
        "src": "360:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/common/IStartrailValidator.sol",
        "file": "../../common/IStartrailValidator.sol",
        "id": 571,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 308,
        "src": "398:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/name/contracts/NameRegistry.sol",
        "file": "../../name/contracts/NameRegistry.sol",
        "id": 572,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 505,
        "src": "445:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hasnaeen/startbahn/dev/startrail/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 573,
        "nodeType": "ImportDirective",
        "scope": 802,
        "sourceUnit": 378,
        "src": "493:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 574,
              "name": "OwnableUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1051,
              "src": "571:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeSafe_$1051",
                "typeString": "contract OwnableUpgradeSafe"
              }
            },
            "id": 575,
            "nodeType": "InheritanceSpecifier",
            "src": "571:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 576,
              "name": "ERC721UpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2312,
              "src": "593:17:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721UpgradeSafe_$2312",
                "typeString": "contract ERC721UpgradeSafe"
              }
            },
            "id": 577,
            "nodeType": "InheritanceSpecifier",
            "src": "593:17:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 578,
              "name": "IStartrailRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 251,
              "src": "614:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailRegistry_$251",
                "typeString": "contract IStartrailRegistry"
              }
            },
            "id": 579,
            "nodeType": "InheritanceSpecifier",
            "src": "614:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 580,
              "name": "IStartrailValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 307,
              "src": "636:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailValidator_$307",
                "typeString": "contract IStartrailValidator"
              }
            },
            "id": 581,
            "nodeType": "InheritanceSpecifier",
            "src": "636:19:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 582,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "659:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$377",
                "typeString": "contract Contracts"
              }
            },
            "id": 583,
            "nodeType": "InheritanceSpecifier",
            "src": "659:9:8"
          }
        ],
        "contractDependencies": [
          251,
          307,
          377,
          846,
          921,
          1051,
          1126,
          1138,
          2312,
          2420,
          2448,
          2472
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 801,
        "linearizedBaseContracts": [
          801,
          377,
          307,
          251,
          2312,
          2448,
          2472,
          2420,
          1126,
          1138,
          1051,
          846,
          921
        ],
        "name": "StartrailRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 585,
            "mutability": "mutable",
            "name": "idNonce",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "705:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 584,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "705:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 587,
            "mutability": "mutable",
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 801,
            "src": "757:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 586,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "757:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "852:30:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 592,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "865:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 594,
                  "nodeType": "Return",
                  "src": "858:19:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7a6ce2e1",
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMsgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 596,
                  "src": "843:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "842:9:8"
            },
            "scope": 801,
            "src": "798:84:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 628,
              "nodeType": "Block",
              "src": "1199:155:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "1205:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 609,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "1228:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1205:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1246:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1256:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1246:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:11:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1295:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1301:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1263:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__ERC721_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1435,
                      "src": "1263:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 622,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:45:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 623,
                        "name": "OwnableUpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "1314:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeSafe_$1051_$",
                          "typeString": "type(contract OwnableUpgradeSafe)"
                        }
                      },
                      "id": 625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__Ownable_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 951,
                      "src": "1314:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:35:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 627,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:35:8"
                }
              ]
            },
            "documentation": {
              "id": 597,
              "nodeType": "StructuredDocumentation",
              "src": "886:191:8",
              "text": " @dev Initializes the StartrailRegistry\n @param name string of the name\n @param symbol string of the symbol\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "077f224a",
            "id": 629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 605,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 894,
                  "src": "1187:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1187:11:8"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1105:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1129:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 603,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 629,
                  "src": "1155:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:80:8"
            },
            "returnParameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1199:0:8"
            },
            "scope": 801,
            "src": "1080:274:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              234
            ],
            "body": {
              "id": 671,
              "nodeType": "Block",
              "src": "1580:216:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 642,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "1586:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1597:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1586:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:12:8"
                },
                {
                  "assignments": [
                    647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 671,
                      "src": "1604:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1604:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1604:15:8"
                },
                {
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "1628:54:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 649,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "1636:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 652,
                                "name": "idNonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "1667:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 650,
                                "name": "IDGenerator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 339,
                                "src": "1646:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IDGenerator_$339_$",
                                  "typeString": "type(library IDGenerator)"
                                }
                              },
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "generate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 338,
                              "src": "1646:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1646:29:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1636:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "1636:39:8"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1716:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1690:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "1690:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 661,
                  "nodeType": "DoWhileStatement",
                  "src": "1625:101:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 665,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "1755:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 647,
                        "src": "1763:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 662,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "1731:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2026,
                      "src": "1731:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 668,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:40:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 647,
                    "src": "1784:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 641,
                  "id": 670,
                  "nodeType": "Return",
                  "src": "1777:14:8"
                }
              ]
            },
            "documentation": {
              "id": 630,
              "nodeType": "StructuredDocumentation",
              "src": "1358:100:8",
              "text": " @dev Creates a new StartrailRegistryRecordID\n @param sender address of the sender"
            },
            "functionSelector": "6a627842",
            "id": 672,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 636,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "1535:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 638,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "1521:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1521:34:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 634,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1508:8:8"
            },
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 632,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1475:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1474:16:8"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 672,
                  "src": "1569:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1568:9:8"
            },
            "scope": 801,
            "src": "1461:335:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              243
            ],
            "body": {
              "id": 717,
              "nodeType": "Block",
              "src": "2175:296:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 690,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "2222:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 688,
                            "name": "ERC721UpgradeSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "2196:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                              "typeString": "type(contract ERC721UpgradeSafe)"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1883,
                          "src": "2196:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2196:34:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2238:46:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2181:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:109:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:109:8"
                },
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 717,
                      "src": "2296:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2296:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 701,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 699,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2338:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2312:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "2312:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2296:50:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "2360:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 704,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "2368:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2360:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:38:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        },
                        "value": "ERC721: transfer caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dce9a24ac4b08c30c5106230fc0e4901393bc28cce0a42d2cb0eb5cd656cd6c5",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2352:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:62:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "2352:62:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 712,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2448:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "2454:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 714,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "2458:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "2420:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2165,
                      "src": "2420:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:46:8"
                }
              ]
            },
            "documentation": {
              "id": 673,
              "nodeType": "StructuredDocumentation",
              "src": "1800:235:8",
              "text": " @dev Transfers the ownership of a given SRR ID to another address.\n @param from address of the current owner\n @param to address to receive the ownership\n @param tokenId uint256 ID of the SRR to be transferred"
            },
            "functionSelector": "109a037a",
            "id": 718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 683,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2154:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2154:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 685,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 682,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "2140:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2140:34:8"
              }
            ],
            "name": "transferSRRFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 681,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2131:8:8"
            },
            "parameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2068:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2086:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 718,
                  "src": "2102:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:59:8"
            },
            "returnParameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2175:0:8"
            },
            "scope": 801,
            "src": "2038:433:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "2669:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 726,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "2675:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 727,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 721,
                      "src": "2698:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2675:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:35:8"
                }
              ]
            },
            "documentation": {
              "id": 719,
              "nodeType": "StructuredDocumentation",
              "src": "2475:127:8",
              "text": " @dev Sets the address of the NameRegistry contract\n @param nameRegistry address of the NameRegistry contract"
            },
            "functionSelector": "ddb8e350",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 724,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 723,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 996,
                  "src": "2659:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2659:9:8"
              }
            ],
            "name": "setNameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 731,
                  "src": "2630:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2629:22:8"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2669:0:8"
            },
            "scope": 801,
            "src": "2605:110:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 740,
              "nodeType": "Block",
              "src": "2882:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 737,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 800,
                      "src": "2895:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 736,
                  "id": 739,
                  "nodeType": "Return",
                  "src": "2888:26:8"
                }
              ]
            },
            "documentation": {
              "id": 732,
              "nodeType": "StructuredDocumentation",
              "src": "2719:99:8",
              "text": " @dev Gets the endpoint address of the RootLogic\n @return RootLogic proxy address"
            },
            "functionSelector": "0bdd4f50",
            "id": 741,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2849:2:8"
            },
            "returnParameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 741,
                  "src": "2873:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2872:9:8"
            },
            "scope": 801,
            "src": "2821:98:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 749,
              "nodeType": "Block",
              "src": "3091:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 747,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 587,
                    "src": "3104:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 746,
                  "id": 748,
                  "nodeType": "Return",
                  "src": "3097:27:8"
                }
              ]
            },
            "documentation": {
              "id": 742,
              "nodeType": "StructuredDocumentation",
              "src": "2923:101:8",
              "text": " @dev Gets the endpoint address of NameRegistry\n @return NameRegistry proxy address"
            },
            "functionSelector": "62b9bdc2",
            "id": 750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:8"
            },
            "returnParameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 750,
                  "src": "3082:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:9:8"
            },
            "scope": 801,
            "src": "3027:102:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              250
            ],
            "body": {
              "id": 764,
              "nodeType": "Block",
              "src": "3355:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 761,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "3394:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 759,
                        "name": "ERC721UpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2312,
                        "src": "3368:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721UpgradeSafe_$2312_$",
                          "typeString": "type(contract ERC721UpgradeSafe)"
                        }
                      },
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1507,
                      "src": "3368:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 758,
                  "id": 763,
                  "nodeType": "Return",
                  "src": "3361:41:8"
                }
              ]
            },
            "documentation": {
              "id": 751,
              "nodeType": "StructuredDocumentation",
              "src": "3133:122:8",
              "text": " @dev Gets the owner address of the SRR\n @param tokenId uint256 of the SRR ID\n @return owner address"
            },
            "functionSelector": "5f915423",
            "id": 765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSRROwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3313:8:8"
            },
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3279:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3278:17:8"
            },
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 757,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 765,
                  "src": "3344:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3343:9:8"
            },
            "scope": 801,
            "src": "3258:149:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "3551:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 771,
                    "name": "idNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 585,
                    "src": "3564:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 770,
                  "id": 772,
                  "nodeType": "Return",
                  "src": "3557:14:8"
                }
              ]
            },
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "3411:85:8",
              "text": " @dev Gets the nonce from the storage\n @return idNonce from storage"
            },
            "functionSelector": "e36a3509",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdNonce",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:2:8"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 769,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 774,
                  "src": "3542:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3541:9:8"
            },
            "scope": 801,
            "src": "3499:77:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "3641:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "3667:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 779,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "3654:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$504_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3654:34:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 778,
                  "id": 782,
                  "nodeType": "Return",
                  "src": "3647:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3602:2:8"
            },
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 777,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 784,
                  "src": "3627:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$504",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 776,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 504,
                    "src": "3627:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$504",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3626:14:8"
            },
            "scope": 801,
            "src": "3580:113:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "3757:98:8",
              "statements": [
                {
                  "assignments": [
                    790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 799,
                      "src": "3763:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 789,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3763:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 796,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 794,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3810:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 791,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "3790:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$504_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$504",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 454,
                      "src": "3790:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3790:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 797,
                    "name": "rootLogicAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 790,
                    "src": "3834:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 798,
                  "nodeType": "Return",
                  "src": "3827:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogicAddress",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3723:2:8"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 800,
                  "src": "3748:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3748:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3747:9:8"
            },
            "scope": 801,
            "src": "3697:158:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 802,
        "src": "539:4670:8"
      }
    ],
    "src": "0:5210:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.11+commit.5ef660b1.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {
        "IDGenerator": "0x967b25a7c3126fF825c5FC3a6d50E646979F4Ae6"
      },
      "address": "0xb809142f9EA8d8a8022c861F7Ed82896EaDa11C5",
      "transactionHash": "0x4b33120b111056dfc150c20385788b2c5ac33a020056762315178d5c15152fb7"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-19T06:33:15.350Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "getIdNonce()": {
        "details": "Gets the nonce from the storage",
        "returns": {
          "_0": "idNonce from storage"
        }
      },
      "getNameRegistryAddress()": {
        "details": "Gets the endpoint address of NameRegistry",
        "returns": {
          "_0": "NameRegistry proxy address"
        }
      },
      "getRootLogicAddress()": {
        "details": "Gets the endpoint address of the RootLogic",
        "returns": {
          "_0": "RootLogic proxy address"
        }
      },
      "getSRROwner(uint256)": {
        "details": "Gets the owner address of the SRR",
        "params": {
          "tokenId": "uint256 of the SRR ID"
        },
        "returns": {
          "_0": "owner address"
        }
      },
      "initialize(string,string,address)": {
        "details": "Initializes the StartrailRegistry",
        "params": {
          "name": "string of the name",
          "nameRegistry": "address of the NameRegistry contract",
          "symbol": "string of the symbol"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "mint(address)": {
        "details": "Creates a new StartrailRegistryRecordID",
        "params": {
          "sender": "address of the sender"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "setNameRegistry(address)": {
        "details": "Sets the address of the NameRegistry contract",
        "params": {
          "nameRegistry": "address of the NameRegistry contract"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |=== Requirements: - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferSRRFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given SRR ID to another address.",
        "params": {
          "from": "address of the current owner",
          "to": "address to receive the ownership",
          "tokenId": "uint256 ID of the SRR to be transferred"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}