{
  "contractName": "StartrailRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferSRRFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "nameRegistry",
          "type": "address"
        }
      ],
      "name": "setNameRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRootLogicAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNameRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getSRROwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getIdNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getIdNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNameRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRootLogicAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSRROwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"nameRegistry\",\"type\":\"address\"}],\"name\":\"setNameRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferSRRFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"getIdNonce()\":{\"details\":\"Gets the nonce from the storage\",\"return\":\"idNonce from storage\"},\"getNameRegistryAddress()\":{\"details\":\"Gets the endpoint address of NameRegistry\",\"return\":\"NameRegistry proxy address\"},\"getRootLogicAddress()\":{\"details\":\"Gets the endpoint address of the RootLogic\",\"return\":\"RootLogic proxy address\"},\"getSRROwner(uint256)\":{\"details\":\"Gets the owner address of the SRR\",\"params\":{\"tokenId\":\"uint256 of the SRR ID\"},\"return\":\"owner address\"},\"initialize()\":{\"details\":\"Constructor function.\"},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"initialize(string,string,address)\":{\"details\":\"Initializes the StartrailRegistry\",\"params\":{\"name\":\"string of the name\",\"nameRegistry\":\"address of the NameRegistry contract\",\"symbol\":\"string of the symbol\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address)\":{\"details\":\"Creates a new StartrailRegistryRecordID\",\"params\":{\"sender\":\"address of the sender\"}},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setNameRegistry(address)\":{\"details\":\"Sets the address of the NameRegistry contract\",\"params\":{\"nameRegistry\":\"address of the NameRegistry contract\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferSRRFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given SRR ID to another address.\",\"params\":{\"from\":\"address of the current owner\",\"to\":\"address to receive the ownership\",\"tokenId\":\"uint256 ID of the SRR to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/root/project/app/token/contracts/StartrailRegistry.sol\":\"StartrailRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/project/app/common/IRootLogic.sol\":{\"keccak256\":\"0x330721feb5a1aad3d5fdd3e57abe0e28cdfeab3c9ee2ca5563c56696cda62d25\",\"urls\":[\"bzz-raw://4a15f25fbfed8cfd2801a6628937a03c9be5184b1eb5ba73c4816dce246330ff\",\"dweb:/ipfs/QmRxJfvuZdx5Huz92zrRqwzXMfFSJXimyP7hN7vmfTQEft\"]},\"/root/project/app/common/IStartrailRegistry.sol\":{\"keccak256\":\"0x8780124ee565286c44b23f9f305f84b357b080a60c6f8a0497f9fe59913bd117\",\"urls\":[\"bzz-raw://cc6325bb8ea1be56dc90d9d65547fbfcb28eee90a5557fcad9f7c1f170e51e23\",\"dweb:/ipfs/QmbmhXtRzKNGyXwxcLoNjkWekDbPXT5N7oh1PqRsW9TPNs\"]},\"/root/project/app/common/IStartrailValidator.sol\":{\"keccak256\":\"0xf9272959e7a07812d327673dc816e7abce0cee1a7e4782c77f960ef1211ff285\",\"urls\":[\"bzz-raw://caf7b107b5f711a9df1d2b7c034e1811ca320a36af07e92453b22d64653a6ee0\",\"dweb:/ipfs/QmQbVJ3SLzeJuEG8pMynAQkmCZsGpsgyFXFtfVymhhfXqs\"]},\"/root/project/app/lib/contracts/IDGenerator.sol\":{\"keccak256\":\"0x007ed1dcd99a926644468e7e1fcf357c3478bcfcbe6228157405f7dc0dc0bf71\",\"urls\":[\"bzz-raw://fc3a83b3700c845e49c224d16535459ede102b8efdc1b26a6cf52a43a5218a7f\",\"dweb:/ipfs/QmSeMuBwYV2A175YgYSAL1zJFEpjZfjntgZ9X459o7zcQU\"]},\"/root/project/app/lib/contracts/Signature.sol\":{\"keccak256\":\"0xce931ee1d7679305e0f6992f6fe3b7494c1947d6693a3344546287e4c1594736\",\"urls\":[\"bzz-raw://d1d7eece7962bd52df2dc1c2b23d5e697558fd1114c3fd63cd0b7348965f8e99\",\"dweb:/ipfs/QmZvVxqbE6L8we11gmX4J1fxXDBcze5JNNYuvpHgtqqEAo\"]},\"/root/project/app/name/contracts/Contracts.sol\":{\"keccak256\":\"0xd4be1647011bae8f73d33aa7f87bced4ed6976c5b2076a4bdb902434785be74a\",\"urls\":[\"bzz-raw://09baf268f86ddd202e547708401a73e97bbcdb2acceca312d05a8527f9ae9fef\",\"dweb:/ipfs/QmcvUa5P5B8ikbKT4Msoztid5F3DgfYZj2e6HWPthV3mca\"]},\"/root/project/app/name/contracts/NameRegistry.sol\":{\"keccak256\":\"0x47ce8dfc16cf3e72498b1d5c460c65e108e5aab5479f167b479976fd688faaf9\",\"urls\":[\"bzz-raw://0182dcab300954227c92df346a4b410b7292825aed9b56151968b5b0bde3a8e1\",\"dweb:/ipfs/QmYSXFTGWpF2uXxxLyqsexjvjydEAxSBMzKmqJhXuR7zLr\"]},\"/root/project/app/token/contracts/StartrailRegistry.sol\":{\"keccak256\":\"0x229ec24496b841a1f71823203ae6f6a7fc23eb7e556f100256df78c713bdd12f\",\"urls\":[\"bzz-raw://8e36d112e50d725db94688433c7b8a3881640b6bd0db4543b3a5823ac0e3cdbc\",\"dweb:/ipfs/QmchwP4GtPbRfcmMMsqSgpyGnTFTNuuA7twcM6dSC38FL6\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzz-raw://b736ddad8143f8f1cd13c20809d4ebce5f5a8c7725081b0b703294078bd506d1\",\"dweb:/ipfs/QmdhTWCXFCuwG9JaPMjwnhkQoDj9su8R7KMPNvD5z9KeWD\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcc02740f27fa64fcd3237e531390e7091c0d1a597c1e3c315412e6edfcb56e98\",\"urls\":[\"bzz-raw://435140748ea8a6aef64fb8be8e92547bc73b55715487959f8a38cae981c3be5b\",\"dweb:/ipfs/QmWzaYxa7Bvpb8AifSw3Au6hB2VdevwL66xyzr6objJoqs\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x46b471beac241540af38bf756c5c15b1662ede1c6826bdbda1865daa975e17e2\",\"urls\":[\"bzz-raw://284575184b15dc9e8f2d5b5fe0af433348ab272f35715d63b78e9824e735f200\",\"dweb:/ipfs/QmfRwqexUjB4bBtmxsYBQa631jLAVPBgjoXUcGRrh3d7iA\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0xab7e889faecf8ec36150e7a3837819cb30c46a46f53eaac72ac1f8e1d824d150\",\"urls\":[\"bzz-raw://b2e7ae9ad2df0fd4d1916d8c5af0f9df214a8986ad7fa49cf656affbd5778cf5\",\"dweb:/ipfs/QmXScSEGENRaqaq95SqtQUDG1UXNi58fB8USMRM5HqwMqb\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x05716424b99aa883c7dd4eb4c32cd75a19c9fdfddaede038dd5fb1da2377e21e\",\"urls\":[\"bzz-raw://1f34d0a534e323b399b66cd212b3caafb7d257398999eacb6153a7850931f0c7\",\"dweb:/ipfs/QmcpNsTGmbGyGM8SvbusKbCW4FWQSka3u3rxVLY1bAwajq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x6a3efb9d8c3c6467f308592675407fceae553543d90c287d4f7370b7c2638774\",\"urls\":[\"bzz-raw://5f003d160f9b7a296d724fd58e3ef545dab049536d089d0e5af4c9984db55a7e\",\"dweb:/ipfs/QmaZHGFYVa89vvjHq7uxQhg3P5vaAhY323VYEpuuma4us2\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xf83b0e3cfc9d22e6ab413d8881a7e55384a9ebfd1d78ab8b9ce4f0cb6ee2fcf8\",\"urls\":[\"bzz-raw://e618ab3e1bb35d7f98c80213b5c0d563c3d47ecf9bf701b0cce3b1bcbefe815a\",\"dweb:/ipfs/QmeRYHm9BZ67gM4QCdrN3mecRAbVMrB3pRoo26jwoZWvdr\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x6080604052613f01806100136000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063ddb8e35011610071578063ddb8e3501461057c578063e36a350914610598578063e985e9c5146105b6578063f2fde38b146105e6576101e5565b8063a22cb465146104f8578063b88d4fde14610514578063c4d66de814610530578063c87b56dd1461054c576101e5565b80638129fc1c116100de5780638129fc1c146104945780638da5cb5b1461049e5780638f32d59b146104bc57806395d89b41146104da576101e5565b80636352211e146103fa5780636a6278421461042a57806370a082311461045a578063715018a61461048a576101e5565b806318160ddd116101875780634cd88b76116101565780634cd88b76146103605780634f6ccce71461037c5780635f915423146103ac57806362b9bdc2146103dc576101e5565b806318160ddd146102da57806323b872dd146102f85780632f745c591461031457806342842e0e14610344576101e5565b8063081812fc116101c3578063081812fc14610254578063095ea7b3146102845780630bdd4f50146102a0578063109a037a146102be576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063077f224a14610238575b600080fd5b61020460048036036101ff9190810190612edc565b610602565b6040516102119190613968565b60405180910390f35b61022261066a565b60405161022f91906139a5565b60405180910390f35b610252600480360361024d9190810190612f9a565b61070d565b005b61026e60048036036102699190810190613019565b610867565b60405161027b9190613901565b60405180910390f35b61029e60048036036102999190810190612ea0565b6108ec565b005b6102a8610aa7565b6040516102b59190613901565b60405180910390f35b6102d860048036036102d39190810190612d9a565b610ab6565b005b6102e2610b3d565b6040516102ef9190613c67565b60405180910390f35b610312600480360361030d9190810190612d9a565b610b4a565b005b61032e60048036036103299190810190612ea0565b610baa565b60405161033b9190613c67565b60405180910390f35b61035e60048036036103599190810190612d9a565b610c53565b005b61037a60048036036103759190810190612f2e565b610c73565b005b61039660048036036103919190810190613019565b610daf565b6040516103a39190613c67565b60405180910390f35b6103c660048036036103c19190810190613019565b610e19565b6040516103d39190613901565b60405180910390f35b6103e4610e2b565b6040516103f19190613901565b60405180910390f35b610414600480360361040f9190810190613019565b610e56565b6040516104219190613901565b60405180910390f35b610444600480360361043f9190810190612d0c565b610f08565b6040516104519190613c67565b60405180910390f35b610474600480360361046f9190810190612d0c565b611034565b6040516104819190613c67565b60405180910390f35b6104926110f3565b005b61049c6111fb565b005b6104a6611305565b6040516104b39190613901565b60405180910390f35b6104c461132f565b6040516104d19190613968565b60405180910390f35b6104e261138e565b6040516104ef91906139a5565b60405180910390f35b610512600480360361050d9190810190612e64565b611431565b005b61052e60048036036105299190810190612de9565b6115b2565b005b61054a60048036036105459190810190612d0c565b611614565b005b61056660048036036105619190810190613019565b6117bc565b60405161057391906139a5565b60405180910390f35b61059660048036036105919190810190612d0c565b6118ba565b005b6105a0611946565b6040516105ad9190613c67565b60405180910390f35b6105d060048036036105cb9190810190612d5e565b611951565b6040516105dd9190613968565b60405180910390f35b61060060048036036105fb9190810190612d0c565b6119e5565b005b600060666000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606101058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b5050505050905090565b600060019054906101000a900460ff168061072c575061072b611a38565b5b8061074357506000809054906101000a900460ff16155b610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077990613b87565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107d2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6107da611a4f565b6107e26111fb565b6107ec8484610c73565b8161016d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600161016c8190555061084033611614565b80156108615760008060016101000a81548160ff0219169083151502179055505b50505050565b600061087282611b50565b6108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890613b47565b60405180910390fd5b609a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006108f782610e56565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095f90613be7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610987611bc2565b73ffffffffffffffffffffffffffffffffffffffff1614806109b657506109b5816109b0611bc2565b611951565b5b6109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ec90613ac7565b60405180910390fd5b82609a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610ab1611bca565b905090565b610abe611bca565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2390613c47565b60405180910390fd5b610b37848484611c9b565b50505050565b600060d180549050905090565b610b5b610b55611bc2565b82611cbf565b610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9190613c07565b60405180910390fd5b610ba5838383611c9b565b505050565b6000610bb583611034565b8210610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed906139c7565b60405180910390fd5b60cf60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c4057fe5b9060005260206000200154905092915050565b610c6e838383604051806020016040528060008152506115b2565b505050565b600060019054906101000a900460ff1680610c925750610c91611a38565b5b80610ca957506000809054906101000a900460ff16155b610ce8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdf90613b87565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d38576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d40611d9d565b610d4957600080fd5b826101059080519060200190610d60929190612b00565b50816101069080519060200190610d78929190612b00565b50610d89635b5e139f60e01b611db4565b8015610daa5760008060016101000a81548160ff0219169083151502179055505b505050565b6000610db9610b3d565b8210610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df190613c27565b60405180910390fd5b60d18281548110610e0757fe5b90600052602060002001549050919050565b6000610e2482610e56565b9050919050565b600061016d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806099600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690613b07565b60405180910390fd5b80915050919050565b6000610f12611bca565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790613c47565b60405180910390fd5b600161016c60008282540192505081905550600073__IDGenerator___________________________634a7dd52361016c546040518263ffffffff1660e01b8152600401610fce9190613c82565b60206040518083038186803b158015610fe657600080fd5b505af4158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061101e9190810190613042565b905061102a8482611e8a565b8092505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c90613ae7565b60405180910390fd5b6110ec609b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611eab565b9050919050565b6110fb61132f565b61113a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113190613b67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff168061121a5750611219611a38565b5b8061123157506000809054906101000a900460ff16155b611270576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126790613b87565b60405180910390fd5b60008060019054906101000a900460ff1615905080156112c0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6112c8611d9d565b6112d157600080fd5b6112e163780e9d6360e01b611db4565b80156113025760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611372611bc2565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60606101068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114275780601f106113fc57610100808354040283529160200191611427565b820191906000526020600020905b81548152906001019060200180831161140a57829003601f168201915b5050505050905090565b611439611bc2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149e90613a87565b60405180910390fd5b80609c60006114b4611bc2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611561611bc2565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115a69190613968565b60405180910390a35050565b6115c36115bd611bc2565b83611cbf565b611602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f990613c07565b60405180910390fd5b61160e84848484611eb9565b50505050565b600060019054906101000a900460ff16806116335750611632611a38565b5b8061164a57506000809054906101000a900460ff16155b611689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168090613b87565b60405180910390fd5b60008060019054906101000a900460ff1615905080156116d9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156117b85760008060016101000a81548160ff0219169083151502179055505b5050565b60606117c782611b50565b611806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fd90613bc7565b60405180910390fd5b61010760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ae5780601f10611883576101008083540402835291602001916118ae565b820191906000526020600020905b81548152906001019060200180831161189157829003601f168201915b50505050509050919050565b6118c261132f565b611901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f890613b67565b60405180910390fd5b8061016d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061016c54905090565b6000609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6119ed61132f565b611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2390613b67565b60405180910390fd5b611a3581611f15565b50565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff1680611a6e5750611a6d611a38565b5b80611a8557506000809054906101000a900460ff16155b611ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abb90613b87565b60405180910390fd5b60008060019054906101000a900460ff161590508015611b14576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611b1c612045565b611b2c6380ac58cd60e01b611db4565b8015611b4d5760008060016101000a81548160ff0219169083151502179055505b50565b6000806099600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600080611bd561213e565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280600a81526020017f524f4f545f4c4f474943000000000000000000000000000000000000000000008152506040518263ffffffff1660e01b8152600401611c429190613983565b60206040518083038186803b158015611c5a57600080fd5b505afa158015611c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c929190810190612d35565b90508091505090565b611ca6838383612169565b611cb08382612398565b611cba8282612536565b505050565b6000611cca82611b50565b611d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0090613aa7565b60405180910390fd5b6000611d1483610e56565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d8357508373ffffffffffffffffffffffffffffffffffffffff16611d6b84610867565b73ffffffffffffffffffffffffffffffffffffffff16145b80611d945750611d938185611951565b5b91505092915050565b6000611daf6380ac58cd60e01b610602565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415611e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1490613a27565b60405180910390fd5b600160666000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b611e9482826125fd565b611e9e8282612536565b611ea7816127af565b5050565b600081600001549050919050565b611ec4848484611c9b565b611ed0848484846127fb565b611f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f06906139e7565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7c90613a07565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900460ff16806120645750612063611a38565b5b8061207b57506000809054906101000a900460ff16155b6120ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b190613b87565b60405180910390fd5b60008060019054906101000a900460ff16159050801561210a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61211a6301ffc9a760e01b611db4565b801561213b5760008060016101000a81548160ff0219169083151502179055505b50565b600061016d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8273ffffffffffffffffffffffffffffffffffffffff1661218982610e56565b73ffffffffffffffffffffffffffffffffffffffff16146121df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d690613ba7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561224f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224690613a67565b60405180910390fd5b61225881612919565b61229f609b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129d7565b6122e6609b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129fa565b816099600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006123f0600160cf60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612a1090919063ffffffff16565b9050600060d060008481526020019081526020016000205490508181146124dd57600060cf60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061245d57fe5b906000526020600020015490508060cf60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106124b557fe5b90600052602060002001819055508160d0600083815260200190815260200160002081905550505b60cf60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361252f9190612b80565b5050505050565b60cf60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905060d060008381526020019081526020016000208190555060cf60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561266d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266490613b27565b60405180910390fd5b61267681611b50565b156126b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126ad90613a47565b60405180910390fd5b816099600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061274f609b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129fa565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60d18054905060d260008381526020019081526020016000208190555060d181908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600061281c8473ffffffffffffffffffffffffffffffffffffffff16612a5a565b6128295760019050612911565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261284f611bc2565b8887876040518563ffffffff1660e01b8152600401612871949392919061391c565b602060405180830381600087803b15801561288b57600080fd5b505af115801561289f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128c39190810190612f05565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff16609a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129d4576000609a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6129ef60018260000154612a1090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612a5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612aa5565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015612a9c5750808214155b92505050919050565b6000838311158290612aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ae491906139a5565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b4157805160ff1916838001178555612b6f565b82800160010185558215612b6f579182015b82811115612b6e578251825591602001919060010190612b53565b5b509050612b7c9190612bac565b5090565b815481835581811115612ba757818360005260206000209182019101612ba69190612bac565b5b505050565b612bce91905b80821115612bca576000816000905550600101612bb2565b5090565b90565b600081359050612be081613e62565b92915050565b600081519050612bf581613e62565b92915050565b600081359050612c0a81613e79565b92915050565b600081359050612c1f81613e90565b92915050565b600081519050612c3481613e90565b92915050565b600082601f830112612c4b57600080fd5b8135612c5e612c5982613cca565b613c9d565b91508082526020830160208301858383011115612c7a57600080fd5b612c85838284613e0f565b50505092915050565b600082601f830112612c9f57600080fd5b8135612cb2612cad82613cf6565b613c9d565b91508082526020830160208301858383011115612cce57600080fd5b612cd9838284613e0f565b50505092915050565b600081359050612cf181613ea7565b92915050565b600081519050612d0681613ea7565b92915050565b600060208284031215612d1e57600080fd5b6000612d2c84828501612bd1565b91505092915050565b600060208284031215612d4757600080fd5b6000612d5584828501612be6565b91505092915050565b60008060408385031215612d7157600080fd5b6000612d7f85828601612bd1565b9250506020612d9085828601612bd1565b9150509250929050565b600080600060608486031215612daf57600080fd5b6000612dbd86828701612bd1565b9350506020612dce86828701612bd1565b9250506040612ddf86828701612ce2565b9150509250925092565b60008060008060808587031215612dff57600080fd5b6000612e0d87828801612bd1565b9450506020612e1e87828801612bd1565b9350506040612e2f87828801612ce2565b925050606085013567ffffffffffffffff811115612e4c57600080fd5b612e5887828801612c3a565b91505092959194509250565b60008060408385031215612e7757600080fd5b6000612e8585828601612bd1565b9250506020612e9685828601612bfb565b9150509250929050565b60008060408385031215612eb357600080fd5b6000612ec185828601612bd1565b9250506020612ed285828601612ce2565b9150509250929050565b600060208284031215612eee57600080fd5b6000612efc84828501612c10565b91505092915050565b600060208284031215612f1757600080fd5b6000612f2584828501612c25565b91505092915050565b60008060408385031215612f4157600080fd5b600083013567ffffffffffffffff811115612f5b57600080fd5b612f6785828601612c8e565b925050602083013567ffffffffffffffff811115612f8457600080fd5b612f9085828601612c8e565b9150509250929050565b600080600060608486031215612faf57600080fd5b600084013567ffffffffffffffff811115612fc957600080fd5b612fd586828701612c8e565b935050602084013567ffffffffffffffff811115612ff257600080fd5b612ffe86828701612c8e565b925050604061300f86828701612bd1565b9150509250925092565b60006020828403121561302b57600080fd5b600061303984828501612ce2565b91505092915050565b60006020828403121561305457600080fd5b600061306284828501612cf7565b91505092915050565b61307481613dd9565b82525050565b61308381613d65565b82525050565b61309281613d77565b82525050565b60006130a382613d22565b6130ad8185613d43565b93506130bd818560208601613e1e565b6130c681613e51565b840191505092915050565b60006130dc82613d38565b6130e68185613d54565b93506130f6818560208601613e1e565b6130ff81613e51565b840191505092915050565b600061311582613d2d565b61311f8185613d54565b935061312f818560208601613e1e565b61313881613e51565b840191505092915050565b6000613150602b83613d54565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006131b6603283613d54565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061321c602683613d54565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613282601c83613d54565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006132c2601c83613d54565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000613302602483613d54565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613368601983613d54565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006133a8602c83613d54565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061340e603883613d54565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613474602a83613d54565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006134da602983613d54565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613540602083613d54565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000613580602c83613d54565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006135e6602083613d54565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000613626602e83613d54565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b600061368c602983613d54565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006136f2602f83613d54565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613758602183613d54565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006137be603183613d54565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613824602c83613d54565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b600061388a602883613d54565b91507f5468652073656e646572206973206e6f742074686520526f6f744c6f6769632060008301527f636f6e74726163740000000000000000000000000000000000000000000000006020830152604082019050919050565b6138ec81613dcf565b82525050565b6138fb81613dcf565b82525050565b6000602082019050613916600083018461307a565b92915050565b6000608082019050613931600083018761306b565b61393e602083018661307a565b61394b60408301856138e3565b818103606083015261395d8184613098565b905095945050505050565b600060208201905061397d6000830184613089565b92915050565b6000602082019050818103600083015261399d818461310a565b905092915050565b600060208201905081810360008301526139bf81846130d1565b905092915050565b600060208201905081810360008301526139e081613143565b9050919050565b60006020820190508181036000830152613a00816131a9565b9050919050565b60006020820190508181036000830152613a208161320f565b9050919050565b60006020820190508181036000830152613a4081613275565b9050919050565b60006020820190508181036000830152613a60816132b5565b9050919050565b60006020820190508181036000830152613a80816132f5565b9050919050565b60006020820190508181036000830152613aa08161335b565b9050919050565b60006020820190508181036000830152613ac08161339b565b9050919050565b60006020820190508181036000830152613ae081613401565b9050919050565b60006020820190508181036000830152613b0081613467565b9050919050565b60006020820190508181036000830152613b20816134cd565b9050919050565b60006020820190508181036000830152613b4081613533565b9050919050565b60006020820190508181036000830152613b6081613573565b9050919050565b60006020820190508181036000830152613b80816135d9565b9050919050565b60006020820190508181036000830152613ba081613619565b9050919050565b60006020820190508181036000830152613bc08161367f565b9050919050565b60006020820190508181036000830152613be0816136e5565b9050919050565b60006020820190508181036000830152613c008161374b565b9050919050565b60006020820190508181036000830152613c20816137b1565b9050919050565b60006020820190508181036000830152613c4081613817565b9050919050565b60006020820190508181036000830152613c608161387d565b9050919050565b6000602082019050613c7c60008301846138e3565b92915050565b6000602082019050613c9760008301846138f2565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613cc057600080fd5b8060405250919050565b600067ffffffffffffffff821115613ce157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613d0d57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613d7082613daf565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613de482613deb565b9050919050565b6000613df682613dfd565b9050919050565b6000613e0882613daf565b9050919050565b82818337600083830152505050565b60005b83811015613e3c578082015181840152602081019050613e21565b83811115613e4b576000848401525b50505050565b6000601f19601f8301169050919050565b613e6b81613d65565b8114613e7657600080fd5b50565b613e8281613d77565b8114613e8d57600080fd5b50565b613e9981613d83565b8114613ea457600080fd5b50565b613eb081613dcf565b8114613ebb57600080fd5b5056fea365627a7a72315820ace441f57905fe2a85d40f9c19dc7e1637e97d0d8f7f69bf1c06411ed62eeb136c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f578063a22cb465116100a2578063ddb8e35011610071578063ddb8e3501461057c578063e36a350914610598578063e985e9c5146105b6578063f2fde38b146105e6576101e5565b8063a22cb465146104f8578063b88d4fde14610514578063c4d66de814610530578063c87b56dd1461054c576101e5565b80638129fc1c116100de5780638129fc1c146104945780638da5cb5b1461049e5780638f32d59b146104bc57806395d89b41146104da576101e5565b80636352211e146103fa5780636a6278421461042a57806370a082311461045a578063715018a61461048a576101e5565b806318160ddd116101875780634cd88b76116101565780634cd88b76146103605780634f6ccce71461037c5780635f915423146103ac57806362b9bdc2146103dc576101e5565b806318160ddd146102da57806323b872dd146102f85780632f745c591461031457806342842e0e14610344576101e5565b8063081812fc116101c3578063081812fc14610254578063095ea7b3146102845780630bdd4f50146102a0578063109a037a146102be576101e5565b806301ffc9a7146101ea57806306fdde031461021a578063077f224a14610238575b600080fd5b61020460048036036101ff9190810190612edc565b610602565b6040516102119190613968565b60405180910390f35b61022261066a565b60405161022f91906139a5565b60405180910390f35b610252600480360361024d9190810190612f9a565b61070d565b005b61026e60048036036102699190810190613019565b610867565b60405161027b9190613901565b60405180910390f35b61029e60048036036102999190810190612ea0565b6108ec565b005b6102a8610aa7565b6040516102b59190613901565b60405180910390f35b6102d860048036036102d39190810190612d9a565b610ab6565b005b6102e2610b3d565b6040516102ef9190613c67565b60405180910390f35b610312600480360361030d9190810190612d9a565b610b4a565b005b61032e60048036036103299190810190612ea0565b610baa565b60405161033b9190613c67565b60405180910390f35b61035e60048036036103599190810190612d9a565b610c53565b005b61037a60048036036103759190810190612f2e565b610c73565b005b61039660048036036103919190810190613019565b610daf565b6040516103a39190613c67565b60405180910390f35b6103c660048036036103c19190810190613019565b610e19565b6040516103d39190613901565b60405180910390f35b6103e4610e2b565b6040516103f19190613901565b60405180910390f35b610414600480360361040f9190810190613019565b610e56565b6040516104219190613901565b60405180910390f35b610444600480360361043f9190810190612d0c565b610f08565b6040516104519190613c67565b60405180910390f35b610474600480360361046f9190810190612d0c565b611034565b6040516104819190613c67565b60405180910390f35b6104926110f3565b005b61049c6111fb565b005b6104a6611305565b6040516104b39190613901565b60405180910390f35b6104c461132f565b6040516104d19190613968565b60405180910390f35b6104e261138e565b6040516104ef91906139a5565b60405180910390f35b610512600480360361050d9190810190612e64565b611431565b005b61052e60048036036105299190810190612de9565b6115b2565b005b61054a60048036036105459190810190612d0c565b611614565b005b61056660048036036105619190810190613019565b6117bc565b60405161057391906139a5565b60405180910390f35b61059660048036036105919190810190612d0c565b6118ba565b005b6105a0611946565b6040516105ad9190613c67565b60405180910390f35b6105d060048036036105cb9190810190612d5e565b611951565b6040516105dd9190613968565b60405180910390f35b61060060048036036105fb9190810190612d0c565b6119e5565b005b600060666000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60606101058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107035780601f106106d857610100808354040283529160200191610703565b820191906000526020600020905b8154815290600101906020018083116106e657829003601f168201915b5050505050905090565b600060019054906101000a900460ff168061072c575061072b611a38565b5b8061074357506000809054906101000a900460ff16155b610782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077990613b87565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107d2576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6107da611a4f565b6107e26111fb565b6107ec8484610c73565b8161016d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600161016c8190555061084033611614565b80156108615760008060016101000a81548160ff0219169083151502179055505b50505050565b600061087282611b50565b6108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890613b47565b60405180910390fd5b609a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006108f782610e56565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610968576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095f90613be7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610987611bc2565b73ffffffffffffffffffffffffffffffffffffffff1614806109b657506109b5816109b0611bc2565b611951565b5b6109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ec90613ac7565b60405180910390fd5b82609a600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000610ab1611bca565b905090565b610abe611bca565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2390613c47565b60405180910390fd5b610b37848484611c9b565b50505050565b600060d180549050905090565b610b5b610b55611bc2565b82611cbf565b610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9190613c07565b60405180910390fd5b610ba5838383611c9b565b505050565b6000610bb583611034565b8210610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed906139c7565b60405180910390fd5b60cf60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c4057fe5b9060005260206000200154905092915050565b610c6e838383604051806020016040528060008152506115b2565b505050565b600060019054906101000a900460ff1680610c925750610c91611a38565b5b80610ca957506000809054906101000a900460ff16155b610ce8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdf90613b87565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d38576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d40611d9d565b610d4957600080fd5b826101059080519060200190610d60929190612b00565b50816101069080519060200190610d78929190612b00565b50610d89635b5e139f60e01b611db4565b8015610daa5760008060016101000a81548160ff0219169083151502179055505b505050565b6000610db9610b3d565b8210610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df190613c27565b60405180910390fd5b60d18281548110610e0757fe5b90600052602060002001549050919050565b6000610e2482610e56565b9050919050565b600061016d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806099600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690613b07565b60405180910390fd5b80915050919050565b6000610f12611bca565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790613c47565b60405180910390fd5b600161016c60008282540192505081905550600073__IDGenerator___________________________634a7dd52361016c546040518263ffffffff1660e01b8152600401610fce9190613c82565b60206040518083038186803b158015610fe657600080fd5b505af4158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061101e9190810190613042565b905061102a8482611e8a565b8092505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109c90613ae7565b60405180910390fd5b6110ec609b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611eab565b9050919050565b6110fb61132f565b61113a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113190613b67565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600060019054906101000a900460ff168061121a5750611219611a38565b5b8061123157506000809054906101000a900460ff16155b611270576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126790613b87565b60405180910390fd5b60008060019054906101000a900460ff1615905080156112c0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6112c8611d9d565b6112d157600080fd5b6112e163780e9d6360e01b611db4565b80156113025760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611372611bc2565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60606101068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114275780601f106113fc57610100808354040283529160200191611427565b820191906000526020600020905b81548152906001019060200180831161140a57829003601f168201915b5050505050905090565b611439611bc2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149e90613a87565b60405180910390fd5b80609c60006114b4611bc2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16611561611bc2565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115a69190613968565b60405180910390a35050565b6115c36115bd611bc2565b83611cbf565b611602576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f990613c07565b60405180910390fd5b61160e84848484611eb9565b50505050565b600060019054906101000a900460ff16806116335750611632611a38565b5b8061164a57506000809054906101000a900460ff16155b611689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168090613b87565b60405180910390fd5b60008060019054906101000a900460ff1615905080156116d9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156117b85760008060016101000a81548160ff0219169083151502179055505b5050565b60606117c782611b50565b611806576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fd90613bc7565b60405180910390fd5b61010760008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118ae5780601f10611883576101008083540402835291602001916118ae565b820191906000526020600020905b81548152906001019060200180831161189157829003601f168201915b50505050509050919050565b6118c261132f565b611901576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f890613b67565b60405180910390fd5b8061016d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061016c54905090565b6000609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6119ed61132f565b611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2390613b67565b60405180910390fd5b611a3581611f15565b50565b6000803090506000813b9050600081149250505090565b600060019054906101000a900460ff1680611a6e5750611a6d611a38565b5b80611a8557506000809054906101000a900460ff16155b611ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611abb90613b87565b60405180910390fd5b60008060019054906101000a900460ff161590508015611b14576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611b1c612045565b611b2c6380ac58cd60e01b611db4565b8015611b4d5760008060016101000a81548160ff0219169083151502179055505b50565b6000806099600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b600080611bd561213e565b73ffffffffffffffffffffffffffffffffffffffff1663693ec85e6040518060400160405280600a81526020017f524f4f545f4c4f474943000000000000000000000000000000000000000000008152506040518263ffffffff1660e01b8152600401611c429190613983565b60206040518083038186803b158015611c5a57600080fd5b505afa158015611c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c929190810190612d35565b90508091505090565b611ca6838383612169565b611cb08382612398565b611cba8282612536565b505050565b6000611cca82611b50565b611d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0090613aa7565b60405180910390fd5b6000611d1483610e56565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611d8357508373ffffffffffffffffffffffffffffffffffffffff16611d6b84610867565b73ffffffffffffffffffffffffffffffffffffffff16145b80611d945750611d938185611951565b5b91505092915050565b6000611daf6380ac58cd60e01b610602565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415611e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1490613a27565b60405180910390fd5b600160666000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b611e9482826125fd565b611e9e8282612536565b611ea7816127af565b5050565b600081600001549050919050565b611ec4848484611c9b565b611ed0848484846127fb565b611f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f06906139e7565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7c90613a07565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900460ff16806120645750612063611a38565b5b8061207b57506000809054906101000a900460ff16155b6120ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120b190613b87565b60405180910390fd5b60008060019054906101000a900460ff16159050801561210a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61211a6301ffc9a760e01b611db4565b801561213b5760008060016101000a81548160ff0219169083151502179055505b50565b600061016d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8273ffffffffffffffffffffffffffffffffffffffff1661218982610e56565b73ffffffffffffffffffffffffffffffffffffffff16146121df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d690613ba7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561224f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224690613a67565b60405180910390fd5b61225881612919565b61229f609b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129d7565b6122e6609b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129fa565b816099600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006123f0600160cf60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612a1090919063ffffffff16565b9050600060d060008481526020019081526020016000205490508181146124dd57600060cf60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061245d57fe5b906000526020600020015490508060cf60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106124b557fe5b90600052602060002001819055508160d0600083815260200190815260200160002081905550505b60cf60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361252f9190612b80565b5050505050565b60cf60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905060d060008381526020019081526020016000208190555060cf60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561266d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161266490613b27565b60405180910390fd5b61267681611b50565b156126b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126ad90613a47565b60405180910390fd5b816099600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061274f609b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129fa565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b60d18054905060d260008381526020019081526020016000208190555060d181908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600061281c8473ffffffffffffffffffffffffffffffffffffffff16612a5a565b6128295760019050612911565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261284f611bc2565b8887876040518563ffffffff1660e01b8152600401612871949392919061391c565b602060405180830381600087803b15801561288b57600080fd5b505af115801561289f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128c39190810190612f05565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff16609a600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146129d4576000609a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6129ef60018260000154612a1090919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612a5283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612aa5565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b8214158015612a9c5750808214155b92505050919050565b6000838311158290612aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ae491906139a5565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612b4157805160ff1916838001178555612b6f565b82800160010185558215612b6f579182015b82811115612b6e578251825591602001919060010190612b53565b5b509050612b7c9190612bac565b5090565b815481835581811115612ba757818360005260206000209182019101612ba69190612bac565b5b505050565b612bce91905b80821115612bca576000816000905550600101612bb2565b5090565b90565b600081359050612be081613e62565b92915050565b600081519050612bf581613e62565b92915050565b600081359050612c0a81613e79565b92915050565b600081359050612c1f81613e90565b92915050565b600081519050612c3481613e90565b92915050565b600082601f830112612c4b57600080fd5b8135612c5e612c5982613cca565b613c9d565b91508082526020830160208301858383011115612c7a57600080fd5b612c85838284613e0f565b50505092915050565b600082601f830112612c9f57600080fd5b8135612cb2612cad82613cf6565b613c9d565b91508082526020830160208301858383011115612cce57600080fd5b612cd9838284613e0f565b50505092915050565b600081359050612cf181613ea7565b92915050565b600081519050612d0681613ea7565b92915050565b600060208284031215612d1e57600080fd5b6000612d2c84828501612bd1565b91505092915050565b600060208284031215612d4757600080fd5b6000612d5584828501612be6565b91505092915050565b60008060408385031215612d7157600080fd5b6000612d7f85828601612bd1565b9250506020612d9085828601612bd1565b9150509250929050565b600080600060608486031215612daf57600080fd5b6000612dbd86828701612bd1565b9350506020612dce86828701612bd1565b9250506040612ddf86828701612ce2565b9150509250925092565b60008060008060808587031215612dff57600080fd5b6000612e0d87828801612bd1565b9450506020612e1e87828801612bd1565b9350506040612e2f87828801612ce2565b925050606085013567ffffffffffffffff811115612e4c57600080fd5b612e5887828801612c3a565b91505092959194509250565b60008060408385031215612e7757600080fd5b6000612e8585828601612bd1565b9250506020612e9685828601612bfb565b9150509250929050565b60008060408385031215612eb357600080fd5b6000612ec185828601612bd1565b9250506020612ed285828601612ce2565b9150509250929050565b600060208284031215612eee57600080fd5b6000612efc84828501612c10565b91505092915050565b600060208284031215612f1757600080fd5b6000612f2584828501612c25565b91505092915050565b60008060408385031215612f4157600080fd5b600083013567ffffffffffffffff811115612f5b57600080fd5b612f6785828601612c8e565b925050602083013567ffffffffffffffff811115612f8457600080fd5b612f9085828601612c8e565b9150509250929050565b600080600060608486031215612faf57600080fd5b600084013567ffffffffffffffff811115612fc957600080fd5b612fd586828701612c8e565b935050602084013567ffffffffffffffff811115612ff257600080fd5b612ffe86828701612c8e565b925050604061300f86828701612bd1565b9150509250925092565b60006020828403121561302b57600080fd5b600061303984828501612ce2565b91505092915050565b60006020828403121561305457600080fd5b600061306284828501612cf7565b91505092915050565b61307481613dd9565b82525050565b61308381613d65565b82525050565b61309281613d77565b82525050565b60006130a382613d22565b6130ad8185613d43565b93506130bd818560208601613e1e565b6130c681613e51565b840191505092915050565b60006130dc82613d38565b6130e68185613d54565b93506130f6818560208601613e1e565b6130ff81613e51565b840191505092915050565b600061311582613d2d565b61311f8185613d54565b935061312f818560208601613e1e565b61313881613e51565b840191505092915050565b6000613150602b83613d54565b91507f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008301527f74206f6620626f756e64730000000000000000000000000000000000000000006020830152604082019050919050565b60006131b6603283613d54565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b600061321c602683613d54565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613282601c83613d54565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006132c2601c83613d54565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000613302602483613d54565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613368601983613d54565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b60006133a8602c83613d54565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061340e603883613d54565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000613474602a83613d54565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b60006134da602983613d54565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613540602083613d54565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000613580602c83613d54565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006135e6602083613d54565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000613626602e83613d54565b91507f436f6e747261637420696e7374616e63652068617320616c726561647920626560008301527f656e20696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b600061368c602983613d54565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006136f2602f83613d54565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613758602183613d54565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006137be603183613d54565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613824602c83613d54565b91507f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008301527f7574206f6620626f756e647300000000000000000000000000000000000000006020830152604082019050919050565b600061388a602883613d54565b91507f5468652073656e646572206973206e6f742074686520526f6f744c6f6769632060008301527f636f6e74726163740000000000000000000000000000000000000000000000006020830152604082019050919050565b6138ec81613dcf565b82525050565b6138fb81613dcf565b82525050565b6000602082019050613916600083018461307a565b92915050565b6000608082019050613931600083018761306b565b61393e602083018661307a565b61394b60408301856138e3565b818103606083015261395d8184613098565b905095945050505050565b600060208201905061397d6000830184613089565b92915050565b6000602082019050818103600083015261399d818461310a565b905092915050565b600060208201905081810360008301526139bf81846130d1565b905092915050565b600060208201905081810360008301526139e081613143565b9050919050565b60006020820190508181036000830152613a00816131a9565b9050919050565b60006020820190508181036000830152613a208161320f565b9050919050565b60006020820190508181036000830152613a4081613275565b9050919050565b60006020820190508181036000830152613a60816132b5565b9050919050565b60006020820190508181036000830152613a80816132f5565b9050919050565b60006020820190508181036000830152613aa08161335b565b9050919050565b60006020820190508181036000830152613ac08161339b565b9050919050565b60006020820190508181036000830152613ae081613401565b9050919050565b60006020820190508181036000830152613b0081613467565b9050919050565b60006020820190508181036000830152613b20816134cd565b9050919050565b60006020820190508181036000830152613b4081613533565b9050919050565b60006020820190508181036000830152613b6081613573565b9050919050565b60006020820190508181036000830152613b80816135d9565b9050919050565b60006020820190508181036000830152613ba081613619565b9050919050565b60006020820190508181036000830152613bc08161367f565b9050919050565b60006020820190508181036000830152613be0816136e5565b9050919050565b60006020820190508181036000830152613c008161374b565b9050919050565b60006020820190508181036000830152613c20816137b1565b9050919050565b60006020820190508181036000830152613c4081613817565b9050919050565b60006020820190508181036000830152613c608161387d565b9050919050565b6000602082019050613c7c60008301846138e3565b92915050565b6000602082019050613c9760008301846138f2565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613cc057600080fd5b8060405250919050565b600067ffffffffffffffff821115613ce157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613d0d57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613d7082613daf565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613de482613deb565b9050919050565b6000613df682613dfd565b9050919050565b6000613e0882613daf565b9050919050565b82818337600083830152505050565b60005b83811015613e3c578082015181840152602081019050613e21565b83811115613e4b576000848401525b50505050565b6000601f19601f8301169050919050565b613e6b81613d65565b8114613e7657600080fd5b50565b613e8281613d77565b8114613e8d57600080fd5b50565b613e9981613d83565b8114613ea457600080fd5b50565b613eb081613dcf565b8114613ebb57600080fd5b5056fea365627a7a72315820ace441f57905fe2a85d40f9c19dc7e1637e97d0d8f7f69bf1c06411ed62eeb136c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "607:4232:8:-;;;;;;;;;",
  "deployedSourceMap": "607:4232:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:4232:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:131:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1435:83:19;;;:::i;:::-;;;;;;;;;;;;;;;;1059:323:8;;;;;;;;;;;;;;;;:::i;:::-;;4538:200:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3838:415;;;;;;;;;;;;;;;;:::i;:::-;;2492:98:8;;;:::i;:::-;;;;;;;;;;;;;;;;1967:175;;;;;;;;;;;;;;;;:::i;:::-;;2454:94:17;;;:::i;:::-;;;;;;;;;;;;;;;;6184:287:16;;;;;;;;;;;;;;;;:::i;:::-;;2072:229:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7120:132:16;;;;;;;;;;;;;;;;:::i;:::-;;871:321:19;;;;;;;;;;;;;;;;:::i;:::-;;2886:196:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2929:108:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2698:102;;;:::i;:::-;;;;;;;;;;;;;;;;3194:223:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1489:236:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2768:207:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1746:137:15;;;:::i;:::-;;1316:242:17;;;:::i;:::-;;959:77:15;;;:::i;:::-;;;;;;;;;;;;;;;;1310:92;;;:::i;:::-;;;;;;;;;;;;;;;;1627:87:19;;;:::i;:::-;;;;;;;;;;;;;;;;5031:249:16;;;;;;;;;;;;;;;;:::i;:::-;;7975:269;;;;;;;;;;;;;;;;:::i;:::-;;741:142:15;;;;;;;;;;;;;;;;:::i;:::-;;1914:202:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2276:110:8;;;;;;;;;;;;;;;;:::i;:::-;;3129:77;;;:::i;:::-;;;;;;;;;;;;;;;;5602:145:16;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2032:107:15;;;;;;;;;;;;;;;;:::i;:::-;;1008:131:12;1076:4;1099:20;:33;1120:11;1099:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:40;;1008:131;;;:::o;1435:83:19:-;1474:13;1506:5;1499:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:83;:::o;1059:323:8:-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1184:19:8;:17;:19::i;:::-;1209:29;:27;:29::i;:::-;1244:39;1270:4;1276:6;1244:25;:39::i;:::-;1312:12;1289:20;;:35;;;;;;;;;;;;;;;;;;1340:1;1330:7;:11;;;;1347:30;1366:10;1347:18;:30::i;:::-;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1059:323:8;;;;:::o;4538:200:16:-;4597:7;4624:16;4632:7;4624;:16::i;:::-;4616:73;;;;;;;;;;;;;;;;;;;;;;4707:15;:24;4723:7;4707:24;;;;;;;;;;;;;;;;;;;;;4700:31;;4538:200;;;:::o;3838:415::-;3901:13;3917:16;3925:7;3917;:16::i;:::-;3901:32;;3957:5;3951:11;;:2;:11;;;;3943:57;;;;;;;;;;;;;;;;;;;;;;4035:5;4019:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4044:37;4061:5;4068:12;:10;:12::i;:::-;4044:16;:37::i;:::-;4019:62;4011:152;;;;;;;;;;;;;;;;;;;;;;4201:2;4174:15;:24;4190:7;4174:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4238:7;4234:2;4218:28;;4227:5;4218:28;;;;;;;;;;;;3838:415;;;:::o;2492:98:8:-;2544:7;2566:19;:17;:19::i;:::-;2559:26;;2492:98;:::o;1967:175::-;2072:19;:17;:19::i;:::-;591:9:2;577:23;;:10;:23;;;562:94;;;;;;;;;;;;;;;;;;;;;;2099:38:8;2119:4;2125:2;2129:7;2099:19;:38::i;:::-;1967:175;;;;:::o;2454:94:17:-;2498:7;2524:10;:17;;;;2517:24;;2454:94;:::o;6184:287:16:-;6326:41;6345:12;:10;:12::i;:::-;6359:7;6326:18;:41::i;:::-;6318:103;;;;;;;;;;;;;;;;;;;;;;6432:32;6446:4;6452:2;6456:7;6432:13;:32::i;:::-;6184:287;;;:::o;2072:229:17:-;2152:7;2187:16;2197:5;2187:9;:16::i;:::-;2179:5;:24;2171:80;;;;;;;;;;;;;;;;;;;;;;2268:12;:19;2281:5;2268:19;;;;;;;;;;;;;;;2288:5;2268:26;;;;;;;;;;;;;;;;2261:33;;2072:229;;;;:::o;7120:132:16:-;7206:39;7223:4;7229:2;7233:7;7206:39;;;;;;;;;;;;:16;:39::i;:::-;7120:132;;;:::o;871:321:19:-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;970:28:19;:26;:28::i;:::-;962:37;;;;;;1018:4;1010:5;:12;;;;;;;;;;;;:::i;:::-;;1042:6;1032:7;:16;;;;;;;;;;;;:::i;:::-;;1136:49;805:10;1155:29;;1136:18;:49::i;:::-;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;871:321:19;;;:::o;2886:196:17:-;2944:7;2979:13;:11;:13::i;:::-;2971:5;:21;2963:78;;;;;;;;;;;;;;;;;;;;;;3058:10;3069:5;3058:17;;;;;;;;;;;;;;;;3051:24;;2886:196;;;:::o;2929:108:8:-;2988:7;3010:22;3024:7;3010:13;:22::i;:::-;3003:29;;2929:108;;;:::o;2698:102::-;2753:7;2775:20;;;;;;;;;;;2768:27;;2698:102;:::o;3194:223:16:-;3249:7;3268:13;3284:11;:20;3296:7;3284:20;;;;;;;;;;;;;;;;;;;;;3268:36;;3339:1;3322:19;;:5;:19;;;;3314:73;;;;;;;;;;;;;;;;;;;;;;3405:5;3398:12;;;3194:223;;;:::o;1489:236:8:-;1584:7;1550:19;:17;:19::i;:::-;591:9:2;577:23;;:10;:23;;;562:94;;;;;;;;;;;;;;;;;;;;;;1612:1:8;1601:7;;:12;;;;;;;;;;;1619:15;1637:11;:20;1658:7;;1637:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1637:29:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1637:29:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1637:29:8;;;;;;;;;1619:47;;1672:28;1684:6;1692:7;1672:11;:28::i;:::-;1713:7;1706:14;;;1489:236;;;;:::o;2768:207:16:-;2823:7;2867:1;2850:19;;:5;:19;;;;2842:74;;;;;;;;;;;;;;;;;;;;;;2934:34;:17;:24;2952:5;2934:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2927:41;;2768:207;;;:::o;1746:137:15:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;1844:1;1807:40;;1828:6;;;;;;;;;;;1807:40;;;;;;;;;;;;1874:1;1857:6;;:19;;;;;;;;;;;;;;;;;;1746:137::o;1316:242:17:-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1375:28:17;:26;:28::i;:::-;1367:37;;;;;;1500:51;1249:10;1519:31;;1500:18;:51::i;:::-;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1316:242:17;:::o;959:77:15:-;997:7;1023:6;;;;;;;;;;;1016:13;;959:77;:::o;1310:92::-;1350:4;1389:6;;;;;;;;;;;1373:22;;:12;:10;:12::i;:::-;:22;;;1366:29;;1310:92;:::o;1627:87:19:-;1668:13;1700:7;1693:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1627:87;:::o;5031:249:16:-;5116:12;:10;:12::i;:::-;5110:18;;:2;:18;;;;5102:56;;;;;;;;;;;;;;;;;;;;;;5208:8;5169:18;:32;5188:12;:10;:12::i;:::-;5169:32;;;;;;;;;;;;;;;:36;5202:2;5169:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5260:2;5231:42;;5246:12;:10;:12::i;:::-;5231:42;;;5264:8;5231:42;;;;;;;;;;;;;;;5031:249;;:::o;7975:269::-;8089:41;8108:12;:10;:12::i;:::-;8122:7;8089:18;:41::i;:::-;8081:103;;;;;;;;;;;;;;;;;;;;;;8194:43;8212:4;8218:2;8222:7;8231:5;8194:17;:43::i;:::-;7975:269;;;;:::o;741:142:15:-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;815:6:15;806;;:15;;;;;;;;;;;;;;;;;;869:6;;;;;;;;;;;836:40;;865:1;836:40;;;;;;;;;;;;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:142:15;;:::o;1914:202:19:-;1972:13;2005:16;2013:7;2005;:16::i;:::-;1997:76;;;;;;;;;;;;;;;;;;;;;;2090:10;:19;2101:7;2090:19;;;;;;;;;;;2083:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1914:202;;;:::o;2276:110:8:-;1163:9:15;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;2369:12:8;2346:20;;:35;;;;;;;;;;;;;;;;;;2276:110;:::o;3129:77::-;3172:7;3194;;3187:14;;3129:77;:::o;5602:145:16:-;5682:4;5705:18;:25;5724:5;5705:25;;;;;;;;;;;;;;;:35;5731:8;5705:35;;;;;;;;;;;;;;;;;;;;;;;;;5698:42;;5602:145;;;;:::o;2032:107:15:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;1409:498:25:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;2230:205:16:-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2281:19:16;:17;:19::i;:::-;2388:40;2213:10;2407:20;;2388:18;:40::i;:::-;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2230:205:16;:::o;9415:152::-;9472:4;9488:13;9504:11;:20;9516:7;9504:20;;;;;;;;;;;;;;;;;;;;;9488:36;;9558:1;9541:19;;:5;:19;;;;9534:26;;;9415:152;;;:::o;867:96:9:-;912:15;946:10;939:17;;867:96;:::o;3327:158:8:-;3378:7;3393:24;3420:15;:13;:15::i;:::-;:19;;;3440:10;;;;;;;;;;;;;;;;;3420:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3420:31:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3420:31:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3420:31:8;;;;;;;;;3393:58;;3464:16;3457:23;;;3327:158;:::o;3457:239:17:-;3542:38;3562:4;3568:2;3572:7;3542:19;:38::i;:::-;3591:47;3624:4;3630:7;3591:32;:47::i;:::-;3649:40;3677:2;3681:7;3649:27;:40::i;:::-;3457:239;;;:::o;9928:329:16:-;10013:4;10037:16;10045:7;10037;:16::i;:::-;10029:73;;;;;;;;;;;;;;;;;;;;;;10112:13;10128:16;10136:7;10128;:16::i;:::-;10112:32;;10173:5;10162:16;;:7;:16;;;:51;;;;10206:7;10182:31;;:20;10194:7;10182:11;:20::i;:::-;:31;;;10162:51;:87;;;;10217:32;10234:5;10241:7;10217:16;:32::i;:::-;10162:87;10154:96;;;9928:329;;;;:::o;2441:123::-;2495:4;2518:39;2213:10;2536:20;;2518:17;:39::i;:::-;2511:46;;2441:123;:::o;1533:190:12:-;1623:10;1608:25;;:11;:25;;;;;1600:66;;;;;;;;;;;;;;;;;;;;;;1712:4;1676:20;:33;1697:11;1676:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1533:190;:::o;3953:196:17:-;4016:24;4028:2;4032:7;4016:11;:24::i;:::-;4051:40;4079:2;4083:7;4051:27;:40::i;:::-;4102;4134:7;4102:31;:40::i;:::-;3953:196;;:::o;1065:112:11:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;8951:269:16:-;9060:32;9074:4;9080:2;9084:7;9060:13;:32::i;:::-;9110:48;9133:4;9139:2;9143:7;9152:5;9110:22;:48::i;:::-;9102:111;;;;;;;;;;;;;;;;;;;;;;8951:269;;;;:::o;2240:225:15:-;2333:1;2313:22;;:8;:22;;;;2305:73;;;;;;;;;;;;;;;;;;;;;;2422:8;2393:38;;2414:6;;;;;;;;;;;2393:38;;;;;;;;;;;;2450:8;2441:6;;:17;;;;;;;;;;;;;;;;;;2240:225;:::o;624:234:12:-;1024:12:25;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;811:40:12;461:10;830:20;;811:18;:40::i;:::-;1268:14:25;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;624:234:12;:::o;3210:113:8:-;3257:12;3297:20;;;;;;;;;;;3277:41;;3210:113;:::o;13538:447:16:-;13651:4;13631:24;;:16;13639:7;13631;:16::i;:::-;:24;;;13623:78;;;;;;;;;;;;;;;;;;;;;;13733:1;13719:16;;:2;:16;;;;13711:65;;;;;;;;;;;;;;;;;;;;;;13787:23;13802:7;13787:14;:23::i;:::-;13821:35;:17;:23;13839:4;13821:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13866:33;:17;:21;13884:2;13866:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13933:2;13910:11;:20;13922:7;13910:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13970:7;13966:2;13951:27;;13960:4;13951:27;;;;;;;;;;;;13538:447;;;:::o;6567:1128:17:-;6829:22;6854:32;6884:1;6854:12;:18;6867:4;6854:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6829:57;;6896:18;6917:17;:26;6935:7;6917:26;;;;;;;;;;;;6896:47;;7061:14;7047:10;:28;7043:323;;7091:19;7113:12;:18;7126:4;7113:18;;;;;;;;;;;;;;;7132:14;7113:34;;;;;;;;;;;;;;;;7091:56;;7195:11;7162:12;:18;7175:4;7162:18;;;;;;;;;;;;;;;7181:10;7162:30;;;;;;;;;;;;;;;:44;;;;7311:10;7278:17;:30;7296:11;7278:30;;;;;;;;;;;:43;;;;7043:323;;7452:12;:18;7465:4;7452:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6567:1128;;;;:::o;5411:183::-;5524:12;:16;5537:2;5524:16;;;;;;;;;;;;;;;:23;;;;5495:17;:26;5513:7;5495:26;;;;;;;;;;;:52;;;;5557:12;:16;5570:2;5557:16;;;;;;;;;;;;;;;5579:7;5557:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5557:30:17;;;;;;;;;;;;;;;;;;;;;;5411:183;;:::o;11971:327:16:-;12056:1;12042:16;;:2;:16;;;;12034:61;;;;;;;;;;;;;;;;;;;;;;12114:16;12122:7;12114;:16::i;:::-;12113:17;12105:58;;;;;;;;;;;;;;;;;;;;;;12197:2;12174:11;:20;12186:7;12174:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;12209:33;:17;:21;12227:2;12209:21;;;;;;;;;;;;;;;:31;:33::i;:::-;12283:7;12279:2;12258:33;;12275:1;12258:33;;;;;;;;;;;;11971:327;;:::o;5789:161:17:-;5892:10;:17;;;;5865:15;:24;5881:7;5865:24;;;;;;;;;;;:44;;;;5919:10;5935:7;5919:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5919:24:17;;;;;;;;;;;;;;;;;;;;;;5789:161;:::o;14574:349:16:-;14695:4;14720:15;:2;:13;;;:15::i;:::-;14715:58;;14758:4;14751:11;;;;14715:58;14783:13;14815:2;14799:36;;;14836:12;:10;:12::i;:::-;14850:4;14856:7;14865:5;14799:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14799:72:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14799:72:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14799:72:16;;;;;;;;;14783:88;;831:10;14899:16;;14889:26;;;:6;:26;;;;14881:35;;;14574:349;;;;;;;:::o;15085:171::-;15184:1;15148:38;;:15;:24;15164:7;15148:24;;;;;;;;;;;;;;;;;;;;;:38;;;15144:106;;15237:1;15202:15;:24;15218:7;15202:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15144:106;15085:171;:::o;1278:108:11:-;1358:21;1377:1;1358:7;:14;;;:18;;:21;;;;:::i;:::-;1341:7;:14;;:38;;;;1278:108;:::o;1183:89::-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;1274:134:14:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;557:797:24:-;617:4;1062:16;1088:19;1110:66;1088:88;;;;1277:7;1265:20;1253:32;;1316:3;1304:15;;:8;:15;;:42;;;;;1335:11;1323:8;:23;;1304:42;1296:51;;;;557:797;;;:::o;1732:187:14:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;607:4232:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;283:124;;360:6;347:20;338:29;;372:30;396:5;372:30;;;332:75;;;;;414:128;;493:6;480:20;471:29;;505:32;531:5;505:32;;;465:77;;;;;549:132;;632:6;626:13;617:22;;644:32;670:5;644:32;;;611:70;;;;;689:440;;790:3;783:4;775:6;771:17;767:27;757:2;;808:1;805;798:12;757:2;845:6;832:20;867:64;882:48;923:6;882:48;;;867:64;;;858:73;;951:6;944:5;937:21;987:4;979:6;975:17;1020:4;1013:5;1009:16;1055:3;1046:6;1041:3;1037:16;1034:25;1031:2;;;1072:1;1069;1062:12;1031:2;1082:41;1116:6;1111:3;1106;1082:41;;;750:379;;;;;;;;1138:442;;1240:3;1233:4;1225:6;1221:17;1217:27;1207:2;;1258:1;1255;1248:12;1207:2;1295:6;1282:20;1317:65;1332:49;1374:6;1332:49;;;1317:65;;;1308:74;;1402:6;1395:5;1388:21;1438:4;1430:6;1426:17;1471:4;1464:5;1460:16;1506:3;1497:6;1492:3;1488:16;1485:25;1482:2;;;1523:1;1520;1513:12;1482:2;1533:41;1567:6;1562:3;1557;1533:41;;;1200:380;;;;;;;;1588:130;;1668:6;1655:20;1646:29;;1680:33;1707:5;1680:33;;;1640:78;;;;;1725:134;;1809:6;1803:13;1794:22;;1821:33;1848:5;1821:33;;;1788:71;;;;;1866:241;;1970:2;1958:9;1949:7;1945:23;1941:32;1938:2;;;1986:1;1983;1976:12;1938:2;2021:1;2038:53;2083:7;2074:6;2063:9;2059:22;2038:53;;;2028:63;;2000:97;1932:175;;;;;2114:263;;2229:2;2217:9;2208:7;2204:23;2200:32;2197:2;;;2245:1;2242;2235:12;2197:2;2280:1;2297:64;2353:7;2344:6;2333:9;2329:22;2297:64;;;2287:74;;2259:108;2191:186;;;;;2384:366;;;2505:2;2493:9;2484:7;2480:23;2476:32;2473:2;;;2521:1;2518;2511:12;2473:2;2556:1;2573:53;2618:7;2609:6;2598:9;2594:22;2573:53;;;2563:63;;2535:97;2663:2;2681:53;2726:7;2717:6;2706:9;2702:22;2681:53;;;2671:63;;2642:98;2467:283;;;;;;2757:491;;;;2895:2;2883:9;2874:7;2870:23;2866:32;2863:2;;;2911:1;2908;2901:12;2863:2;2946:1;2963:53;3008:7;2999:6;2988:9;2984:22;2963:53;;;2953:63;;2925:97;3053:2;3071:53;3116:7;3107:6;3096:9;3092:22;3071:53;;;3061:63;;3032:98;3161:2;3179:53;3224:7;3215:6;3204:9;3200:22;3179:53;;;3169:63;;3140:98;2857:391;;;;;;3255:721;;;;;3419:3;3407:9;3398:7;3394:23;3390:33;3387:2;;;3436:1;3433;3426:12;3387:2;3471:1;3488:53;3533:7;3524:6;3513:9;3509:22;3488:53;;;3478:63;;3450:97;3578:2;3596:53;3641:7;3632:6;3621:9;3617:22;3596:53;;;3586:63;;3557:98;3686:2;3704:53;3749:7;3740:6;3729:9;3725:22;3704:53;;;3694:63;;3665:98;3822:2;3811:9;3807:18;3794:32;3846:18;3838:6;3835:30;3832:2;;;3878:1;3875;3868:12;3832:2;3898:62;3952:7;3943:6;3932:9;3928:22;3898:62;;;3888:72;;3773:193;3381:595;;;;;;;;3983:360;;;4101:2;4089:9;4080:7;4076:23;4072:32;4069:2;;;4117:1;4114;4107:12;4069:2;4152:1;4169:53;4214:7;4205:6;4194:9;4190:22;4169:53;;;4159:63;;4131:97;4259:2;4277:50;4319:7;4310:6;4299:9;4295:22;4277:50;;;4267:60;;4238:95;4063:280;;;;;;4350:366;;;4471:2;4459:9;4450:7;4446:23;4442:32;4439:2;;;4487:1;4484;4477:12;4439:2;4522:1;4539:53;4584:7;4575:6;4564:9;4560:22;4539:53;;;4529:63;;4501:97;4629:2;4647:53;4692:7;4683:6;4672:9;4668:22;4647:53;;;4637:63;;4608:98;4433:283;;;;;;4723:239;;4826:2;4814:9;4805:7;4801:23;4797:32;4794:2;;;4842:1;4839;4832:12;4794:2;4877:1;4894:52;4938:7;4929:6;4918:9;4914:22;4894:52;;;4884:62;;4856:96;4788:174;;;;;4969:261;;5083:2;5071:9;5062:7;5058:23;5054:32;5051:2;;;5099:1;5096;5089:12;5051:2;5134:1;5151:63;5206:7;5197:6;5186:9;5182:22;5151:63;;;5141:73;;5113:107;5045:185;;;;;5237:578;;;5378:2;5366:9;5357:7;5353:23;5349:32;5346:2;;;5394:1;5391;5384:12;5346:2;5457:1;5446:9;5442:17;5429:31;5480:18;5472:6;5469:30;5466:2;;;5512:1;5509;5502:12;5466:2;5532:63;5587:7;5578:6;5567:9;5563:22;5532:63;;;5522:73;;5408:193;5660:2;5649:9;5645:18;5632:32;5684:18;5676:6;5673:30;5670:2;;;5716:1;5713;5706:12;5670:2;5736:63;5791:7;5782:6;5771:9;5767:22;5736:63;;;5726:73;;5611:194;5340:475;;;;;;5822:703;;;;5980:2;5968:9;5959:7;5955:23;5951:32;5948:2;;;5996:1;5993;5986:12;5948:2;6059:1;6048:9;6044:17;6031:31;6082:18;6074:6;6071:30;6068:2;;;6114:1;6111;6104:12;6068:2;6134:63;6189:7;6180:6;6169:9;6165:22;6134:63;;;6124:73;;6010:193;6262:2;6251:9;6247:18;6234:32;6286:18;6278:6;6275:30;6272:2;;;6318:1;6315;6308:12;6272:2;6338:63;6393:7;6384:6;6373:9;6369:22;6338:63;;;6328:73;;6213:194;6438:2;6456:53;6501:7;6492:6;6481:9;6477:22;6456:53;;;6446:63;;6417:98;5942:583;;;;;;6532:241;;6636:2;6624:9;6615:7;6611:23;6607:32;6604:2;;;6652:1;6649;6642:12;6604:2;6687:1;6704:53;6749:7;6740:6;6729:9;6725:22;6704:53;;;6694:63;;6666:97;6598:175;;;;;6780:263;;6895:2;6883:9;6874:7;6870:23;6866:32;6863:2;;;6911:1;6908;6901:12;6863:2;6946:1;6963:64;7019:7;7010:6;6999:9;6995:22;6963:64;;;6953:74;;6925:108;6857:186;;;;;7050:142;7141:45;7180:5;7141:45;;;7136:3;7129:58;7123:69;;;7199:113;7282:24;7300:5;7282:24;;;7277:3;7270:37;7264:48;;;7319:104;7396:21;7411:5;7396:21;;;7391:3;7384:34;7378:45;;;7430:343;;7540:38;7572:5;7540:38;;;7590:70;7653:6;7648:3;7590:70;;;7583:77;;7665:52;7710:6;7705:3;7698:4;7691:5;7687:16;7665:52;;;7738:29;7760:6;7738:29;;;7733:3;7729:39;7722:46;;7520:253;;;;;;7780:347;;7892:39;7925:5;7892:39;;;7943:71;8007:6;8002:3;7943:71;;;7936:78;;8019:52;8064:6;8059:3;8052:4;8045:5;8041:16;8019:52;;;8092:29;8114:6;8092:29;;;8087:3;8083:39;8076:46;;7872:255;;;;;;8134:339;;8242:35;8271:5;8242:35;;;8289:71;8353:6;8348:3;8289:71;;;8282:78;;8365:52;8410:6;8405:3;8398:4;8391:5;8387:16;8365:52;;;8438:29;8460:6;8438:29;;;8433:3;8429:39;8422:46;;8222:251;;;;;;8481:380;;8641:67;8705:2;8700:3;8641:67;;;8634:74;;8741:34;8737:1;8732:3;8728:11;8721:55;8810:13;8805:2;8800:3;8796:12;8789:35;8852:2;8847:3;8843:12;8836:19;;8627:234;;;;8870:387;;9030:67;9094:2;9089:3;9030:67;;;9023:74;;9130:34;9126:1;9121:3;9117:11;9110:55;9199:20;9194:2;9189:3;9185:12;9178:42;9248:2;9243:3;9239:12;9232:19;;9016:241;;;;9266:375;;9426:67;9490:2;9485:3;9426:67;;;9419:74;;9526:34;9522:1;9517:3;9513:11;9506:55;9595:8;9590:2;9585:3;9581:12;9574:30;9632:2;9627:3;9623:12;9616:19;;9412:229;;;;9650:328;;9810:67;9874:2;9869:3;9810:67;;;9803:74;;9910:30;9906:1;9901:3;9897:11;9890:51;9969:2;9964:3;9960:12;9953:19;;9796:182;;;;9987:328;;10147:67;10211:2;10206:3;10147:67;;;10140:74;;10247:30;10243:1;10238:3;10234:11;10227:51;10306:2;10301:3;10297:12;10290:19;;10133:182;;;;10324:373;;10484:67;10548:2;10543:3;10484:67;;;10477:74;;10584:34;10580:1;10575:3;10571:11;10564:55;10653:6;10648:2;10643:3;10639:12;10632:28;10688:2;10683:3;10679:12;10672:19;;10470:227;;;;10706:325;;10866:67;10930:2;10925:3;10866:67;;;10859:74;;10966:27;10962:1;10957:3;10953:11;10946:48;11022:2;11017:3;11013:12;11006:19;;10852:179;;;;11040:381;;11200:67;11264:2;11259:3;11200:67;;;11193:74;;11300:34;11296:1;11291:3;11287:11;11280:55;11369:14;11364:2;11359:3;11355:12;11348:36;11412:2;11407:3;11403:12;11396:19;;11186:235;;;;11430:393;;11590:67;11654:2;11649:3;11590:67;;;11583:74;;11690:34;11686:1;11681:3;11677:11;11670:55;11759:26;11754:2;11749:3;11745:12;11738:48;11814:2;11809:3;11805:12;11798:19;;11576:247;;;;11832:379;;11992:67;12056:2;12051:3;11992:67;;;11985:74;;12092:34;12088:1;12083:3;12079:11;12072:55;12161:12;12156:2;12151:3;12147:12;12140:34;12202:2;12197:3;12193:12;12186:19;;11978:233;;;;12220:378;;12380:67;12444:2;12439:3;12380:67;;;12373:74;;12480:34;12476:1;12471:3;12467:11;12460:55;12549:11;12544:2;12539:3;12535:12;12528:33;12589:2;12584:3;12580:12;12573:19;;12366:232;;;;12607:332;;12767:67;12831:2;12826:3;12767:67;;;12760:74;;12867:34;12863:1;12858:3;12854:11;12847:55;12930:2;12925:3;12921:12;12914:19;;12753:186;;;;12948:381;;13108:67;13172:2;13167:3;13108:67;;;13101:74;;13208:34;13204:1;13199:3;13195:11;13188:55;13277:14;13272:2;13267:3;13263:12;13256:36;13320:2;13315:3;13311:12;13304:19;;13094:235;;;;13338:332;;13498:67;13562:2;13557:3;13498:67;;;13491:74;;13598:34;13594:1;13589:3;13585:11;13578:55;13661:2;13656:3;13652:12;13645:19;;13484:186;;;;13679:383;;13839:67;13903:2;13898:3;13839:67;;;13832:74;;13939:34;13935:1;13930:3;13926:11;13919:55;14008:16;14003:2;13998:3;13994:12;13987:38;14053:2;14048:3;14044:12;14037:19;;13825:237;;;;14071:378;;14231:67;14295:2;14290:3;14231:67;;;14224:74;;14331:34;14327:1;14322:3;14318:11;14311:55;14400:11;14395:2;14390:3;14386:12;14379:33;14440:2;14435:3;14431:12;14424:19;;14217:232;;;;14458:384;;14618:67;14682:2;14677:3;14618:67;;;14611:74;;14718:34;14714:1;14709:3;14705:11;14698:55;14787:17;14782:2;14777:3;14773:12;14766:39;14833:2;14828:3;14824:12;14817:19;;14604:238;;;;14851:370;;15011:67;15075:2;15070:3;15011:67;;;15004:74;;15111:34;15107:1;15102:3;15098:11;15091:55;15180:3;15175:2;15170:3;15166:12;15159:25;15212:2;15207:3;15203:12;15196:19;;14997:224;;;;15230:386;;15390:67;15454:2;15449:3;15390:67;;;15383:74;;15490:34;15486:1;15481:3;15477:11;15470:55;15559:19;15554:2;15549:3;15545:12;15538:41;15607:2;15602:3;15598:12;15591:19;;15376:240;;;;15625:381;;15785:67;15849:2;15844:3;15785:67;;;15778:74;;15885:34;15881:1;15876:3;15872:11;15865:55;15954:14;15949:2;15944:3;15940:12;15933:36;15997:2;15992:3;15988:12;15981:19;;15771:235;;;;16015:377;;16175:67;16239:2;16234:3;16175:67;;;16168:74;;16275:34;16271:1;16266:3;16262:11;16255:55;16344:10;16339:2;16334:3;16330:12;16323:32;16383:2;16378:3;16374:12;16367:19;;16161:231;;;;16400:113;16483:24;16501:5;16483:24;;;16478:3;16471:37;16465:48;;;16520:121;16611:24;16629:5;16611:24;;;16606:3;16599:37;16593:48;;;16648:213;;16766:2;16755:9;16751:18;16743:26;;16780:71;16848:1;16837:9;16833:17;16824:6;16780:71;;;16737:124;;;;;16868:647;;17096:3;17085:9;17081:19;17073:27;;17111:79;17187:1;17176:9;17172:17;17163:6;17111:79;;;17201:72;17269:2;17258:9;17254:18;17245:6;17201:72;;;17284;17352:2;17341:9;17337:18;17328:6;17284:72;;;17404:9;17398:4;17394:20;17389:2;17378:9;17374:18;17367:48;17429:76;17500:4;17491:6;17429:76;;;17421:84;;17067:448;;;;;;;;17522:201;;17634:2;17623:9;17619:18;17611:26;;17648:65;17710:1;17699:9;17695:17;17686:6;17648:65;;;17605:118;;;;;17730:293;;17864:2;17853:9;17849:18;17841:26;;17914:9;17908:4;17904:20;17900:1;17889:9;17885:17;17878:47;17939:74;18008:4;17999:6;17939:74;;;17931:82;;17835:188;;;;;18030:301;;18168:2;18157:9;18153:18;18145:26;;18218:9;18212:4;18208:20;18204:1;18193:9;18189:17;18182:47;18243:78;18316:4;18307:6;18243:78;;;18235:86;;18139:192;;;;;18338:407;;18529:2;18518:9;18514:18;18506:26;;18579:9;18573:4;18569:20;18565:1;18554:9;18550:17;18543:47;18604:131;18730:4;18604:131;;;18596:139;;18500:245;;;;18752:407;;18943:2;18932:9;18928:18;18920:26;;18993:9;18987:4;18983:20;18979:1;18968:9;18964:17;18957:47;19018:131;19144:4;19018:131;;;19010:139;;18914:245;;;;19166:407;;19357:2;19346:9;19342:18;19334:26;;19407:9;19401:4;19397:20;19393:1;19382:9;19378:17;19371:47;19432:131;19558:4;19432:131;;;19424:139;;19328:245;;;;19580:407;;19771:2;19760:9;19756:18;19748:26;;19821:9;19815:4;19811:20;19807:1;19796:9;19792:17;19785:47;19846:131;19972:4;19846:131;;;19838:139;;19742:245;;;;19994:407;;20185:2;20174:9;20170:18;20162:26;;20235:9;20229:4;20225:20;20221:1;20210:9;20206:17;20199:47;20260:131;20386:4;20260:131;;;20252:139;;20156:245;;;;20408:407;;20599:2;20588:9;20584:18;20576:26;;20649:9;20643:4;20639:20;20635:1;20624:9;20620:17;20613:47;20674:131;20800:4;20674:131;;;20666:139;;20570:245;;;;20822:407;;21013:2;21002:9;20998:18;20990:26;;21063:9;21057:4;21053:20;21049:1;21038:9;21034:17;21027:47;21088:131;21214:4;21088:131;;;21080:139;;20984:245;;;;21236:407;;21427:2;21416:9;21412:18;21404:26;;21477:9;21471:4;21467:20;21463:1;21452:9;21448:17;21441:47;21502:131;21628:4;21502:131;;;21494:139;;21398:245;;;;21650:407;;21841:2;21830:9;21826:18;21818:26;;21891:9;21885:4;21881:20;21877:1;21866:9;21862:17;21855:47;21916:131;22042:4;21916:131;;;21908:139;;21812:245;;;;22064:407;;22255:2;22244:9;22240:18;22232:26;;22305:9;22299:4;22295:20;22291:1;22280:9;22276:17;22269:47;22330:131;22456:4;22330:131;;;22322:139;;22226:245;;;;22478:407;;22669:2;22658:9;22654:18;22646:26;;22719:9;22713:4;22709:20;22705:1;22694:9;22690:17;22683:47;22744:131;22870:4;22744:131;;;22736:139;;22640:245;;;;22892:407;;23083:2;23072:9;23068:18;23060:26;;23133:9;23127:4;23123:20;23119:1;23108:9;23104:17;23097:47;23158:131;23284:4;23158:131;;;23150:139;;23054:245;;;;23306:407;;23497:2;23486:9;23482:18;23474:26;;23547:9;23541:4;23537:20;23533:1;23522:9;23518:17;23511:47;23572:131;23698:4;23572:131;;;23564:139;;23468:245;;;;23720:407;;23911:2;23900:9;23896:18;23888:26;;23961:9;23955:4;23951:20;23947:1;23936:9;23932:17;23925:47;23986:131;24112:4;23986:131;;;23978:139;;23882:245;;;;24134:407;;24325:2;24314:9;24310:18;24302:26;;24375:9;24369:4;24365:20;24361:1;24350:9;24346:17;24339:47;24400:131;24526:4;24400:131;;;24392:139;;24296:245;;;;24548:407;;24739:2;24728:9;24724:18;24716:26;;24789:9;24783:4;24779:20;24775:1;24764:9;24760:17;24753:47;24814:131;24940:4;24814:131;;;24806:139;;24710:245;;;;24962:407;;25153:2;25142:9;25138:18;25130:26;;25203:9;25197:4;25193:20;25189:1;25178:9;25174:17;25167:47;25228:131;25354:4;25228:131;;;25220:139;;25124:245;;;;25376:407;;25567:2;25556:9;25552:18;25544:26;;25617:9;25611:4;25607:20;25603:1;25592:9;25588:17;25581:47;25642:131;25768:4;25642:131;;;25634:139;;25538:245;;;;25790:407;;25981:2;25970:9;25966:18;25958:26;;26031:9;26025:4;26021:20;26017:1;26006:9;26002:17;25995:47;26056:131;26182:4;26056:131;;;26048:139;;25952:245;;;;26204:407;;26395:2;26384:9;26380:18;26372:26;;26445:9;26439:4;26435:20;26431:1;26420:9;26416:17;26409:47;26470:131;26596:4;26470:131;;;26462:139;;26366:245;;;;26618:407;;26809:2;26798:9;26794:18;26786:26;;26859:9;26853:4;26849:20;26845:1;26834:9;26830:17;26823:47;26884:131;27010:4;26884:131;;;26876:139;;26780:245;;;;27032:213;;27150:2;27139:9;27135:18;27127:26;;27164:71;27232:1;27221:9;27217:17;27208:6;27164:71;;;27121:124;;;;;27252:229;;27378:2;27367:9;27363:18;27355:26;;27392:79;27468:1;27457:9;27453:17;27444:6;27392:79;;;27349:132;;;;;27488:256;;27550:2;27544:9;27534:19;;27588:4;27580:6;27576:17;27687:6;27675:10;27672:22;27651:18;27639:10;27636:34;27633:62;27630:2;;;27708:1;27705;27698:12;27630:2;27728:10;27724:2;27717:22;27528:216;;;;;27751:321;;27894:18;27886:6;27883:30;27880:2;;;27926:1;27923;27916:12;27880:2;27993:4;27989:9;27982:4;27974:6;27970:17;27966:33;27958:41;;28057:4;28051;28047:15;28039:23;;27817:255;;;;28079:322;;28223:18;28215:6;28212:30;28209:2;;;28255:1;28252;28245:12;28209:2;28322:4;28318:9;28311:4;28303:6;28299:17;28295:33;28287:41;;28386:4;28380;28376:15;28368:23;;28146:255;;;;28408:121;;28501:5;28495:12;28485:22;;28466:63;;;;28536:118;;28626:5;28620:12;28610:22;;28591:63;;;;28661:122;;28755:5;28749:12;28739:22;;28720:63;;;;28791:162;;28905:6;28900:3;28893:19;28942:4;28937:3;28933:14;28918:29;;28886:67;;;;;28962:163;;29077:6;29072:3;29065:19;29114:4;29109:3;29105:14;29090:29;;29058:67;;;;;29133:91;;29195:24;29213:5;29195:24;;;29184:35;;29178:46;;;;29231:85;;29304:5;29297:13;29290:21;29279:32;;29273:43;;;;29323:144;;29395:66;29388:5;29384:78;29373:89;;29367:100;;;;29474:121;;29547:42;29540:5;29536:54;29525:65;;29519:76;;;;29602:72;;29664:5;29653:16;;29647:27;;;;29681:129;;29768:37;29799:5;29768:37;;;29755:50;;29749:61;;;;29817:121;;29896:37;29927:5;29896:37;;;29883:50;;29877:61;;;;29945:108;;30024:24;30042:5;30024:24;;;30011:37;;30005:48;;;;30061:145;30142:6;30137:3;30132;30119:30;30198:1;30189:6;30184:3;30180:16;30173:27;30112:94;;;;30215:268;30280:1;30287:101;30301:6;30298:1;30295:13;30287:101;;;30377:1;30372:3;30368:11;30362:18;30358:1;30353:3;30349:11;30342:39;30323:2;30320:1;30316:10;30311:15;;30287:101;;;30403:6;30400:1;30397:13;30394:2;;;30468:1;30459:6;30454:3;30450:16;30443:27;30394:2;30264:219;;;;;30491:97;;30579:2;30575:7;30570:2;30563:5;30559:14;30555:28;30545:38;;30539:49;;;;30596:117;30665:24;30683:5;30665:24;;;30658:5;30655:35;30645:2;;30704:1;30701;30694:12;30645:2;30639:74;;30720:111;30786:21;30801:5;30786:21;;;30779:5;30776:32;30766:2;;30822:1;30819;30812:12;30766:2;30760:71;;30838:115;30906:23;30923:5;30906:23;;;30899:5;30896:34;30886:2;;30944:1;30941;30934:12;30886:2;30880:73;;30960:117;31029:24;31047:5;31029:24;;;31022:5;31019:35;31009:2;;31068:1;31065;31058:12;31009:2;31003:74;",
  "source": "pragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"../../common/IStartrailRegistry.sol\";\nimport \"../../lib/contracts/IDGenerator.sol\";\nimport \"../../lib/contracts/Signature.sol\";\nimport \"../../common/IRootLogic.sol\";\nimport \"../../common/IStartrailValidator.sol\";\nimport \"../../name/contracts/NameRegistry.sol\";\nimport \"../../name/contracts/Contracts.sol\";\n\ncontract StartrailRegistry is\n  Initializable,\n  Ownable,\n  ERC721Full,\n  IStartrailRegistry,\n  IStartrailValidator,\n  Contracts\n{\n  /*\n   * State variables\n   */\n  uint256 private idNonce;\n\n  /*\n   * Storage\n   */\n  address private _nameRegistryAddress;\n\n  /**\n   * @dev Initializes the StartrailRegistry\n   * @param name string of the name\n   * @param symbol string of the symbol\n   * @param nameRegistry address of the NameRegistry contract\n   */\n  function initialize(\n    string memory name,\n    string memory symbol,\n    address nameRegistry\n  ) public initializer {\n    ERC721.initialize();\n    ERC721Enumerable.initialize();\n    ERC721Metadata.initialize(name, symbol);\n    _nameRegistryAddress = nameRegistry;\n    idNonce = 1;\n    Ownable.initialize(msg.sender);\n  }\n\n  /**\n   * @dev Creates a new StartrailRegistryRecordID\n   * @param sender address of the sender\n   */\n  function mint(address sender)\n    external\n    onlyRootLogic(_rootLogicAddress())\n    returns (uint256)\n  {\n    idNonce += 1;\n    uint256 tokenId = IDGenerator.generate(idNonce);\n    super._mint(sender, tokenId);\n    return tokenId;\n  }\n\n  /**\n   * @dev Transfers the ownership of a given SRR ID to another address.\n   * @param from address of the current owner\n   * @param to address to receive the ownership\n   * @param tokenId uint256 ID of the SRR to be transferred\n   */\n  function transferSRRFrom(\n    address from,\n    address to,\n    uint256 tokenId\n  ) public onlyRootLogic(_rootLogicAddress()) {\n    super._transferFrom(from, to, tokenId);\n  }\n\n  /**\n   * @dev Sets the address of the NameRegistry contract\n   * @param nameRegistry address of the NameRegistry contract\n   */\n  function setNameRegistry(address nameRegistry) public onlyOwner {\n    _nameRegistryAddress = nameRegistry;\n  }\n\n  /**\n   * @dev Gets the endpoint address of the RootLogic\n   * @return RootLogic proxy address\n   */\n  function getRootLogicAddress() public view returns (address) {\n    return _rootLogicAddress();\n  }\n\n  /**\n   * @dev Gets the endpoint address of NameRegistry\n   * @return NameRegistry proxy address\n   */\n  function getNameRegistryAddress() public view returns (address) {\n    return _nameRegistryAddress;\n  }\n\n  /**\n   * @dev Gets the owner address of the SRR\n   * @param tokenId uint256 of the SRR ID\n   * @return owner address\n   */\n  function getSRROwner(uint256 tokenId) public view returns (address) {\n    return super.ownerOf(tokenId);\n  }\n\n  /**\n   * @dev Gets the nonce from the storage\n   * @return idNonce from storage\n   */\n  function getIdNonce() public view returns (uint256) {\n    return idNonce;\n  }\n\n  function _nameRegistry() private view returns (NameRegistry) {\n    return NameRegistry(_nameRegistryAddress);\n  }\n\n  function _rootLogicAddress() private view returns (address) {\n    address rootLogicAddress = _nameRegistry().get(ROOT_LOGIC);\n    return rootLogicAddress;\n  }\n\n  // **************************\n  // scope out for Day1\n  // **************************\n\n  // /**\n  //  * @dev transfers StartrailRegistry\n  //  * @param to address of the receiver\n  //  * @param tokenId uint256 of StartrailRegistryRecordID\n  //  * @param sig signature\n  //  */\n  // function transferSRRFrom(\n  //   address to,\n  //   uint256 tokenId,\n  //   Signature.Sig memory sig\n  // ) public validSender(sig) {\n  //   address signer = Signature.getAddress(sig);\n  //   require(ownerOf(tokenId) == signer, \"owner and signer do not match\");\n  //   super._transferFrom(signer, to, tokenId);\n\n  //   emit TransferSRRFrom(signer, to, tokenId);\n  // }\n\n  // /**\n  //  * @dev transfers StartrailRegistry\n  //  * @param from address of the current token owner\n  //  * @param to address of the receiver\n  //  * @param tokenId uint256 of StartrailRegistryRecordID\n  //  * @param _data bytes of private metadata\n  //  */\n  // function safeTransferSRRFrom(\n  //   address from,\n  //   address to,\n  //   uint256 tokenId,\n  //   bytes memory _data\n  // ) public {\n  //   super._safeTransferFrom(from, to, tokenId, _data);\n  //   emit SafeTransferSRRFrom(from, to, tokenId, _data);\n  //   address newOnwer = ownerOf(tokenId);\n  //   IRootLogic logic = IRootLogic(_rootLogicContract);\n  //   // logic.historyProvenance(tokenId, newOnwer, from, _data);\n  // }\n}\n",
  "sourcePath": "/root/project/app/token/contracts/StartrailRegistry.sol",
  "ast": {
    "absolutePath": "/root/project/app/token/contracts/StartrailRegistry.sol",
    "exportedSymbols": {
      "StartrailRegistry": [
        687
      ]
    },
    "id": 688,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 485,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 486,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "id": 487,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 2275,
        "src": "59:88:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 488,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 1230,
        "src": "148:82:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 489,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 2754,
        "src": "231:60:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/common/IStartrailRegistry.sol",
        "file": "../../common/IStartrailRegistry.sol",
        "id": 490,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 251,
        "src": "292:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/lib/contracts/IDGenerator.sol",
        "file": "../../lib/contracts/IDGenerator.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 337,
        "src": "338:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/lib/contracts/Signature.sol",
        "file": "../../lib/contracts/Signature.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 351,
        "src": "384:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/common/IRootLogic.sol",
        "file": "../../common/IRootLogic.sol",
        "id": 493,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 223,
        "src": "428:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/common/IStartrailValidator.sol",
        "file": "../../common/IStartrailValidator.sol",
        "id": 494,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 307,
        "src": "466:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/name/contracts/NameRegistry.sol",
        "file": "../../name/contracts/NameRegistry.sol",
        "id": 495,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 427,
        "src": "513:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 496,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 375,
        "src": "561:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 497,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2753,
              "src": "639:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2753",
                "typeString": "contract Initializable"
              }
            },
            "id": 498,
            "nodeType": "InheritanceSpecifier",
            "src": "639:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 499,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1229,
              "src": "656:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1229",
                "typeString": "contract Ownable"
              }
            },
            "id": 500,
            "nodeType": "InheritanceSpecifier",
            "src": "656:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 501,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2274,
              "src": "667:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2274",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 502,
            "nodeType": "InheritanceSpecifier",
            "src": "667:10:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 503,
              "name": "IStartrailRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 250,
              "src": "681:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailRegistry_$250",
                "typeString": "contract IStartrailRegistry"
              }
            },
            "id": 504,
            "nodeType": "InheritanceSpecifier",
            "src": "681:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 505,
              "name": "IStartrailValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 306,
              "src": "703:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailValidator_$306",
                "typeString": "contract IStartrailValidator"
              }
            },
            "id": 506,
            "nodeType": "InheritanceSpecifier",
            "src": "703:19:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 507,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 374,
              "src": "726:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$374",
                "typeString": "contract Contracts"
              }
            },
            "id": 508,
            "nodeType": "InheritanceSpecifier",
            "src": "726:9:8"
          }
        ],
        "contractDependencies": [
          250,
          306,
          374,
          717,
          908,
          918,
          1229,
          1890,
          2255,
          2274,
          2431,
          2537,
          2567,
          2593,
          2753
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 687,
        "linearizedBaseContracts": [
          687,
          374,
          306,
          250,
          2274,
          2431,
          2593,
          2255,
          2567,
          1890,
          2537,
          908,
          918,
          1229,
          717,
          2753
        ],
        "name": "StartrailRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 510,
            "name": "idNonce",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "772:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 509,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "772:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 512,
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "824:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 511,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "824:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "1178:204:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "1184:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1890_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1295,
                      "src": "1184:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:19:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "1209:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2255_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1942,
                      "src": "1209:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:29:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 536,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1270:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 537,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 533,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "1244:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2431_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2330,
                      "src": "1244:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:39:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 540,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "1289:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 541,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "1312:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1330:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1340:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1330:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:11:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2768,
                          "src": "1366:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1366:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "1347:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$1229_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1140,
                      "src": "1347:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:30:8"
                }
              ]
            },
            "documentation": "@dev Initializes the StartrailRegistry\n@param name string of the name\n@param symbol string of the symbol\n@param nameRegistry address of the NameRegistry contract",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2728,
                  "src": "1166:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1166:11:8"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1084:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1108:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1134:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:80:8"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:8"
            },
            "scope": 687,
            "src": "1059:323:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "1595:130:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1601:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1612:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1601:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:12:8"
                },
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 587,
                      "src": "1619:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 577,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 575,
                        "name": "idNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "1658:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "IDGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "1637:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDGenerator_$336_$",
                          "typeString": "type(library IDGenerator)"
                        }
                      },
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "generate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 335,
                      "src": "1637:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 581,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "1684:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "1692:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "1672:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_StartrailRegistry_$687",
                          "typeString": "contract super StartrailRegistry"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2058,
                      "src": "1672:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 585,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 572,
                    "src": "1713:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "1706:14:8"
                }
              ]
            },
            "documentation": "@dev Creates a new StartrailRegistryRecordID\n@param sender address of the sender",
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 561,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "1550:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 563,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 560,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 305,
                  "src": "1536:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1536:34:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "1503:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1502:16:8"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "1584:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1583:9:8"
            },
            "scope": 687,
            "src": "1489:236:8",
            "stateMutability": "nonpayable",
            "superFunction": 233,
            "visibility": "external"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "2093:49:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "2119:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "2125:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "2129:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "2099:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_StartrailRegistry_$687",
                          "typeString": "contract super StartrailRegistry"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2034,
                      "src": "2099:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:38:8"
                }
              ]
            },
            "documentation": "@dev Transfers the ownership of a given SRR ID to another address.\n@param from address of the current owner\n@param to address to receive the ownership\n@param tokenId uint256 ID of the SRR to be transferred",
            "id": 610,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 597,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "2072:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 599,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 596,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 305,
                  "src": "2058:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:34:8"
              }
            ],
            "name": "transferSRRFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "1997:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "2015:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "2031:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1991:59:8"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2093:0:8"
            },
            "scope": 687,
            "src": "1967:175:8",
            "stateMutability": "nonpayable",
            "superFunction": 242,
            "visibility": "public"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "2340:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 617,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "2346:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 618,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "2369:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2346:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:35:8"
                }
              ]
            },
            "documentation": "@dev Sets the address of the NameRegistry contract\n@param nameRegistry address of the NameRegistry contract",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 615,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 614,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1158,
                  "src": "2330:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2330:9:8"
              }
            ],
            "name": "setNameRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "2301:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2300:22:8"
            },
            "returnParameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:0:8"
            },
            "scope": 687,
            "src": "2276:110:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "2553:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 627,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "2566:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 626,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "2559:26:8"
                }
              ]
            },
            "documentation": "@dev Gets the endpoint address of the RootLogic\n@return RootLogic proxy address",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:8"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "2544:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2543:9:8"
            },
            "scope": 687,
            "src": "2492:98:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "2762:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 512,
                    "src": "2775:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 635,
                  "id": 637,
                  "nodeType": "Return",
                  "src": "2768:27:8"
                }
              ]
            },
            "documentation": "@dev Gets the endpoint address of NameRegistry\n@return NameRegistry proxy address",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2729:2:8"
            },
            "returnParameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "2753:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2752:9:8"
            },
            "scope": 687,
            "src": "2698:102:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "2997:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "3024:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "3010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_StartrailRegistry_$687",
                          "typeString": "contract super StartrailRegistry"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1353,
                      "src": "3010:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3010:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 645,
                  "id": 650,
                  "nodeType": "Return",
                  "src": "3003:29:8"
                }
              ]
            },
            "documentation": "@dev Gets the owner address of the SRR\n@param tokenId uint256 of the SRR ID\n@return owner address",
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSRROwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2950:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2949:17:8"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2988:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2988:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2987:9:8"
            },
            "scope": 687,
            "src": "2929:108:8",
            "stateMutability": "view",
            "superFunction": 249,
            "visibility": "public"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "3181:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 657,
                    "name": "idNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 510,
                    "src": "3194:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 658,
                  "nodeType": "Return",
                  "src": "3187:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the nonce from the storage\n@return idNonce from storage",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3148:2:8"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3172:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3171:9:8"
            },
            "scope": 687,
            "src": "3129:77:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "3271:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "3297:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 665,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "3284:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$426_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$426",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 664,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "3277:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:2:8"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "3257:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$426",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 662,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 426,
                    "src": "3257:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$426",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3256:14:8"
            },
            "scope": 687,
            "src": "3210:113:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "3387:98:8",
              "statements": [
                {
                  "assignments": [
                    676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 676,
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "3393:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 675,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3393:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 682,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 680,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3440:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 677,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "3420:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$426_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3420:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$426",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "3420:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3420:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3393:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 683,
                    "name": "rootLogicAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 676,
                    "src": "3464:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "3457:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3353:2:8"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "3378:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3377:9:8"
            },
            "scope": 687,
            "src": "3327:158:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 688,
        "src": "607:4232:8"
      }
    ],
    "src": "0:4840:8"
  },
  "legacyAST": {
    "absolutePath": "/root/project/app/token/contracts/StartrailRegistry.sol",
    "exportedSymbols": {
      "StartrailRegistry": [
        687
      ]
    },
    "id": 688,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 485,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "id": 486,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Full.sol",
        "id": 487,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 2275,
        "src": "59:88:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
        "id": 488,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 1230,
        "src": "148:82:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 489,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 2754,
        "src": "231:60:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/common/IStartrailRegistry.sol",
        "file": "../../common/IStartrailRegistry.sol",
        "id": 490,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 251,
        "src": "292:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/lib/contracts/IDGenerator.sol",
        "file": "../../lib/contracts/IDGenerator.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 337,
        "src": "338:45:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/lib/contracts/Signature.sol",
        "file": "../../lib/contracts/Signature.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 351,
        "src": "384:43:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/common/IRootLogic.sol",
        "file": "../../common/IRootLogic.sol",
        "id": 493,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 223,
        "src": "428:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/common/IStartrailValidator.sol",
        "file": "../../common/IStartrailValidator.sol",
        "id": 494,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 307,
        "src": "466:46:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/name/contracts/NameRegistry.sol",
        "file": "../../name/contracts/NameRegistry.sol",
        "id": 495,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 427,
        "src": "513:47:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/project/app/name/contracts/Contracts.sol",
        "file": "../../name/contracts/Contracts.sol",
        "id": 496,
        "nodeType": "ImportDirective",
        "scope": 688,
        "sourceUnit": 375,
        "src": "561:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 497,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2753,
              "src": "639:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2753",
                "typeString": "contract Initializable"
              }
            },
            "id": 498,
            "nodeType": "InheritanceSpecifier",
            "src": "639:13:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 499,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1229,
              "src": "656:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1229",
                "typeString": "contract Ownable"
              }
            },
            "id": 500,
            "nodeType": "InheritanceSpecifier",
            "src": "656:7:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 501,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2274,
              "src": "667:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2274",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 502,
            "nodeType": "InheritanceSpecifier",
            "src": "667:10:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 503,
              "name": "IStartrailRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 250,
              "src": "681:18:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailRegistry_$250",
                "typeString": "contract IStartrailRegistry"
              }
            },
            "id": 504,
            "nodeType": "InheritanceSpecifier",
            "src": "681:18:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 505,
              "name": "IStartrailValidator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 306,
              "src": "703:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStartrailValidator_$306",
                "typeString": "contract IStartrailValidator"
              }
            },
            "id": 506,
            "nodeType": "InheritanceSpecifier",
            "src": "703:19:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 507,
              "name": "Contracts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 374,
              "src": "726:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Contracts_$374",
                "typeString": "contract Contracts"
              }
            },
            "id": 508,
            "nodeType": "InheritanceSpecifier",
            "src": "726:9:8"
          }
        ],
        "contractDependencies": [
          250,
          306,
          374,
          717,
          908,
          918,
          1229,
          1890,
          2255,
          2274,
          2431,
          2537,
          2567,
          2593,
          2753
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 687,
        "linearizedBaseContracts": [
          687,
          374,
          306,
          250,
          2274,
          2431,
          2593,
          2255,
          2567,
          1890,
          2537,
          908,
          918,
          1229,
          717,
          2753
        ],
        "name": "StartrailRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 510,
            "name": "idNonce",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "772:23:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 509,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "772:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 512,
            "name": "_nameRegistryAddress",
            "nodeType": "VariableDeclaration",
            "scope": 687,
            "src": "824:36:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 511,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "824:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "1178:204:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "1184:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1890_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1295,
                      "src": "1184:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:19:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "1209:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$2255_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1942,
                      "src": "1209:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:29:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 536,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "1270:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 537,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 516,
                        "src": "1276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 533,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "1244:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$2431_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2330,
                      "src": "1244:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:39:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 540,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "1289:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 541,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 518,
                      "src": "1312:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1289:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1330:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1340:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1330:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:11:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2768,
                          "src": "1366:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1366:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "1347:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$1229_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1140,
                      "src": "1347:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 554,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:30:8"
                }
              ]
            },
            "documentation": "@dev Initializes the StartrailRegistry\n@param name string of the name\n@param symbol string of the symbol\n@param nameRegistry address of the NameRegistry contract",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 521,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 520,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2728,
                  "src": "1166:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1166:11:8"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1084:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1108:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 518,
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1134:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:80:8"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:8"
            },
            "scope": 687,
            "src": "1059:323:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "1595:130:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 567,
                      "name": "idNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "1601:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1612:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1601:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:12:8"
                },
                {
                  "assignments": [
                    572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 572,
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "scope": 587,
                      "src": "1619:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 577,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 575,
                        "name": "idNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "1658:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "IDGenerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "1637:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDGenerator_$336_$",
                          "typeString": "type(library IDGenerator)"
                        }
                      },
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "generate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 335,
                      "src": "1637:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:47:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 581,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "1684:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 572,
                        "src": "1692:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "1672:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_StartrailRegistry_$687",
                          "typeString": "contract super StartrailRegistry"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2058,
                      "src": "1672:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 585,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 572,
                    "src": "1713:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "1706:14:8"
                }
              ]
            },
            "documentation": "@dev Creates a new StartrailRegistryRecordID\n@param sender address of the sender",
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 561,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "1550:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 563,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 560,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 305,
                  "src": "1536:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1536:34:8"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 558,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "1503:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1502:16:8"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "1584:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1583:9:8"
            },
            "scope": 687,
            "src": "1489:236:8",
            "stateMutability": "nonpayable",
            "superFunction": 233,
            "visibility": "external"
          },
          {
            "body": {
              "id": 609,
              "nodeType": "Block",
              "src": "2093:49:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 604,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 590,
                        "src": "2119:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "2125:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 606,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "2129:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "2099:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_StartrailRegistry_$687",
                          "typeString": "contract super StartrailRegistry"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2034,
                      "src": "2099:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:38:8"
                }
              ]
            },
            "documentation": "@dev Transfers the ownership of a given SRR ID to another address.\n@param from address of the current owner\n@param to address to receive the ownership\n@param tokenId uint256 ID of the SRR to be transferred",
            "id": 610,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 597,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "2072:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 599,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 596,
                  "name": "onlyRootLogic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 305,
                  "src": "2058:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2058:34:8"
              }
            ],
            "name": "transferSRRFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "1997:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "2015:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 610,
                  "src": "2031:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1991:59:8"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2093:0:8"
            },
            "scope": 687,
            "src": "1967:175:8",
            "stateMutability": "nonpayable",
            "superFunction": 242,
            "visibility": "public"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "2340:46:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 617,
                      "name": "_nameRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "2346:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 618,
                      "name": "nameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "2369:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2346:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 620,
                  "nodeType": "ExpressionStatement",
                  "src": "2346:35:8"
                }
              ]
            },
            "documentation": "@dev Sets the address of the NameRegistry contract\n@param nameRegistry address of the NameRegistry contract",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 615,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 614,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1158,
                  "src": "2330:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2330:9:8"
              }
            ],
            "name": "setNameRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "name": "nameRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 622,
                  "src": "2301:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2300:22:8"
            },
            "returnParameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2340:0:8"
            },
            "scope": 687,
            "src": "2276:110:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "2553:37:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 627,
                      "name": "_rootLogicAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "2566:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 626,
                  "id": 629,
                  "nodeType": "Return",
                  "src": "2559:26:8"
                }
              ]
            },
            "documentation": "@dev Gets the endpoint address of the RootLogic\n@return RootLogic proxy address",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRootLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:8"
            },
            "returnParameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 625,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "2544:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2543:9:8"
            },
            "scope": 687,
            "src": "2492:98:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "2762:38:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 636,
                    "name": "_nameRegistryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 512,
                    "src": "2775:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 635,
                  "id": 637,
                  "nodeType": "Return",
                  "src": "2768:27:8"
                }
              ]
            },
            "documentation": "@dev Gets the endpoint address of NameRegistry\n@return NameRegistry proxy address",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNameRegistryAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2729:2:8"
            },
            "returnParameters": {
              "id": 635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 634,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "2753:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2752:9:8"
            },
            "scope": 687,
            "src": "2698:102:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 651,
              "nodeType": "Block",
              "src": "2997:40:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "3024:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2833,
                        "src": "3010:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_StartrailRegistry_$687",
                          "typeString": "contract super StartrailRegistry"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1353,
                      "src": "3010:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3010:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 645,
                  "id": 650,
                  "nodeType": "Return",
                  "src": "3003:29:8"
                }
              ]
            },
            "documentation": "@dev Gets the owner address of the SRR\n@param tokenId uint256 of the SRR ID\n@return owner address",
            "id": 652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSRROwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2950:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2949:17:8"
            },
            "returnParameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 644,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "2988:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2988:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2987:9:8"
            },
            "scope": 687,
            "src": "2929:108:8",
            "stateMutability": "view",
            "superFunction": 249,
            "visibility": "public"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "3181:25:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 657,
                    "name": "idNonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 510,
                    "src": "3194:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 658,
                  "nodeType": "Return",
                  "src": "3187:14:8"
                }
              ]
            },
            "documentation": "@dev Gets the nonce from the storage\n@return idNonce from storage",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIdNonce",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3148:2:8"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "3172:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3172:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3171:9:8"
            },
            "scope": 687,
            "src": "3129:77:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 669,
              "nodeType": "Block",
              "src": "3271:52:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 666,
                        "name": "_nameRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "3297:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 665,
                      "name": "NameRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "3284:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_NameRegistry_$426_$",
                        "typeString": "type(contract NameRegistry)"
                      }
                    },
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3284:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$426",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "functionReturnParameters": 664,
                  "id": 668,
                  "nodeType": "Return",
                  "src": "3277:41:8"
                }
              ]
            },
            "documentation": null,
            "id": 670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nameRegistry",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:2:8"
            },
            "returnParameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 670,
                  "src": "3257:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NameRegistry_$426",
                    "typeString": "contract NameRegistry"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 662,
                    "name": "NameRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 426,
                    "src": "3257:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NameRegistry_$426",
                      "typeString": "contract NameRegistry"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3256:14:8"
            },
            "scope": 687,
            "src": "3210:113:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "3387:98:8",
              "statements": [
                {
                  "assignments": [
                    676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 676,
                      "name": "rootLogicAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 685,
                      "src": "3393:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 675,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3393:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 682,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 680,
                        "name": "ROOT_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "3440:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 677,
                          "name": "_nameRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "3420:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_NameRegistry_$426_$",
                            "typeString": "function () view returns (contract NameRegistry)"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3420:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NameRegistry_$426",
                          "typeString": "contract NameRegistry"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "3420:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3420:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3393:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 683,
                    "name": "rootLogicAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 676,
                    "src": "3464:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "3457:23:8"
                }
              ]
            },
            "documentation": null,
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_rootLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3353:2:8"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "3378:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3378:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3377:9:8"
            },
            "scope": 687,
            "src": "3327:158:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 688,
        "src": "607:4232:8"
      }
    ],
    "src": "0:4840:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {
        "IDGenerator": "0x155B8664F83f2AF5A902E124F5F57D7BA1a21c7A"
      },
      "address": "0xA2BC201D858509F738f525757E8398E8dC86FBbb",
      "transactionHash": "0x0b1f7b7a399c84299d33c25ab130d0f0bf0438fd5d23ae26b4fa0bc945da0bea"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-08-03T06:29:35.515Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "getIdNonce()": {
        "details": "Gets the nonce from the storage",
        "return": "idNonce from storage"
      },
      "getNameRegistryAddress()": {
        "details": "Gets the endpoint address of NameRegistry",
        "return": "NameRegistry proxy address"
      },
      "getRootLogicAddress()": {
        "details": "Gets the endpoint address of the RootLogic",
        "return": "RootLogic proxy address"
      },
      "getSRROwner(uint256)": {
        "details": "Gets the owner address of the SRR",
        "params": {
          "tokenId": "uint256 of the SRR ID"
        },
        "return": "owner address"
      },
      "initialize()": {
        "details": "Constructor function."
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "initialize(string,string,address)": {
        "details": "Initializes the StartrailRegistry",
        "params": {
          "name": "string of the name",
          "nameRegistry": "address of the NameRegistry contract",
          "symbol": "string of the symbol"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mint(address)": {
        "details": "Creates a new StartrailRegistryRecordID",
        "params": {
          "sender": "address of the sender"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setNameRegistry(address)": {
        "details": "Sets the address of the NameRegistry contract",
        "params": {
          "nameRegistry": "address of the NameRegistry contract"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferSRRFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given SRR ID to another address.",
        "params": {
          "from": "address of the current owner",
          "to": "address to receive the ownership",
          "tokenId": "uint256 ID of the SRR to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}